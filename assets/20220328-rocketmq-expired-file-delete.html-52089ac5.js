import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as u,c as k,a as n,b as s,d as a,w as e,e as c}from"./app-eaa093f0.js";const d={},r={href:"http://hscarb.github.io/rocketmq/20220328-rocketmq-expired-file-delete.html",target:"_blank",rel:"noopener noreferrer"},m=n("h1",{id:"rocketmq-过期文件删除机制-源码剖析",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rocketmq-过期文件删除机制-源码剖析","aria-hidden":"true"},"#"),s(" RocketMQ 过期文件删除机制 源码剖析")],-1),v={class:"table-of-contents"},b=c('<h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1. 背景</h2><p>RocketMQ 的存储文件主要分三种：CommitLog、ConsumeQueue、IndexFile<br> RocketMQ 的过期文件删除机制会定期删除已经过期的存储文件。当磁盘容量告急时，会立刻执行删除，释放磁盘空间。<br> 本文详细分析一下三种存储文件的过期删除机制，避免一些坑。</p><h2 id="_2-概述" tabindex="-1"><a class="header-anchor" href="#_2-概述" aria-hidden="true">#</a> 2. 概述</h2><p>CommitLog、ConsumeQueue 和 IndexFile 的过期文件删除逻辑由一个线程统一处理。<br> 这个线程每 10s 进行一次检查，如果符合删除条件，那么会删除这些文件。</p><ul><li>ConsumeQueue 和 IndexFile 的检查每 10s 都会进行，会删除 CommitLog 投递的偏移量之前的文件。</li><li>CommitLog 的删除比较复杂，当到达每天的删除时间（4 点）或者磁盘空间告急（超过 75%）才会启动删除过期文件；磁盘空间超过 85% 时会强制删除文件，平时不会启动。</li></ul><h2 id="_3-详解" tabindex="-1"><a class="header-anchor" href="#_3-详解" aria-hidden="true">#</a> 3. 详解</h2><h3 id="_3-1-commitlog" tabindex="-1"><a class="header-anchor" href="#_3-1-commitlog" aria-hidden="true">#</a> 3.1 CommitLog</h3><p>CommitLog 是一个由多个 1G 大小的内存映射文件组成的文件队列。</p><p>CommitLog 每个文件有一个过期时间，由 broker.conf 文件中的 <code>fileReservedTime</code> 控制，默认是 72 小时，即 CommitLog 最后一次写入后 72 小时就过期。</p><p>CommitLog 文件删除的条件有以下几种，符合任意一种都会执行删除逻辑</p><ol><li>时间到达 Broker 机器时间的 4 点，在 4 点 ~ 5 点这一小时中每 10s 都会进行检查和删除，删除过期的文件。</li></ol><blockquote><p>这里的 4 点指的是 Broker 机器的时间，一些虚机的时间与现实时间不一致，或者时区不一致，导致删除时间并不是现实时间 4 点开始，需要注意。</p></blockquote><ol><li>在磁盘容量达到 75% 时，开启文件删除。此时会删除过期的 CommitLog。一次最多删 10 个，如果删了之后磁盘容量小于 75%，那么等下次到达 75% 时删。</li><li>磁盘容量达到 85% 时，开启强制删除，会把没有过期文件也删掉。同样一次最多删 10 个。 <ul><li>这里的强制删除并不会马上删除未过期的文件，而是先把 CommitLog 队列的第一个文件 shutdown，shutdown 之后的文件如果引用计数大于 0（被其他线程占用），则仍需要等待 <code>intervalForcibly</code> 时间（默认 2 分钟）后才会被删除。也就是说<strong>每 2 分钟才会强制删除 1 个文件</strong>。</li></ul></li><li>当磁盘容量达到 90% 时，将设置磁盘为不可写，此时会拒绝写入新的消息。</li><li>手动删除。设计上预留了手动删除的接口，但实际没有命令能调用。</li></ol><h3 id="_3-2-consumequeue" tabindex="-1"><a class="header-anchor" href="#_3-2-consumequeue" aria-hidden="true">#</a> 3.2 ConsumeQueue</h3>',14),f=n("p",null,"每隔 10s，文件删除线程就会检查所有 ConsumeQueue，删除该 ConsumeQueue 已经投递过的那些文件。",-1),g=n("h3",{id:"_3-3-indexfile",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-3-indexfile","aria-hidden":"true"},"#"),s(" 3.3 IndexFile")],-1),y=c(`<p>每隔 10s，文件删除线程会检查所有的 IndexFile，比较它的最大 offset 和当前已经投递的 CommitLog offset，把消息全部已经投递的 IndexFile 删除。</p><h2 id="_4-源码解析" tabindex="-1"><a class="header-anchor" href="#_4-源码解析" aria-hidden="true">#</a> 4. 源码解析</h2><p>清理 CommitLog 方法的类是 <code>DefaultMessageStore#CleanCommitLogService</code>，清理 ConsumeQueue 和 IndexFile 共用一个类 <code>DefaultMessageStore#CleanConsumeQueueService</code>，都是 <code>DefaultMessageStore</code> 的内部类。</p><p><code>DefaultMessageStore</code> 启动时调用 <code>start()</code> 方法，会启动过期文件清理的定时任务</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">addScheduleTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// 启动定时清理过期文件线程</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>scheduledExecutorService<span class="token punctuation">.</span><span class="token function">scheduleAtFixedRate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">DefaultMessageStore</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cleanFilesPeriodically</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token comment">// 初始延迟 60s，之后默认每 10s 执行一次</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>messageStoreConfig<span class="token punctuation">.</span><span class="token function">getCleanResourceInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>run()</code> 方法调用 CommitLog 和 ConsumeQueue 的清理方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">cleanFilesPeriodically</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cleanCommitLogService<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cleanConsumeQueueService<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-1-commitlog" tabindex="-1"><a class="header-anchor" href="#_4-1-commitlog" aria-hidden="true">#</a> 4.1 CommitLog</h3><p>先来看一下删除 CommitLog 的条件检查逻辑，触发 CommitLog 清理的条件比较多，满足 3 个条件之一就会触发删除。</p><p>且删除分</p><ul><li>非强制删除：只删除过期的文件（默认过期时间 72h，该文件最后一次写入过后 72h 过期）</li><li>强制删除：会删除未过期的文件</li></ul><p>一次最多删除 10 个文件，也就是说每 10s 最多删除 10 个文件。<br> 4 点 ~ 5 点这个小时都是删除文件的时间窗，并不是仅在 4 点删一次。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">deleteExpiredFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 本次删除的文件数量</span>
    <span class="token keyword">int</span> deleteCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// 文件保留时间，默认72h。如果超出该时间，则认为是过期文件，可以被删除</span>
    <span class="token keyword">long</span> fileReservedTime <span class="token operator">=</span> <span class="token class-name">DefaultMessageStore</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMessageStoreConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFileReservedTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 删除物理文件的时间间隔，默认100ms。在一次删除过程中，删除两个文件的间隔时间</span>
    <span class="token keyword">int</span> deletePhysicFilesInterval <span class="token operator">=</span> <span class="token class-name">DefaultMessageStore</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMessageStoreConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeleteCommitLogFilesInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 第一次拒绝删除之后能保留文件的最大时间，默认120s。</span>
    <span class="token comment">// 在删除文件时，如果该文件被其他线程占用，会阻止删除，同时在第一次试图删除该文件时记录当前时间戳。</span>
    <span class="token comment">// 在保留时间内，文件可以拒绝删除，超过该时间后，会将引用次数设置为负数，文件将被强制删除。</span>
    <span class="token keyword">int</span> destroyMapedFileIntervalForcibly <span class="token operator">=</span> <span class="token class-name">DefaultMessageStore</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMessageStoreConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDestroyMapedFileIntervalForcibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 是满足删除文件的时间（4点）</span>
    <span class="token keyword">boolean</span> timeup <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isTimeToDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 磁盘空间是否不足（75%）</span>
    <span class="token keyword">boolean</span> spacefull <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSpaceToDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 手动删除是否被触发（触发则会设manualDeleteFileSeveralTimes为20，每执行一次删除方法减少一次）</span>
    <span class="token keyword">boolean</span> manualDelete <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>manualDeleteFileSeveralTimes <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token comment">// 满足下列条件之一将继续删除</span>
    <span class="token comment">// 1. 到了设置的每天固定删除时间（4点）</span>
    <span class="token comment">// 2. 磁盘空间不充足，默认为75%</span>
    <span class="token comment">// 3. executeDeleteFilesManually方法被调用，手工删除文件</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeup <span class="token operator">||</span> spacefull <span class="token operator">||</span> manualDelete<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>manualDelete<span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>manualDeleteFileSeveralTimes<span class="token operator">--</span><span class="token punctuation">;</span>

        <span class="token comment">// 是否立即强制删除文件（磁盘空间大于85%为true）</span>
        <span class="token keyword">boolean</span> cleanAtOnce <span class="token operator">=</span> <span class="token class-name">DefaultMessageStore</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMessageStoreConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isCleanFileForciblyEnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cleanImmediately<span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;begin to delete before {} hours file. timeup: {} spacefull: {} manualDeleteFileSeveralTimes: {} cleanAtOnce: {}&quot;</span><span class="token punctuation">,</span>
            fileReservedTime<span class="token punctuation">,</span>
            timeup<span class="token punctuation">,</span>
            spacefull<span class="token punctuation">,</span>
            manualDeleteFileSeveralTimes<span class="token punctuation">,</span>
            cleanAtOnce<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 文件保留时间，默认 72，这里转换成小时</span>
        fileReservedTime <span class="token operator">*=</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>

        <span class="token comment">// 删除成功的文件数量</span>
        deleteCount <span class="token operator">=</span> <span class="token class-name">DefaultMessageStore</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>commitLog<span class="token punctuation">.</span><span class="token function">deleteExpiredFile</span><span class="token punctuation">(</span>fileReservedTime<span class="token punctuation">,</span> deletePhysicFilesInterval<span class="token punctuation">,</span>
            destroyMapedFileIntervalForcibly<span class="token punctuation">,</span> cleanAtOnce<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>deleteCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 危险情况：磁盘满了，但是又无法删除文件</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>spacefull<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;disk space will be full soon, but delete file failed.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>commitLog.deleteExpiredFile()</code> 方法调用了 <code>MappedFileQueue#deleteExpiredFileByTime()</code> 方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 根据文件过期时间来删除文件
 *
 * <span class="token keyword">@param</span> <span class="token parameter">expiredTime</span> 文件过期时间（过期后保留的时间）
 * <span class="token keyword">@param</span> <span class="token parameter">deleteFilesInterval</span> 删除两个文件的间隔
 * <span class="token keyword">@param</span> <span class="token parameter">intervalForcibly</span> 关闭文件过后多久才能强制删除，默认为2分钟
 * <span class="token keyword">@param</span> <span class="token parameter">cleanImmediately</span> 是否强制删除文件
 * <span class="token keyword">@return</span> 删除文件数量
 */</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">deleteExpiredFileByTime</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token keyword">long</span> expiredTime<span class="token punctuation">,</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> deleteFilesInterval<span class="token punctuation">,</span>
    <span class="token keyword">final</span> <span class="token keyword">long</span> intervalForcibly<span class="token punctuation">,</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> cleanImmediately<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> mfs <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">copyMappedFiles</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> mfs<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> mfsLength <span class="token operator">=</span> mfs<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> deleteCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MappedFile</span><span class="token punctuation">&gt;</span></span> files <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MappedFile</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> mfs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> mfsLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MappedFile</span> mappedFile <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MappedFile</span><span class="token punctuation">)</span> mfs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">// 计算文件应该被删除的时间，等于文件最后修改的时间 + 文件过期时间</span>
            <span class="token keyword">long</span> liveMaxTimestamp <span class="token operator">=</span> mappedFile<span class="token punctuation">.</span><span class="token function">getLastModifiedTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> expiredTime<span class="token punctuation">;</span>
            <span class="token comment">// 如果文件过期，或开启强制删除，则删除文件</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> liveMaxTimestamp <span class="token operator">||</span> cleanImmediately<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mappedFile<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span>intervalForcibly<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    files<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mappedFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    deleteCount<span class="token operator">++</span><span class="token punctuation">;</span>

                    <span class="token comment">// 一次最多删除10个文件</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>files<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token constant">DELETE_FILES_BATCH_MAX</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">// 每个文件删除间隔</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>deleteFilesInterval <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> mfsLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">try</span> <span class="token punctuation">{</span>
                            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>deleteFilesInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">//avoid deleting files in the middle</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 将删除的文件从mappedFiles中移除</span>
    <span class="token function">deleteExpiredFile</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> deleteCount<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，真正删除文件是调用了 <code>MappedFile#destroy()</code> 方法</p><p>这个方法会先释放 <code>MappedFile</code> 上的引用，再关闭内存映射，然后关闭 <code>fileChannel</code>，最后才能删除该文件。</p><h3 id="_4-2-consumequeue" tabindex="-1"><a class="header-anchor" href="#_4-2-consumequeue" aria-hidden="true">#</a> 4.2 ConsumeQueue</h3><p><code>CleanConsumeQueueService</code> 处理 ConsumeQueue 文件的过期删除</p><p>先查出当前 CommitLog 的投递 Offset，然后遍历每个 ConsumeQueue，删除小于该 Offset 的 文件。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">deleteExpiredFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> deleteLogicsFilesInterval <span class="token operator">=</span> <span class="token class-name">DefaultMessageStore</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMessageStoreConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeleteConsumeQueueFilesInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">long</span> minOffset <span class="token operator">=</span> <span class="token class-name">DefaultMessageStore</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>commitLog<span class="token punctuation">.</span><span class="token function">getMinOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>minOffset <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastPhysicalMinOffset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lastPhysicalMinOffset <span class="token operator">=</span> minOffset<span class="token punctuation">;</span>

        <span class="token comment">// 删除逻辑队列文件</span>
        <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ConcurrentMap</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">ConsumeQueue</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> tables <span class="token operator">=</span> <span class="token class-name">DefaultMessageStore</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>consumeQueueTable<span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">ConsumeQueue</span><span class="token punctuation">&gt;</span></span> maps <span class="token operator">:</span> tables<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ConsumeQueue</span> logic <span class="token operator">:</span> maps<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> deleteCount <span class="token operator">=</span> logic<span class="token punctuation">.</span><span class="token function">deleteExpiredFile</span><span class="token punctuation">(</span>minOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>deleteCount <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> deleteLogicsFilesInterval <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>deleteLogicsFilesInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ignored<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 清理 IndexFile</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-indexfile" tabindex="-1"><a class="header-anchor" href="#_4-3-indexfile" aria-hidden="true">#</a> 4.3 IndexFile</h3><p>IndexFile 的过期文件清理也由 <code>CleanConsumeQueueService</code> 处理，删除 CommitLog 偏移量 offset 之前的所有 IndexFile 文件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">deleteExpiredFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> deleteLogicsFilesInterval <span class="token operator">=</span> <span class="token class-name">DefaultMessageStore</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMessageStoreConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeleteConsumeQueueFilesInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">long</span> minOffset <span class="token operator">=</span> <span class="token class-name">DefaultMessageStore</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>commitLog<span class="token punctuation">.</span><span class="token function">getMinOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>minOffset <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastPhysicalMinOffset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 清理 ConsumeQueue</span>
        <span class="token comment">// ...</span>

        <span class="token comment">// 清理 IndexFile</span>
        <span class="token class-name">DefaultMessageStore</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>indexService<span class="token punctuation">.</span><span class="token function">deleteExpiredFile</span><span class="token punctuation">(</span>minOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * 删除消息CommitLog偏移量offset之前的所有IndexFile文件
    *
    * <span class="token keyword">@param</span> <span class="token parameter">offset</span> CommitLog偏移量
    */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteExpiredFile</span><span class="token punctuation">(</span><span class="token keyword">long</span> offset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>readWriteLock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>indexFileList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 比较第一个 IndexFile 的最大 offset， 如果小于 offset，说明不需要删除任何文件</span>
        <span class="token keyword">long</span> endPhyOffset <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>indexFileList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEndPhyOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>endPhyOffset <span class="token operator">&lt;</span> offset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            files <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>indexFileList<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;destroy exception&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>readWriteLock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 有文件需要被删除，遍历所有文件，删除所有最大 offset 小于 CommitLog offset 的文件</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>files <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IndexFile</span><span class="token punctuation">&gt;</span></span> fileList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IndexFile</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token punctuation">(</span>files<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">IndexFile</span> f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">IndexFile</span><span class="token punctuation">)</span> files<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">getEndPhyOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> offset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                fileList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">deleteExpiredFile</span><span class="token punctuation">(</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>欢迎关注公众号【消息中间件】（middleware-mq），更新消息中间件的源码解析和最新动态！</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202205170102971.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,28);function h(w,F){const l=p("ExternalLinkIcon"),t=p("router-link"),o=p("RouterLink");return u(),k("div",null,[n("p",null,[s("原文地址："),n("a",r,[s("http://hscarb.github.io/rocketmq/20220328-rocketmq-expired-file-delete.html"),a(l)])]),m,n("nav",v,[n("ul",null,[n("li",null,[a(t,{to:"#_1-背景"},{default:e(()=>[s("1. 背景")]),_:1})]),n("li",null,[a(t,{to:"#_2-概述"},{default:e(()=>[s("2. 概述")]),_:1})]),n("li",null,[a(t,{to:"#_3-详解"},{default:e(()=>[s("3. 详解")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#_3-1-commitlog"},{default:e(()=>[s("3.1 CommitLog")]),_:1})]),n("li",null,[a(t,{to:"#_3-2-consumequeue"},{default:e(()=>[s("3.2 ConsumeQueue")]),_:1})]),n("li",null,[a(t,{to:"#_3-3-indexfile"},{default:e(()=>[s("3.3 IndexFile")]),_:1})])])]),n("li",null,[a(t,{to:"#_4-源码解析"},{default:e(()=>[s("4. 源码解析")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#_4-1-commitlog"},{default:e(()=>[s("4.1 CommitLog")]),_:1})]),n("li",null,[a(t,{to:"#_4-2-consumequeue"},{default:e(()=>[s("4.2 ConsumeQueue")]),_:1})]),n("li",null,[a(t,{to:"#_4-3-indexfile"},{default:e(()=>[s("4.3 IndexFile")]),_:1})])])])])]),b,n("p",null,[a(o,{to:"/rocketmq/RocketMQ%20ConsumeQueue%20%E6%B6%88%E8%B4%B9%E9%98%9F%E5%88%97%E6%96%87%E4%BB%B6.html"},{default:e(()=>[s("ConsumeQueue")]),_:1}),s(" 是消费队列文件。每个 Topic 的每个 Queue 都会有一个消费队列（可能包含多个文件），用作保存消息在 CommitLog 中的位置以便消费。")]),f,g,n("p",null,[a(o,{to:"/rocketmq/RocketMQ%20IndexFile%20%E7%B4%A2%E5%BC%95%E6%96%87%E4%BB%B6.html"},{default:e(()=>[s("IndexFile")]),_:1}),s("是消息索引文件，仅仅用于消息的查询。索引文件可以通过 Message Key，查询到消息在 CommitLog 中的物理偏移量，进而从 CommitLog 中查询消息。")]),y])}const _=i(d,[["render",h],["__file","20220328-rocketmq-expired-file-delete.html.vue"]]);export{_ as default};
