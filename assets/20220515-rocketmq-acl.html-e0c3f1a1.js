import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as i,a as n,b as s,d as a,w as p,e as u}from"./app-eaa093f0.js";const k={},r={href:"http://hscarb.github.io/rocketmq/20220515-rocketmq-acl.html",target:"_blank",rel:"noopener noreferrer"},d=n("h1",{id:"rocketmq-acl-权限控制-详解-源码剖析",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rocketmq-acl-权限控制-详解-源码剖析","aria-hidden":"true"},"#"),s(" RocketMQ ACL 权限控制 详解 & 源码剖析")],-1),m={class:"table-of-contents"},v=u(`<h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1. 背景</h2><p>很多网站、软件、应用都有自己的权限控制系统。一般来说用户会有自己的角色（用户组），每个角色有相应的权限集，只有拥有某种权限才能进行某些操作。随着消息队列的使用场景越来越广泛，消息队列的权限控制需求也也越来越迫切。</p><p>RocketMQ 再 4.4.0 版本引入了 ACL 模块，开始支持访问权限控制。ACL（Access Control List），即访问控制列表。RocketMQ 的 ACL 模块实现了一套简单访问控制功能，它包含用户、角色、权限、资源的概念，还支持按客户端 IP 段进行白名单控制。</p><p>如此一来，我们可以通过 ACL 来实现</p><p>本文介绍 RocketMQ ACL 模块的使用和实现原理，最后进行源码的解析。</p><h2 id="_2-概述" tabindex="-1"><a class="header-anchor" href="#_2-概述" aria-hidden="true">#</a> 2. 概述</h2><h3 id="_2-1-基本概念" tabindex="-1"><a class="header-anchor" href="#_2-1-基本概念" aria-hidden="true">#</a> 2.1 基本概念</h3><p>先来了解一下 RocketMQ ACL 中的概念。</p><p>我们设想这样一个场景：某公司运维团队维护了一个 RocketMQ 集群，为了保证集群的安全性，业务团队无法直接创建和修改 Topic，只能往自己申请的 Topic 上生产和消费。新建 Topic 需要提交申请由运维团队审批。这个简单的场景涉及了几个概念：用户（运维人员、开发人员）、角色（管理员、普通用户）、资源（Topic）、权限（修改 Topic 的权限、在 Topic 发送、接收消息的权限）</p><p>由此可以引出 RocketMQ ACL 中支持的 4 种概念：</p><ol><li>用户：访问控制的基本要素，包含用户名（AccessKey）、密码（SecretKey）</li><li>角色：用户权限的集合，RocketMQ ACL 中定义了 2 中角色：管理员 / 非管理员</li><li>资源：需要进行访问控制的对象。RocketMQ 中的 Topic 和 ConsumerGroup。</li><li>权限：针对资源能进行的操作。RocketMQ 中主要指对 Topic 和 ConsumserGroup 的操作，包含如下 4 种。</li></ol><table><thead><tr><th>权限</th><th>含义</th></tr></thead><tbody><tr><td>DENY</td><td>拒绝</td></tr><tr><td>ANY</td><td>PUB 或者 SUB 权限</td></tr><tr><td>PUB</td><td>发送权限</td></tr><tr><td>SUB</td><td>订阅权限</td></tr></tbody></table><p>此外，还包含白名单概念</p><ul><li>白名单：客户端 IP 地址白名单，有全局和用户 2 种作用域。如果 Broker 接收到来自白名单中 IP 的请求，则直接放行，不进行后续的其他权限校验。</li></ul><h3 id="_2-2-基本流程" tabindex="-1"><a class="header-anchor" href="#_2-2-基本流程" aria-hidden="true">#</a> 2.2 基本流程</h3><p>RocketMQ 的权限控制由客户端和 Broker 端共同完成。</p><ul><li>Broker：Broker 端需要先在配置文件（conf/plain_acl.yml）中设置该 Broker 的访问权限配置。接收到客户端请求后根据配置的权限匹配，进行权限判断。</li><li>客户端：客户端需要标明每个请求的用户，具体的方法是通过 RPCHook 指定用户名和密码。</li></ul><p>下面是 RocketMQ 进行权限控制的流程</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/06/1654958778518.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-2-1-初始化" tabindex="-1"><a class="header-anchor" href="#_2-2-1-初始化" aria-hidden="true">#</a> 2.2.1 初始化</h4><ul><li><p><strong>Broker 初始化</strong></p><ul><li>Broker 初始化前，用户手动修改和配置 ACL 配置文件</li><li>加载访问验证器 PlainAccessValidator</li><li>读取配置文件，加载配置到内存。</li><li>注册钩子函数，用作请求处理前的权限校验</li><li>注意 Broker 会观察配置文件改动并且自动重新加载</li></ul></li><li><p><strong>客户端初始化</strong></p><ul><li>用户需手动配置一个 AclClientRPCHook，并指定用户名和密码参数。客户端初始化时注册该 AclClientRPCHook，用于在发送请求前在请求中加入验证信息。</li></ul></li></ul><h4 id="_2-2-2-发送-处理请求" tabindex="-1"><a class="header-anchor" href="#_2-2-2-发送-处理请求" aria-hidden="true">#</a> 2.2.2 发送 / 处理请求</h4><ul><li><strong>客户端发送请求</strong><ul><li>创建请求</li><li>发送请求前执行 AclClientRPCHook 钩子函数的 before 方法 <ul><li>对请求、用户名和密码进行签名</li><li>将用户名和签名加入请求</li></ul></li><li>发送请求</li></ul></li><li>服务端处理请求 <ul><li>处理请求前执行注册的钩子函数，执行权限判断</li><li>判断成功则正常返回，否则返回异常信息</li></ul></li></ul><h3 id="_2-3-使用方法" tabindex="-1"><a class="header-anchor" href="#_2-3-使用方法" aria-hidden="true">#</a> 2.3 使用方法</h3><h4 id="_2-3-1-broker-端配置" tabindex="-1"><a class="header-anchor" href="#_2-3-1-broker-端配置" aria-hidden="true">#</a> 2.3.1 Broker 端配置</h4><p>首先需要在 <code>broker.conf</code> 中启动 Broker 的 ACL 功能。</p><div class="language-config line-numbers-mode" data-ext="config"><pre class="language-config"><code>aclEnable=true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>ACL 默认的配置文件名：<code>plain_acl.yml</code>，需要放在<code>{ROCKETMQ_HOME}/store/config</code>目录下。当前支持多配置文件，可以把不同业务的权限配置分别放在多个文件中。</p><p>下面为示例配置文件</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">globalWhiteRemoteAddresses</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> 10.10.103.*
<span class="token punctuation">-</span> 192.168.0.*

<span class="token key atrule">accounts</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">accessKey</span><span class="token punctuation">:</span> RocketMQ
  <span class="token key atrule">secretKey</span><span class="token punctuation">:</span> <span class="token number">12345678</span>
  <span class="token key atrule">whiteRemoteAddress</span><span class="token punctuation">:</span>
  <span class="token key atrule">admin</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">defaultTopicPerm</span><span class="token punctuation">:</span> DENY
  <span class="token key atrule">defaultGroupPerm</span><span class="token punctuation">:</span> SUB
  <span class="token key atrule">topicPerms</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> topicA=DENY
  <span class="token punctuation">-</span> topicB=PUB<span class="token punctuation">|</span>SUB
  <span class="token punctuation">-</span> topicC=SUB
  <span class="token key atrule">groupPerms</span><span class="token punctuation">:</span>
  <span class="token comment"># the group should convert to retry topic</span>
  <span class="token punctuation">-</span> groupA=DENY
  <span class="token punctuation">-</span> groupB=PUB<span class="token punctuation">|</span>SUB
  <span class="token punctuation">-</span> groupC=SUB

<span class="token punctuation">-</span> <span class="token key atrule">accessKey</span><span class="token punctuation">:</span> rocketmq2
  <span class="token key atrule">secretKey</span><span class="token punctuation">:</span> <span class="token number">12345678</span>
  <span class="token key atrule">whiteRemoteAddress</span><span class="token punctuation">:</span> 192.168.1.*
  <span class="token comment"># if it is admin, it could access all resources</span>
  <span class="token key atrule">admin</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到配置文件主要分两个大项：</p><ol><li><code>globalWhiteRemoteAddresses</code>：用于配置全局客户端 IP 白名单</li><li><code>accounts</code>：用来配置用户和用户权限</li></ol><p>下面是配置的具体取值</p><table><thead><tr><th>字段</th><th>取值</th><th>含义</th></tr></thead><tbody><tr><td>globalWhiteRemoteAddresses</td><td><em>;192.168.</em>.*;192.168.0.1</td><td>全局IP白名单</td></tr><tr><td>accessKey</td><td>字符串</td><td>Access Key</td></tr><tr><td>secretKey</td><td>字符串</td><td>Secret Key</td></tr><tr><td>whiteRemoteAddress</td><td><em>;192.168.</em>.*;192.168.0.1</td><td>用户IP白名单</td></tr><tr><td>admin</td><td>true;false</td><td>是否管理员账户</td></tr><tr><td>defaultTopicPerm</td><td>DENY;PUB;SUB;PUB|SUB</td><td>默认的Topic权限</td></tr><tr><td>defaultGroupPerm</td><td>DENY;PUB;SUB;PUB|SUB</td><td>默认的ConsumerGroup权限</td></tr><tr><td>topicPerms</td><td>topic=权限</td><td>各个Topic的权限</td></tr><tr><td>groupPerms</td><td>group=权限</td><td>各个ConsumerGroup的权限</td></tr></tbody></table><h4 id="_2-3-2-生产者使用" tabindex="-1"><a class="header-anchor" href="#_2-3-2-生产者使用" aria-hidden="true">#</a> 2.3.2 生产者使用</h4><p>生产者和消费者使用 ACL，都需要用用户名和密码新建一个 AclClientRPCHook 对象，然后注册到客户端中。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ACLProducerTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">ACL_ACCESS_KEY</span> <span class="token operator">=</span> <span class="token string">&quot;RocketMQ&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">ACL_SECRET_KEY</span> <span class="token operator">=</span> <span class="token string">&quot;12345678&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 将 AclClientHook 注册到客户端</span>
        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">&quot;ProducerGroupName&quot;</span><span class="token punctuation">,</span> <span class="token function">getAclRPCHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">128</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;topic0607&quot;</span><span class="token punctuation">,</span>
                            <span class="token string">&quot;TagA&quot;</span><span class="token punctuation">,</span>
                            <span class="token string">&quot;OrderID188&quot;</span><span class="token punctuation">,</span>
                            <span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">RemotingHelper</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_CHARSET</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">SendResult</span> sendResult <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s%n&quot;</span><span class="token punctuation">,</span> sendResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 新建 AclClientHook，配置用户名和密码</span>
    <span class="token keyword">static</span> <span class="token class-name">RPCHook</span> <span class="token function">getAclRPCHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AclClientRPCHook</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SessionCredentials</span><span class="token punctuation">(</span><span class="token constant">ACL_ACCESS_KEY</span><span class="token punctuation">,</span> <span class="token constant">ACL_SECRET_KEY</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-3-消费者使用" tabindex="-1"><a class="header-anchor" href="#_2-3-3-消费者使用" aria-hidden="true">#</a> 2.3.3 消费者使用</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ACLConsumerTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">ACL_ACCESS_KEY</span> <span class="token operator">=</span> <span class="token string">&quot;RocketMQ&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">ACL_SECRET_KEY</span> <span class="token operator">=</span> <span class="token string">&quot;12345678&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 将 AclClientHook 注册到客户端</span>
        <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">&quot;testGroup02&quot;</span><span class="token punctuation">,</span> <span class="token function">getAclRPCHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AllocateMessageQueueAveragely</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        consumer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1:9876&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&quot;topic0607&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        consumer<span class="token punctuation">.</span><span class="token function">setConsumeFromWhere</span><span class="token punctuation">(</span><span class="token class-name">ConsumeFromWhere</span><span class="token punctuation">.</span><span class="token constant">CONSUME_FROM_FIRST_OFFSET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">ConsumeConcurrentlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> msgs<span class="token punctuation">,</span> <span class="token class-name">ConsumeConcurrentlyContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s Receive New Messages: %s %n&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span><span class="token constant">CONSUME_SUCCESS</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Consumer Started.%n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

	<span class="token comment">// 新建 AclClientHook，配置用户名和密码</span>
    <span class="token keyword">static</span> <span class="token class-name">RPCHook</span> <span class="token function">getAclRPCHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AclClientRPCHook</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SessionCredentials</span><span class="token punctuation">(</span><span class="token constant">ACL_ACCESS_KEY</span><span class="token punctuation">,</span><span class="token constant">ACL_SECRET_KEY</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-实现原理" tabindex="-1"><a class="header-anchor" href="#_3-实现原理" aria-hidden="true">#</a> 3. 实现原理</h2><p>这部分开始讲解 RocketMQ ACL 模块的实现原理，将会按照请求处理的先后顺序分为</p><ol><li>客户端 <code>AclClientRPCHook</code></li><li>Broker 初始化 ACL 配置</li><li>Broker 权限验证</li></ol><p>这几个部分。</p><h3 id="_3-1-客户端-aclclientrpchook" tabindex="-1"><a class="header-anchor" href="#_3-1-客户端-aclclientrpchook" aria-hidden="true">#</a> 3.1 客户端 AclClientRPCHook</h3><p>客户端使用 ACL 功能时必须用 AccessKey 和 SecretKey 新建一个 <code>AclClientRPCHook</code>，这个 <code>RPCHook</code> 用于在发送请求前将该账号的用户名和密码信息放入请求中，以便 Broker 获取账号信息进行权限判断。</p><h4 id="_3-1-1-注册-aclclientrpchook" tabindex="-1"><a class="header-anchor" href="#_3-1-1-注册-aclclientrpchook" aria-hidden="true">#</a> 3.1.1 注册 AclClientRPCHook</h4><p>我们首先看一下客户端如何注册 <code>AclClientRPCHook</code>，让他能够在发送请求时起作用。</p><p>在 <code>NettyRemotingClient</code> 和 <code>NettyRemotingServer</code> 的抽象基类 <code>NettyRemotingAbstract</code> 中有一个 <code>rpcHooks</code> 列表，用于存放所有的 <code>RPCHook</code>。它会在处理请求的前后分别执行 <code>RPCHook</code> 的 before 和 after 方法。</p><p>注册 <code>AclClientRPCHook</code> 的逻辑会把这个 <code>RPCHook</code> 加入到 <code>rpcHooks</code> 列表里面。</p><h4 id="_3-1-2-aclclientrpchook-的逻辑" tabindex="-1"><a class="header-anchor" href="#_3-1-2-aclclientrpchook-的逻辑" aria-hidden="true">#</a> 3.1.2 AclClientRPCHook 的逻辑</h4><p>这个类仅定义了 before 逻辑。它会将请求的参数（header）和用户名密码参数打包，排序，然后进行签名。</p><blockquote><p>相对应地，服务端收到请求后也会对请求参数进行排序，以同样的方法签名，通过比较签名的方式进行验证，防止请求数据被篡改。</p></blockquote><p>随后会将签名和用户名加入到请求扩展属性中，然后发送请求。</p><h3 id="_3-2-broker-初始化-acl-配置" tabindex="-1"><a class="header-anchor" href="#_3-2-broker-初始化-acl-配置" aria-hidden="true">#</a> 3.2 Broker 初始化 ACL 配置</h3><p>介绍 Broker 这边的 ACL 逻辑前，看一下 Broker ACL 相关的类。</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/06/1654958778537.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>其中红色线为初始化的方法调用链。</p><p>Broker 启动时会由 <code>BrokerController</code> 初始化 ACL 模块，加载所有的验证器。具体的方法是用 SPI 机制，读取 <code>METAINF/service/org.apache.rocketmq.acl.AccessValidator</code> 文件，加载 <code>AccessValidator</code> 的所有实现类。当前只有一个默认实现 <code>PlainAccessValidator</code>，用户也可以自己实现其他验证器。</p><p><code>PlainAccessValidator</code> 初始化时会创建 <code>PlainPermissionManager</code> 对象，用它来解析权限配置文件（<code>plain_acl.yml</code>）。</p><p><code>PlainPermissionManager</code> 会在初始化时加载目录中的所有配置文件，将权限配置信息加载到内存。同时，它会开启一个 <code>FileWatchService</code> 线程，用于每 0.5s 检测配置文件的变更，及时将变更加载到内存。</p><p>最后 Broker 将注册一个 RPCHook，在请求处理前后增加方法。在请求之前注册 <code>PlainAccessValidator</code> 的 <code>validate</code> 方法。这个 <code>validate</code> 方法中就包含了权限验证的逻辑。</p><h3 id="_3-3-broker-权限验证" tabindex="-1"><a class="header-anchor" href="#_3-3-broker-权限验证" aria-hidden="true">#</a> 3.3 Broker 权限验证</h3><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/06/1654958778537.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>权限验证的逻辑在 <code>PlainAccessValidator</code> 的 <code>validate</code> 方法中，它会调用 <code>PlainPermissionManager</code> 的 <code>validate</code> 方法，传入的参数是客户端发送请求时指定的用户信息。下面是权限验证的步骤</p><ol><li>判断客户端 IP 是否在全局白名单中，如果匹配则直接放行</li><li>判断该用户是否配置在权限控制列表中，如果不在则返回错误</li><li>获取请求用户的访问控制权限，判断客户端 IP 是否在用户维度的白名单中，如果匹配则放行</li><li>对请求参数验计算签名，验证与客户端计算的签名是否一致，不一致则返回异常</li><li>验证资源访问权限，判断该用户是否有客户端请求的资源的相应操作权限</li></ol><h2 id="_4-源码解析" tabindex="-1"><a class="header-anchor" href="#_4-源码解析" aria-hidden="true">#</a> 4. 源码解析</h2><h3 id="_4-1-客户端-aclclientrpchook" tabindex="-1"><a class="header-anchor" href="#_4-1-客户端-aclclientrpchook" aria-hidden="true">#</a> 4.1 客户端 AclClientRPCHook</h3><h4 id="_4-1-1-注册-aclclientrpchook" tabindex="-1"><a class="header-anchor" href="#_4-1-1-注册-aclclientrpchook" aria-hidden="true">#</a> 4.1.1 注册 AclClientRPCHook</h4><p>在 <code>NettyRemotingClient</code> 和 <code>NettyRemotingServer</code> 的抽象基类 <code>NettyRemotingAbstract</code> 中有一个 <code>rpcHooks</code> 列表，用于存放所有的 <code>RPCHook</code>。它会在处理请求的前后分别执行 <code>RPCHook</code> 的 before 和 after 方法。</p><p>注册 <code>AclClientRPCHook</code> 的逻辑会把这个 <code>RPCHook</code> 加入到 <code>rpcHooks</code> 列表里面。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// NettyRemotingAbstract.java</span>
<span class="token keyword">protected</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RPCHook</span><span class="token punctuation">&gt;</span></span> rpcHooks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RPCHook</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// NettyRemotingClient.java</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerRPCHook</span><span class="token punctuation">(</span><span class="token class-name">RPCHook</span> rpcHook<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rpcHook <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>rpcHooks<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>rpcHook<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        rpcHooks<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>rpcHook<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Producer 端调用底层 API 发送命令的前后，调用 <code>RPCHook</code> 上面的 <code>doBeforeRequest</code> 和 <code>doAfterRequest</code> 方法，便于在发送命令的前后拦截</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// NettyRemotingClient.java</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">RemotingCommand</span> <span class="token function">invokeSync</span><span class="token punctuation">(</span><span class="token class-name">String</span> addr<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">RemotingCommand</span> request<span class="token punctuation">,</span> <span class="token keyword">long</span> timeoutMillis<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">doBeforeRpcHooks</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
    <span class="token function">doAfterRpcHooks</span><span class="token punctuation">(</span><span class="token class-name">RemotingHelper</span><span class="token punctuation">.</span><span class="token function">parseChannelRemoteAddr</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doBeforeRpcHooks</span><span class="token punctuation">(</span><span class="token class-name">String</span> addr<span class="token punctuation">,</span> <span class="token class-name">RemotingCommand</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rpcHooks<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">RPCHook</span> rpcHook<span class="token operator">:</span> rpcHooks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            rpcHook<span class="token punctuation">.</span><span class="token function">doBeforeRequest</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doAfterRpcHooks</span><span class="token punctuation">(</span><span class="token class-name">String</span> addr<span class="token punctuation">,</span> <span class="token class-name">RemotingCommand</span> request<span class="token punctuation">,</span> <span class="token class-name">RemotingCommand</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rpcHooks<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">RPCHook</span> rpcHook<span class="token operator">:</span> rpcHooks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            rpcHook<span class="token punctuation">.</span><span class="token function">doAfterResponse</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-2-aclclientrpchook-的逻辑" tabindex="-1"><a class="header-anchor" href="#_4-1-2-aclclientrpchook-的逻辑" aria-hidden="true">#</a> 4.1.2 AclClientRPCHook 的逻辑</h4><p>仅定义了 before 逻辑。它会将请求的参数（header）和用户名密码参数打包，排序，然后进行签名。</p><ul><li>首先 <code>parseRequestContent</code> 方法使用 <code>SortedMap</code> 将客户端的 AccessKey、SecurityToken 以及请求中 header 的属性进行排序</li><li>然后 <code>combineRequestContent</code> 方法会将上一步返回的 map 以及请求合并成一个 byte 数组</li><li><code>calSignature</code>方法会根据客户端的 <code>AccessKey</code> 以及上一步返回的 byte 数组生成一个签名</li><li>将生成的签名添加到请求的扩展属性中</li><li>将 AccessKey 添加到请求的扩展属性中</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doBeforeRequest</span><span class="token punctuation">(</span><span class="token class-name">String</span> remoteAddr<span class="token punctuation">,</span> <span class="token class-name">RemotingCommand</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> total <span class="token operator">=</span> <span class="token class-name">AclUtils</span><span class="token punctuation">.</span><span class="token function">combineRequestContent</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>
        <span class="token function">parseRequestContent</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> sessionCredentials<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sessionCredentials<span class="token punctuation">.</span><span class="token function">getSecurityToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> signature <span class="token operator">=</span> <span class="token class-name">AclUtils</span><span class="token punctuation">.</span><span class="token function">calSignature</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span> sessionCredentials<span class="token punctuation">.</span><span class="token function">getSecretKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    request<span class="token punctuation">.</span><span class="token function">addExtField</span><span class="token punctuation">(</span><span class="token constant">SIGNATURE</span><span class="token punctuation">,</span> signature<span class="token punctuation">)</span><span class="token punctuation">;</span>
    request<span class="token punctuation">.</span><span class="token function">addExtField</span><span class="token punctuation">(</span><span class="token constant">ACCESS_KEY</span><span class="token punctuation">,</span> sessionCredentials<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// The SecurityToken value is unneccessary,user can choose this one.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sessionCredentials<span class="token punctuation">.</span><span class="token function">getSecurityToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        request<span class="token punctuation">.</span><span class="token function">addExtField</span><span class="token punctuation">(</span><span class="token constant">SECURITY_TOKEN</span><span class="token punctuation">,</span> sessionCredentials<span class="token punctuation">.</span><span class="token function">getSecurityToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token class-name">SortedMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">parseRequestContent</span><span class="token punctuation">(</span><span class="token class-name">RemotingCommand</span> request<span class="token punctuation">,</span> <span class="token class-name">String</span> ak<span class="token punctuation">,</span> <span class="token class-name">String</span> securityToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">CommandCustomHeader</span> header <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">readCustomHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Sort property</span>
    <span class="token class-name">SortedMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">ACCESS_KEY</span><span class="token punctuation">,</span> ak<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>securityToken <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">SECURITY_TOKEN</span><span class="token punctuation">,</span> securityToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// Add header properties</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> header<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> fieldCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> fields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                fields <span class="token operator">=</span> header<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> field <span class="token operator">:</span> fields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tmp <span class="token operator">=</span> fieldCache<span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fields<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> tmp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    fields <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> field <span class="token operator">:</span> fields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Object</span> value <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> value <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>field<span class="token punctuation">.</span><span class="token function">isSynthetic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>field<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> map<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;incompatible exception.&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-broker-初始化-acl-配置" tabindex="-1"><a class="header-anchor" href="#_4-2-broker-初始化-acl-配置" aria-hidden="true">#</a> 4.2 Broker 初始化 ACL 配置</h3><ol><li>Broker 启动时会由 <code>BrokerController</code> 初始化 ACL 模块，加载所有的验证器。具体的方法是用 SPI 机制，读取 <code>METAINF/service/org.apache.rocketmq.acl.AccessValidator</code> 文件，加载 <code>AccessValidator</code> 的所有实现类。当前只有一个默认实现 <code>PlainAccessValidator</code>，用户也可以自己实现其他验证器。</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
  * ACL（访问控制列表）初始化
  */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initialAcl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>brokerConfig<span class="token punctuation">.</span><span class="token function">isAclEnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;The broker dose not enable acl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 使用SPI机制加载配置的AccessValidator实现类</span>
    <span class="token comment">// 读取METAINF/service/org.apache.rocketmq.acl.AccessValidator文件中配置的访问验证器PlainAccessValidator</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AccessValidator</span><span class="token punctuation">&gt;</span></span> accessValidators <span class="token operator">=</span> <span class="token class-name">ServiceProvider</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">ServiceProvider</span><span class="token punctuation">.</span><span class="token constant">ACL_VALIDATOR_ID</span><span class="token punctuation">,</span> <span class="token class-name">AccessValidator</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>accessValidators <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> accessValidators<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;The broker dose not load the AccessValidator&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">AccessValidator</span> accessValidator<span class="token operator">:</span> accessValidators<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">AccessValidator</span> validator <span class="token operator">=</span> accessValidator<span class="token punctuation">;</span>
        accessValidatorMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>validator<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>validator<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 向Broker处理服务启注册钩子函数</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">registerServerRPCHook</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RPCHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token doc-comment comment">/**
              * 在服务端接收到请求并解码后、执行处理请求前被调用
              */</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doBeforeRequest</span><span class="token punctuation">(</span><span class="token class-name">String</span> remoteAddr<span class="token punctuation">,</span> <span class="token class-name">RemotingCommand</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//Do not catch the exception</span>
                validator<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>validator<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> remoteAddr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token doc-comment comment">/**
              * 在处理完请求后调用
              */</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doAfterResponse</span><span class="token punctuation">(</span><span class="token class-name">String</span> remoteAddr<span class="token punctuation">,</span> <span class="token class-name">RemotingCommand</span> request<span class="token punctuation">,</span> <span class="token class-name">RemotingCommand</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p><code>PlainAccessValidator</code> 初始化时会创建 <code>PlainPermissionManager</code> 对象，用它来解析权限配置文件（<code>plain_acl.yml</code>）。</p></li><li><p><code>PlainPermissionManager</code> 会在初始化时加载目录中的所有配置文件，将权限配置信息加载到内存。同时，它会开启一个 <code>FileWatchService</code> 线程，用于每 0.5s 检测配置文件的变更，及时将变更加载到内存</p></li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">PlainPermissionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 解析 yaml 文件，将配置加载到内存</span>
    <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 监听配置文件变化，如发生变化，重新加载配置</span>
    <span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-1-plainpermissonmanager-的字段含义" tabindex="-1"><a class="header-anchor" href="#_4-2-1-plainpermissonmanager-的字段含义" aria-hidden="true">#</a> 4.2.1 PlainPermissonManager 的字段含义</h4><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/06/1654958778537.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>其中红色线为初始化的方法调用链。下面看一下 <code>PlainPermissonManager</code> 中字段的含义，由于支持了从多文件加载权限配置，所以这些配置大多为 Map 类型，Key 是文件路径，Value 是文件中包含的权限配置。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// PlainPermissionManager.java</span>
<span class="token comment">// 权限映射配置表，用来缓存所有ACL配置文件的权限数据</span>
<span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token doc-comment comment">/** fileFullPath **/</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token doc-comment comment">/** AccessKey **/</span><span class="token punctuation">,</span> <span class="token class-name">PlainAccessResource</span><span class="token operator">&gt;&gt;</span> aclPlainAccessResourceMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 用来缓存 AccessKey 和 ACL 配置文件的映射关系</span>
<span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token doc-comment comment">/** AccessKey **/</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token doc-comment comment">/** fileFullPath **/</span><span class="token operator">&gt;</span> accessKeyTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 用来缓存所有 ACL 配置文件的全局白名单</span>
<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RemoteAddressStrategy</span><span class="token punctuation">&gt;</span></span> globalWhiteRemoteAddressStrategy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 远程 IP 解析策略工厂，用于解析白名单 IP 地址</span>
<span class="token keyword">private</span> <span class="token class-name">RemoteAddressStrategyFactory</span> remoteAddressStrategyFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RemoteAddressStrategyFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 缓存 ACL 配置文件和全局白名单的映射关系</span>
<span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token doc-comment comment">/** fileFullPath **/</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RemoteAddressStrategy</span><span class="token punctuation">&gt;</span></span><span class="token operator">&gt;</span> globalWhiteRemoteAddressStrategyMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 是否监听 acl 配置文件。如果开启监听，一旦文件内容改变，可以在不重启服务的情况下自动生效</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span> isWatchStart<span class="token punctuation">;</span>

<span class="token comment">// 配置文件版本号表</span>
<span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token doc-comment comment">/** fileFullPath **/</span><span class="token punctuation">,</span> <span class="token class-name">DataVersion</span><span class="token operator">&gt;</span> dataVersionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>aclPlainAccessResourceMap</li></ul><p>aclPlainAccessResourceMap是个Map类型，用来缓存所有ACL配置文件的权限数据，其中key表示ACL配置文件的绝对路径， value表示相应配置文件中的权限数据，需要注意的是value也是一个Map类型，其中key是String类型表示AccessKey，value是PlainAccessResource类型。</p><ul><li>accessKeyTable</li></ul><p>accessKeyTable是个Map类型，用来缓存AccessKey和ACL配置文件的映射关系，其中key表示AccessKey，value表示ACL配置文件的绝对路径。</p><ul><li>globalWhiteRemoteAddressStrategy</li></ul><p>globalWhiteRemoteAddressStrategy用来缓存所有ACL配置文件的全局白名单。</p><ul><li>globalWhiteRemoteAddressStrategyMap</li></ul><p>globalWhiteRemoteAddressStrategyMap是个Map类型，用来缓存ACL配置文件和全局白名单的映射关系</p><ul><li>dataVersionMap</li></ul><p>dataVersionMap是个Map类型，用来缓存所有ACL配置文件的DataVersion，其中key表示ACL配置文件的绝对路径，value表示该配置文件对应的DataVersion。</p><h4 id="_4-2-2-plainpermissonmanager-load" tabindex="-1"><a class="header-anchor" href="#_4-2-2-plainpermissonmanager-load" aria-hidden="true">#</a> 4.2.2 PlainPermissonManager#load</h4><p>它有两个 load 方法，分别用于重新加载全部文件，和重载一个文件的配置。</p><ul><li><p><code>load()</code></p><ul><li><code>load()</code> 方法会获取 <code>RocketMQ安装目录/conf</code> 目录（包括该目录的子目录）和 <code>rocketmq.acl.plain.file</code> 下所有ACL配置文件，然后遍历这些文件读取权限数据和全局白名单。</li></ul></li><li><p><code>load(String aclFilePath)</code></p><ul><li><code>load(String aclFilePath)</code> 方法完成加载指定ACL配置文件内容的功能，将配置文件中的全局白名单 <code>globalWhiteRemoteAddresses</code> 和用户权限 <code>accounts</code> 加载到缓存中， 这里需要注意以下几点：</li></ul></li></ul><ol><li><p>判断缓存中该配置文件的全局白名单 <code>globalWhiteRemoteAddresses</code> 和用户权限<code>accounts</code> 数据是否为空，如果不为空则需要注意删除文件原有数据</p></li><li><p>相同的 <code>accessKey</code> 只允许存在在一个ACL配置文件中</p></li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 解析所有 ACL 配置文件，将 ACL 配置规则加载到内存
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fileHome <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> fileHome<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 定义临时变量，用于暂存解析出来的 ACL 配置。这里没有直接覆盖全局配置，是为了防止全局配置在未解析完全的情况下被读取</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">PlainAccessResource</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> aclPlainAccessResourceMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> accessKeyTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RemoteAddressStrategy</span><span class="token punctuation">&gt;</span></span> globalWhiteRemoteAddressStrategy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">RemoteAddressStrategy</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> globalWhiteRemoteAddressStrategyMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">DataVersion</span><span class="token punctuation">&gt;</span></span> dataVersionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 获取所有 ACL 配置文件</span>
    fileList <span class="token operator">=</span> <span class="token function">getAllAclFiles</span><span class="token punctuation">(</span>defaultAclDir<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>defaultAclFile<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>fileList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>defaultAclFile<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fileList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>defaultAclFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 遍历 ACL 配置文件，解析配置</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fileList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">JSONObject</span> plainAclConfData <span class="token operator">=</span> <span class="token class-name">AclUtils</span><span class="token punctuation">.</span><span class="token function">getYamlDataObject</span><span class="token punctuation">(</span>fileList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                                 <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>plainAclConfData <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> plainAclConfData<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AclException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%s file is not data&quot;</span><span class="token punctuation">,</span> fileList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Broker plain acl conf data is : &quot;</span><span class="token punctuation">,</span> plainAclConfData<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 解析全局 IP 白名单配置</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RemoteAddressStrategy</span><span class="token punctuation">&gt;</span></span> globalWhiteRemoteAddressStrategyList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JSONArray</span> globalWhiteRemoteAddressesList <span class="token operator">=</span> plainAclConfData<span class="token punctuation">.</span><span class="token function">getJSONArray</span><span class="token punctuation">(</span><span class="token string">&quot;globalWhiteRemoteAddresses&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>globalWhiteRemoteAddressesList <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>globalWhiteRemoteAddressesList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> globalWhiteRemoteAddressesList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                globalWhiteRemoteAddressStrategyList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>remoteAddressStrategyFactory<span class="token punctuation">.</span>
                                                         <span class="token function">getRemoteAddressStrategy</span><span class="token punctuation">(</span>globalWhiteRemoteAddressesList<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>globalWhiteRemoteAddressStrategyList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            globalWhiteRemoteAddressStrategyMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>fileList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> globalWhiteRemoteAddressStrategyList<span class="token punctuation">)</span><span class="token punctuation">;</span>
            globalWhiteRemoteAddressStrategy<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>globalWhiteRemoteAddressStrategyList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 解析账号权限配置</span>
        <span class="token class-name">JSONArray</span> accounts <span class="token operator">=</span> plainAclConfData<span class="token punctuation">.</span><span class="token function">getJSONArray</span><span class="token punctuation">(</span><span class="token class-name">AclConstants</span><span class="token punctuation">.</span><span class="token constant">CONFIG_ACCOUNTS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">PlainAccessResource</span><span class="token punctuation">&gt;</span></span> plainAccessResourceMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>accounts <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>accounts<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PlainAccessConfig</span><span class="token punctuation">&gt;</span></span> plainAccessConfigList <span class="token operator">=</span> accounts<span class="token punctuation">.</span><span class="token function">toJavaList</span><span class="token punctuation">(</span><span class="token class-name">PlainAccessConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">PlainAccessConfig</span> plainAccessConfig <span class="token operator">:</span> plainAccessConfigList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">PlainAccessResource</span> plainAccessResource <span class="token operator">=</span> <span class="token function">buildPlainAccessResource</span><span class="token punctuation">(</span>plainAccessConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//AccessKey can not be defined in multiple ACL files</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>accessKeyTable<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>plainAccessResource<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    plainAccessResourceMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>plainAccessResource<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plainAccessResource<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    accessKeyTable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>plainAccessResource<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fileList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;The accesssKey {} is repeated in multiple ACL files&quot;</span><span class="token punctuation">,</span> plainAccessResource<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>plainAccessResourceMap<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            aclPlainAccessResourceMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>fileList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> plainAccessResourceMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 解析数据版本</span>
        <span class="token class-name">JSONArray</span> tempDataVersion <span class="token operator">=</span> plainAclConfData<span class="token punctuation">.</span><span class="token function">getJSONArray</span><span class="token punctuation">(</span><span class="token class-name">AclConstants</span><span class="token punctuation">.</span><span class="token constant">CONFIG_DATA_VERSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DataVersion</span> dataVersion <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tempDataVersion <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>tempDataVersion<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DataVersion</span><span class="token punctuation">&gt;</span></span> dataVersions <span class="token operator">=</span> tempDataVersion<span class="token punctuation">.</span><span class="token function">toJavaList</span><span class="token punctuation">(</span><span class="token class-name">DataVersion</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">DataVersion</span> firstElement <span class="token operator">=</span> dataVersions<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            dataVersion<span class="token punctuation">.</span><span class="token function">assignNewOne</span><span class="token punctuation">(</span>firstElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        dataVersionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>fileList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> dataVersion<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>dataVersionMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>defaultAclFile<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>dataVersion<span class="token punctuation">.</span><span class="token function">assignNewOne</span><span class="token punctuation">(</span>dataVersionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>defaultAclFile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 刷新全局配置</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dataVersionMap <span class="token operator">=</span> dataVersionMap<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>globalWhiteRemoteAddressStrategyMap <span class="token operator">=</span> globalWhiteRemoteAddressStrategyMap<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>globalWhiteRemoteAddressStrategy <span class="token operator">=</span> globalWhiteRemoteAddressStrategy<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>aclPlainAccessResourceMap <span class="token operator">=</span> aclPlainAccessResourceMap<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>accessKeyTable <span class="token operator">=</span> accessKeyTable<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-3-plainpermissonmanager-watch" tabindex="-1"><a class="header-anchor" href="#_4-2-3-plainpermissonmanager-watch" aria-hidden="true">#</a> 4.2.3 PlainPermissonManager#watch</h4><p><code>watch()</code> 方法用来监控 <code>RocketMQ安装目录/conf</code> 目录下所有ACL配置文件和 <code>rocketmq.acl.plain.file</code> 是否发生变化。</p><p>变化考虑两种情况：</p><ol><li>ACL 配置文件的数量发生变化， 此时会调用 <code>load()</code> 方法重新加载所有配置文件的数据</li><li>一种是配置文件的内容发生变化，调用 <code>load(String aclFilePath)</code> 加载单个文件的配置。</li></ol><p>具体完成监控ACL配置文件变化的是 <code>AclFileWatchService</code> 服务， 该服务是一个线程，当启动该服务后它会以 <code>WATCH_INTERVAL</code>（该参数目前设置为5秒，目前还不能在Broker配置文件中设置）的时间间隔来执行其核心逻辑。</p><p>在该服务中会记录其监控的ACL配置文件目录 <code>aclPath</code>、 ACL配置文件的数量 <code>aclFilesNum</code>、所有ACL配置文件绝对路径 <code>fileList</code> 以及每个ACL配置文件最近一次修改的时间 <code>fileLastModifiedTime</code> （Map类型，key为ACL配置文件的绝对路径，value为其最近一次修改时间）。</p><p>该服务的核心逻辑如下：</p><ul><li>获取ACL配置文件数量并和 <code>aclFilesNum</code> 进行比较是否相等 <ul><li>不相等则更新 <code>aclFilesNum和fileList</code> 并调用 <code>load()</code> 方法重新加载所有配置文件</li><li>相等则遍历每个ACL配置文件，获取其最近一次修改的时间，并将该时间与 <code>fileLastModifiedTime</code>中记录的时间进行比较 <ul><li>不相等则表示该文件发生过修改， 此时调用 <code>load(String aclFilePath)</code> 方法重新加载该配置文件。</li></ul></li></ul></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// PlainPermissionManager.java</span>
<span class="token doc-comment comment">/**
 * 监听ACL配置文件变化，重新load
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">AclFileWatchService</span> aclFileWatchService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AclFileWatchService</span><span class="token punctuation">(</span>defaultAclDir<span class="token punctuation">,</span> defaultAclFile<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AclFileWatchService<span class="token punctuation">.</span>Listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFileChanged</span><span class="token punctuation">(</span><span class="token class-name">String</span> aclFileName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">load</span><span class="token punctuation">(</span>aclFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFileNumChanged</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aclFileWatchService<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Succeed to start AclFileWatchService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>isWatchStart <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to start AclWatcherService&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// AclFileWatchService.java</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServiceName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; service started&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isStopped</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">waitForRunning</span><span class="token punctuation">(</span><span class="token constant">WATCH_INTERVAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>fileList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                fileList<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">getAllAclFiles</span><span class="token punctuation">(</span>aclPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>defaultAclFile<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>fileList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>defaultAclFile<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                fileList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>defaultAclFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">int</span> realAclFilesNum <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>aclFilesNum <span class="token operator">!=</span> realAclFilesNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;aclFilesNum: &quot;</span> <span class="token operator">+</span> aclFilesNum <span class="token operator">+</span> <span class="token string">&quot;  realAclFilesNum: &quot;</span> <span class="token operator">+</span> realAclFilesNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
                aclFilesNum <span class="token operator">=</span> realAclFilesNum<span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;aclFilesNum: &quot;</span> <span class="token operator">+</span> aclFilesNum <span class="token operator">+</span> <span class="token string">&quot;  realAclFilesNum: &quot;</span> <span class="token operator">+</span> realAclFilesNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> fileLastModifiedTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>realAclFilesNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> realAclFilesNum<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">String</span> fileAbsolutePath <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    fileLastModifiedTime<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>fileAbsolutePath<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>fileAbsolutePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lastModified</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>fileLastModifiedTime <span class="token operator">=</span> fileLastModifiedTime<span class="token punctuation">;</span>
                listener<span class="token punctuation">.</span><span class="token function">onFileNumChanged</span><span class="token punctuation">(</span>aclPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> aclFilesNum<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">String</span> fileName <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">Long</span> newLastModifiedTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lastModified</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newLastModifiedTime<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>fileLastModifiedTime<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        fileLastModifiedTime<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> newLastModifiedTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        listener<span class="token punctuation">.</span><span class="token function">onFileChanged</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServiceName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; service has exception. &quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServiceName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; service end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-broker-权限验证" tabindex="-1"><a class="header-anchor" href="#_4-3-broker-权限验证" aria-hidden="true">#</a> 4.3 Broker 权限验证</h3><p>Broker 权限验证主要逻辑都在 <code>PlainPermissionManager#validate</code> 方法中</p><ol><li>判断客户端 IP 是否在全局白名单中，如果匹配则直接放行</li><li>判断该用户是否配置在权限控制列表中，如果不在则返回错误</li><li>获取请求用户的访问控制权限，判断客户端 IP 是否在用户维度的白名单中，如果匹配则放行</li><li>对请求参数验计算签名，验证与客户端计算的签名是否一致，不一致则返回异常</li><li>验证资源访问权限，判断该用户是否有客户端请求的资源的相应操作权限</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">validate</span><span class="token punctuation">(</span><span class="token class-name">PlainAccessResource</span> plainAccessResource<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// Check the global white remote addr</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">RemoteAddressStrategy</span> remoteAddressStrategy <span class="token operator">:</span> globalWhiteRemoteAddressStrategy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>remoteAddressStrategy<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>plainAccessResource<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>plainAccessResource<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AclException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;No accessKey is configured&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>accessKeyTable<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>plainAccessResource<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AclException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;No acl config for %s&quot;</span><span class="token punctuation">,</span> plainAccessResource<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Check the white addr for accesskey</span>
    <span class="token class-name">String</span> aclFileName <span class="token operator">=</span> accessKeyTable<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>plainAccessResource<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PlainAccessResource</span> ownedAccess <span class="token operator">=</span> aclPlainAccessResourceMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>aclFileName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>plainAccessResource<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ownedAccess<span class="token punctuation">.</span><span class="token function">getRemoteAddressStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>plainAccessResource<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Check the signature</span>
    <span class="token class-name">String</span> signature <span class="token operator">=</span> <span class="token class-name">AclUtils</span><span class="token punctuation">.</span><span class="token function">calSignature</span><span class="token punctuation">(</span>plainAccessResource<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ownedAccess<span class="token punctuation">.</span><span class="token function">getSecretKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>signature<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>plainAccessResource<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AclException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Check signature failed for accessKey=%s&quot;</span><span class="token punctuation">,</span> plainAccessResource<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Check perm of each resource</span>

    <span class="token function">checkPerm</span><span class="token punctuation">(</span>plainAccessResource<span class="token punctuation">,</span> ownedAccess<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>checkPerm(PlainAccessResource needCheckedAccess, PlainAccessResource ownedAccess)</code> 方法完成验证账号是否有该资源访问权限的逻辑。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 验证是否有某资源的访问权限
 * 
 * <span class="token keyword">@param</span> <span class="token parameter">needCheckedAccess</span> 客户端请求需要的资源权限
 * <span class="token keyword">@param</span> <span class="token parameter">ownedAccess</span> 该账号拥有的资源权限
 */</span>
<span class="token keyword">void</span> <span class="token function">checkPerm</span><span class="token punctuation">(</span><span class="token class-name">PlainAccessResource</span> needCheckedAccess<span class="token punctuation">,</span> <span class="token class-name">PlainAccessResource</span> ownedAccess<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Permission</span><span class="token punctuation">.</span><span class="token function">needAdminPerm</span><span class="token punctuation">(</span>needCheckedAccess<span class="token punctuation">.</span><span class="token function">getRequestCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>ownedAccess<span class="token punctuation">.</span><span class="token function">isAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AclException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Need admin permission for request code=%d, but accessKey=%s is not&quot;</span><span class="token punctuation">,</span> needCheckedAccess<span class="token punctuation">.</span><span class="token function">getRequestCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ownedAccess<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Byte</span><span class="token punctuation">&gt;</span></span> needCheckedPermMap <span class="token operator">=</span> needCheckedAccess<span class="token punctuation">.</span><span class="token function">getResourcePermMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Byte</span><span class="token punctuation">&gt;</span></span> ownedPermMap <span class="token operator">=</span> ownedAccess<span class="token punctuation">.</span><span class="token function">getResourcePermMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 本次操作无需权限验证，直接通过</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>needCheckedPermMap <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// If the needCheckedPermMap is null,then return</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 该账号未设置任何访问规则，且用户是管理员，直接通过</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ownedPermMap <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> ownedAccess<span class="token punctuation">.</span><span class="token function">isAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// If the ownedPermMap is null and it is an admin user, then return</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 遍历需要的权限与拥有的权限进行对比</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Byte</span><span class="token punctuation">&gt;</span></span> needCheckedEntry <span class="token operator">:</span> needCheckedPermMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> resource <span class="token operator">=</span> needCheckedEntry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Byte</span> neededPerm <span class="token operator">=</span> needCheckedEntry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> isGroup <span class="token operator">=</span> <span class="token class-name">PlainAccessResource</span><span class="token punctuation">.</span><span class="token function">isRetryTopic</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>ownedPermMap <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>ownedPermMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Check the default perm</span>
            <span class="token keyword">byte</span> ownedPerm <span class="token operator">=</span> isGroup <span class="token operator">?</span> ownedAccess<span class="token punctuation">.</span><span class="token function">getDefaultGroupPerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span>
                ownedAccess<span class="token punctuation">.</span><span class="token function">getDefaultTopicPerm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Permission</span><span class="token punctuation">.</span><span class="token function">checkPermission</span><span class="token punctuation">(</span>neededPerm<span class="token punctuation">,</span> ownedPerm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AclException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;No default permission for %s&quot;</span><span class="token punctuation">,</span> <span class="token class-name">PlainAccessResource</span><span class="token punctuation">.</span><span class="token function">printStr</span><span class="token punctuation">(</span>resource<span class="token punctuation">,</span> isGroup<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Permission</span><span class="token punctuation">.</span><span class="token function">checkPermission</span><span class="token punctuation">(</span>neededPerm<span class="token punctuation">,</span> ownedPermMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AclException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;No default permission for %s&quot;</span><span class="token punctuation">,</span> <span class="token class-name">PlainAccessResource</span><span class="token punctuation">.</span><span class="token function">printStr</span><span class="token punctuation">(</span>resource<span class="token punctuation">,</span> isGroup<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,119),b={href:"https://github.com/apache/rocketmq/blob/develop/docs/cn/acl/user_guide.md",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/apache/rocketmq/blob/develop/docs/cn/acl/RocketMQ_Multiple_ACL_Files_%E8%AE%BE%E8%AE%A1.md",target:"_blank",rel:"noopener noreferrer"},f={href:"https://blog.csdn.net/prestigeding/article/details/94317946",target:"_blank",rel:"noopener noreferrer"},h={href:"https://blog.csdn.net/prestigeding/article/details/94975796",target:"_blank",rel:"noopener noreferrer"},y={href:"https://blog.csdn.net/qq_25145759/article/details/117519379",target:"_blank",rel:"noopener noreferrer"},A={href:"https://kunzhao.org/docs/rocketmq/rocketmq-acl/",target:"_blank",rel:"noopener noreferrer"},w=n("hr",null,null,-1),C=n("p",null,"欢迎关注公众号【消息中间件】（middleware-mq），更新消息中间件的源码解析和最新动态！",-1),R=n("figure",null,[n("img",{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202205170102971.jpg",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1);function S(P,_){const e=o("ExternalLinkIcon"),t=o("router-link");return l(),i("div",null,[n("p",null,[s("原文地址："),n("a",r,[s("http://hscarb.github.io/rocketmq/20220515-rocketmq-acl.html"),a(e)])]),d,n("nav",m,[n("ul",null,[n("li",null,[a(t,{to:"#_1-背景"},{default:p(()=>[s("1. 背景")]),_:1})]),n("li",null,[a(t,{to:"#_2-概述"},{default:p(()=>[s("2. 概述")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#_2-1-基本概念"},{default:p(()=>[s("2.1 基本概念")]),_:1})]),n("li",null,[a(t,{to:"#_2-2-基本流程"},{default:p(()=>[s("2.2 基本流程")]),_:1})]),n("li",null,[a(t,{to:"#_2-3-使用方法"},{default:p(()=>[s("2.3 使用方法")]),_:1})])])]),n("li",null,[a(t,{to:"#_3-实现原理"},{default:p(()=>[s("3. 实现原理")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#_3-1-客户端-aclclientrpchook"},{default:p(()=>[s("3.1 客户端 AclClientRPCHook")]),_:1})]),n("li",null,[a(t,{to:"#_3-2-broker-初始化-acl-配置"},{default:p(()=>[s("3.2 Broker 初始化 ACL 配置")]),_:1})]),n("li",null,[a(t,{to:"#_3-3-broker-权限验证"},{default:p(()=>[s("3.3 Broker 权限验证")]),_:1})])])]),n("li",null,[a(t,{to:"#_4-源码解析"},{default:p(()=>[s("4. 源码解析")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#_4-1-客户端-aclclientrpchook"},{default:p(()=>[s("4.1 客户端 AclClientRPCHook")]),_:1})]),n("li",null,[a(t,{to:"#_4-2-broker-初始化-acl-配置"},{default:p(()=>[s("4.2 Broker 初始化 ACL 配置")]),_:1})]),n("li",null,[a(t,{to:"#_4-3-broker-权限验证"},{default:p(()=>[s("4.3 Broker 权限验证")]),_:1})])])]),n("li",null,[a(t,{to:"#参考资料"},{default:p(()=>[s("参考资料")]),_:1})])])]),v,n("ul",null,[n("li",null,[n("a",b,[s("权限控制——官网文档"),a(e)])]),n("li",null,[n("a",g,[s("RocketMQ_Multiple_ACL_Files_设计"),a(e)])]),n("li",null,[n("a",f,[s("RocketMQ ACL使用指南"),a(e)])]),n("li",null,[n("a",h,[s("源码分析RocketMQ ACL实现机制"),a(e)])]),n("li",null,[n("a",y,[s("RocketMQ 源码分析之 ACL"),a(e)])]),n("li",null,[n("a",A,[s("RocketMQ ACL 权限控制"),a(e)])])]),w,C,R])}const q=c(k,[["render",S],["__file","20220515-rocketmq-acl.html.vue"]]);export{q as default};
