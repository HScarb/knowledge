import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as u,a as n,b as s,d as t,e as p}from"./app-eaa093f0.js";const i={},l={href:"http://hscarb.github.io/rocketmq/20221212-rocketmq-consumer-7-pop-consume.html",target:"_blank",rel:"noopener noreferrer"},k=p(`<h1 id="rocketmq-5-0-pop-消费模式-原理详解-源码解析" tabindex="-1"><a class="header-anchor" href="#rocketmq-5-0-pop-消费模式-原理详解-源码解析" aria-hidden="true">#</a> RocketMQ 5.0：POP 消费模式 原理详解 &amp; 源码解析</h1><h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1. 背景</h2><h3 id="_1-1-什么是-pop-消费" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是-pop-消费" aria-hidden="true">#</a> 1.1 什么是 Pop 消费</h3><p>RocketMQ 5.0 中引入了一种新的消费模式：Pop 消费模式。</p><p>我们知道 RocketMQ 原来有两种消费模式：Pull 模式消费和 Push 模式消费，其中 Push 模式指的是 Broker 将消息主动“推送”给消费者，它的背后其实是消费者在不断地 Pull 消息来实现类似于 Broker “推”消息给消费者的效果。</p><p>新引入的 Pop 消费模式主要是用于 Push 消费时将拉消息的动作替换成 Pop 。Pop 消费的行为和 Pull 消费很像，区别在于 Pop 消费的重平衡是在 Broker 端做的，而之前的 Pull 和 Push 消费都是由客户端完成重平衡。</p><h3 id="_1-2-如何使用-pop-消费" tabindex="-1"><a class="header-anchor" href="#_1-2-如何使用-pop-消费" aria-hidden="true">#</a> 1.2 如何使用 Pop 消费</h3><p>RocketMQ 提供了 2 种方式，能够让 Push 消费切换为使用 Pop 模式拉取消息（Pull 消费暂不支持切换 Pop 模式），分别为命令行方式切换和客户端代码方式切换。</p><h4 id="_1-2-1-使用命令行方式切换" tabindex="-1"><a class="header-anchor" href="#_1-2-1-使用命令行方式切换" aria-hidden="true">#</a> 1.2.1 使用命令行方式切换</h4><p>利用命令行，用如下命令，指定集群和需要切换的消费组，可以将一个消费组切换成 Pop 消费模式消费某个 Topic</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mqadmin setConsumeMode <span class="token parameter variable">-c</span> cluster <span class="token parameter variable">-t</span> topic <span class="token parameter variable">-g</span> group <span class="token parameter variable">-m</span> POP <span class="token parameter variable">-q</span> <span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以下为参数含义，其中 <code>popShareQueueNum</code> 表示 1 个队列最多可以被 N 个消费者同时消费。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>opt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;clusterName&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;create subscription group to which cluster&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
opt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&quot;t&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;topicName&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;topic name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
opt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&quot;g&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;groupName&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;consumer group name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
opt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&quot;m&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mode&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;consume mode. PULL/POP&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
opt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Option</span><span class="token punctuation">(</span><span class="token string">&quot;q&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;popShareQueueNum&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;num of queue which share in pop mode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-2-2-代码切换" tabindex="-1"><a class="header-anchor" href="#_1-2-2-代码切换" aria-hidden="true">#</a> 1.2.2 代码切换</h4><p>在创建 Consumer 之前，先运行 <code>switchPop()</code> 方法，它其实与上面命令行的逻辑一样，也是发送请求给集群中的所有 Broker 节点，让它们切换对应消费者组和 Topic 的消费者的消费模式为 Pop 模式。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// PopPushConsumer.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PopPushConsumer</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">CONSUMER_GROUP</span> <span class="token operator">=</span> <span class="token string">&quot;CID_JODIE_1&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">TOPIC</span> <span class="token operator">=</span> <span class="token string">&quot;TopicTest&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// Or use AdminTools directly: mqadmin setConsumeMode -c cluster -t topic -g group -m POP -n 8</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">switchPop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">DefaultMQAdminExt</span> mqAdminExt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQAdminExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mqAdminExt<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ClusterInfo</span> clusterInfo <span class="token operator">=</span> mqAdminExt<span class="token punctuation">.</span><span class="token function">examineBrokerClusterInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> brokerAddrs <span class="token operator">=</span> clusterInfo<span class="token punctuation">.</span><span class="token function">getBrokerAddrTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">BrokerData</span><span class="token operator">::</span><span class="token function">selectBrokerAddr</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> brokerAddr <span class="token operator">:</span> brokerAddrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mqAdminExt<span class="token punctuation">.</span><span class="token function">setMessageRequestMode</span><span class="token punctuation">(</span>brokerAddr<span class="token punctuation">,</span> <span class="token constant">TOPIC</span><span class="token punctuation">,</span> <span class="token constant">CONSUMER_GROUP</span><span class="token punctuation">,</span> <span class="token class-name">MessageRequestMode</span><span class="token punctuation">.</span><span class="token constant">POP</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">3_000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token function">switchPop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token constant">CONSUMER_GROUP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token constant">TOPIC</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        consumer<span class="token punctuation">.</span><span class="token function">setConsumeFromWhere</span><span class="token punctuation">(</span><span class="token class-name">ConsumeFromWhere</span><span class="token punctuation">.</span><span class="token constant">CONSUME_FROM_LAST_OFFSET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>msgs<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s Receive New Messages: %s %n&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span><span class="token constant">CONSUME_SUCCESS</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        consumer<span class="token punctuation">.</span><span class="token function">setClientRebalance</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Consumer Started.%n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-引入-pop-消费模式的原因" tabindex="-1"><a class="header-anchor" href="#_1-3-引入-pop-消费模式的原因" aria-hidden="true">#</a> 1.3 引入 Pop 消费模式的原因</h3><p>引入 Pop 消费主要的原因是由于 Push 消费的机制导致它存在一些痛点。RocketMQ 5.0 云原生化的要求催生着一种能够解决这些痛点的新消费模式诞生。</p><p>Push 消费模式的重平衡逻辑是在客户端完成的，这就导致了几个问题：</p><ol><li>客户端代码逻辑较重，要支持一种新语言的客户端就必须实现完整的重平衡逻辑，此外还需要实现拉消息、位点管理、消费失败后将消息发回 Broker 重试等逻辑。这给多语言客户端的支持造成很大的阻碍。</li><li>当客户端升级或者下线时，都要进行重平衡操作，可能造成消息堆积。</li></ol><p>此外，Push 消费的特性是重平衡后每个消费者都分配到消费一定数量的队列，而每个队列最多只能被一个消费者消费。这就决定了消费者的横向扩展能力受到 Topic 中队列数量的限制。这里有引入了如下痛点</p><ol><li>消费者无法无限扩展，当消费者数量扩大到大于队列数量时，有的消费者将无法分配到队列。</li><li>当某些消费者僵死（hang 住）时（与 Broker 的心跳未断，但是无法消费消息），会造成其消费的队列的消息堆积，迟迟无法被消费，也不会主动重平衡来解决这个问题。</li></ol><hr>`,23),r={href:"https://github.com/apache/rocketmq-clients",target:"_blank",rel:"noopener noreferrer"},d=p(`<h2 id="_2-概要设计" tabindex="-1"><a class="header-anchor" href="#_2-概要设计" aria-hidden="true">#</a> 2. 概要设计</h2><p>Pop 消费主要的设计思想是将繁重的客户端逻辑如重平衡、消费进度提交、消费失败后发到 Broker 重试等逻辑放到 Broker 端。</p><p>客户端只需要不断发送 Pop 请求，由 Broker 端来分配每次拉取请求要拉取的队列并返回消息。这样就可以实现多个客户端同时拉取一个队列的效果，不会存在一个客户端 hang 住导致队列消息堆积，也不会存在频繁的重平衡导致消息积压。</p><h3 id="_2-1-pop-消费流程" tabindex="-1"><a class="header-anchor" href="#_2-1-pop-消费流程" aria-hidden="true">#</a> 2.1 Pop 消费流程</h3><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202212130012457.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>为了保证消费速度，Pop 消费一次请求可以拉取一批消息，拉取到的消息系统属性中有一个比较重要的属性叫做 <code>POP_CK</code>，它是该消息的句柄，ACK 时要通过句柄来定位到它。在 Broker 端会为这批消息保存一个 <code>CheckPoint</code>，它里面包含一批消息的句柄信息。</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202212130025660.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>对于长时间没有 ACK 的消息，Broker 端并非毫无办法。Pop 消费引入了消息不可见时间（invisibleTime）的机制。当 Pop 出一条消息后，这条消息对所有消费者不可见，即进入不可见时间，当它超过该时刻还没有被 ACK，Broker 将会把它放入 Pop 专门的重试 Topic（这个过程称为 Revive），这条消息重新可以被消费。</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202212130013463.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Push 消费的重试间隔时间会随着重试次数而增加，Pop 消费也沿用了这个设计。此外，Pop 消费提供了一个接口 <code>changeInvisibleTime()</code> 来修改单条消息的不可见时间。</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202212130025555.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>从图上可以看见，本来消息会在中间这个时间点再一次的可见的，但是我们在可见之前提前使用 <code>changeInvisibleTime</code> 延长了不可见时间，让这条消息的可见时间推迟了。</p><p>当消费失败（用户业务代码返回 reconsumeLater 或者抛异常）的时候，消费者就通过 <code>changeInvisibleTime</code> 按照重试次数来修改下一次的可见时间。另外如果消费消息用时超过了 30 秒（默认值，可以修改），则 Broker 也会把消息放到重试队列。</p><h3 id="_2-2-客户端-服务端交互" tabindex="-1"><a class="header-anchor" href="#_2-2-客户端-服务端交互" aria-hidden="true">#</a> 2.2 客户端-服务端交互</h3><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/12/1671126626388.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Pop 消费的流程与 Push 消费较为相似，这里我分为 5 个步骤。</p><ol><li>向 Broker 端发送请求，切换消息拉取模式为 Pop 模式</li><li>重平衡服务执行重平衡，此时已经切换为 Pop 模式，所以是向 Broker 端发起请求，请求中带有重平衡策略，Broker 会返回重平衡的结果。</li><li>重平衡完毕之后开始拉取消息，拉取消息服务发送 <code>POP_MESSAGE</code> 请求给 Broker，获取一批消息</li><li>消费这批消息</li><li>对成功消费的消息，发送 ACK 请求给 Broker</li></ol><h3 id="_2-3-服务端实现" tabindex="-1"><a class="header-anchor" href="#_2-3-服务端实现" aria-hidden="true">#</a> 2.3 服务端实现</h3><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202212130042984.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>服务端收到 Pop 请求后，会先在 Queue 维度上加锁，保证同一时间只有一个消费者可以拉取该队列的消息。</p><p>随后服务端会在存储中查询一批消息，将这批消息的构建的 <code>CheckPoint</code> 保存在 Broker 中，以便与 ACK 的消息匹配。</p><p><code>CheckPoint</code> 的存在目的是与 ACK 的消息匹配，并将没有匹配的消息重试。<code>CheckPoint</code> 的 <code>ReviveTime</code> 就是它这批消息需要被尝试重试（唤醒）的时间。</p><p><code>CheckPoint</code>会先被保存在内存中，一般来说消息消费很快，所以在内存中就能够与 ACK 消息匹配成功后删除。如果在一段时间（默认 3s）内没有匹配成功，它将会从内存中被删除，转入磁盘等待匹配。</p><p>对于 ACK 消息也一样，它先被放入内存中匹配，如果在内存中找不到对应的 <code>CheckPoint</code>，也会放入磁盘。</p><hr><p>RocketMQ 的磁盘存储实际上就是 Topic 和队列。为了避免频繁检查匹配状态，我们只在 <code>CheckPoint</code> 需要被唤醒时做检查，这里就可以用到定时消息，将 <code>CheckPoint</code> 和 ACK 消息定时到 <code>ReviveTime</code> 投递。这里 RocketMQ 将 <code>CheckPoint</code> 的投递时间提前 1s，以便能先消费到，与 ACK 消息匹配。</p><p>当定时到期，它们会被投递到 <code>REVIVE_TOPIC</code>。有个后台线程消费这个 Topic，把 <code>CheckPoint</code> 放到一个 map 中，对于 ACK 消息则从 map 中查找 <code>CheckPoint</code> 来尝试匹配，如果匹配成功则更新 <code>REVIVE_TOPIC</code> 的消费位点。对于超过 <code>ReviveTime</code> 还没有被匹配的 <code>CheckPoint</code>，查出这批消息中要重试消息对应的真实消息，并放到 Pop 消费重试 Topic 中。</p><p>Broker 端的 Pop 消费逻辑会概率性消费到重试 Topic 中的消息。</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202212130045464.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3-详细设计" tabindex="-1"><a class="header-anchor" href="#_3-详细设计" aria-hidden="true">#</a> 3. 详细设计</h2><h3 id="_3-1-broker-端重平衡" tabindex="-1"><a class="header-anchor" href="#_3-1-broker-端重平衡" aria-hidden="true">#</a> 3.1 Broker 端重平衡</h3><p>Pop 消费的重平衡在 Broker 端完成，客户端的重平衡服务重平衡时会向 Broker 端发送查询请求，查询自己的分配结果。</p><p>重平衡的主要逻辑其实与在客户端重平衡类似，只不过变成了 Broker 接收客户端的参数之后根据这些参数进行重平衡，然后把重平衡结果返回给客户端。</p><p>Broker 端重平衡入口为 <code>QueryAssignmentProcessor#doLoadBalance()</code>。</p><p>对于广播模式，直接返回 Topic 下所有的队列。</p><p>对于集群模式，Pop 模式的重平衡与 Push 模式不同，它允许一个队列被多个消费者 Pop 消费。在切换 Pop 模式时引入了 <code>popShareQueueNum</code> 参数，表示允许消费者进行额外的负载获取队列的次数（可以被共享的队列数），0 表示可以消费所有队列。</p><p>所以重平衡时对每个消费者执行 <code>popShareQueueNum</code> 次重平衡策略，将多次重平衡分配到的队列都分给这个消费者消费。这样，每个队列就会被多个消费者消费。</p><p>下图为 <code>popShareQueueNum = 1</code> 时的重平衡情况，每个消费者被负载了 2 次，每个队列被 2 个消费者共享（1 + <code>popShareQueueNum</code>）。</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/12/1671126626711.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-2-broker-端-pop-消息" tabindex="-1"><a class="header-anchor" href="#_3-2-broker-端-pop-消息" aria-hidden="true">#</a> 3.2 Broker 端 Pop 消息</h3><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/12/1671126626730.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-2-1-请求处理入口" tabindex="-1"><a class="header-anchor" href="#_3-2-1-请求处理入口" aria-hidden="true">#</a> 3.2.1 请求处理入口</h4><p>Pop 消息的 Broker 端处理是由 <code>PopMessageProcessor#processRequest()</code> 完成。</p><p>该方法逻辑为</p><ol><li>完成请求体解析和一些参数和权限的校验</li><li>生成一个 0 到 99 的随机整数，如果能被 5 整除，则先拉取重试 Topic。</li><li>从重试 Topic 的每个 Queue 中 Pop 消息</li><li>根据请求的队列 Pop 对应的队列的消息。如果 Pop 请求指定了队列，只会消费一个队列的消息；如果没有指定队列，则 Pop 所有队列的消息</li><li>如果 Pop 的消息没有满（达到请求的最大消息数量），且之前没有拉取过重试消息，则 Pop 重试 Topic 所有队列的消息（期望填充满 Pop 请求要求的数量）</li><li>判断是否 Pop 到消息，如果有则传输回客户端，如果没有则挂起轮询，直到超过请求的 timeout 参数指定的时间</li></ol><h4 id="_3-2-2-pop-消息方法" tabindex="-1"><a class="header-anchor" href="#_3-2-2-pop-消息方法" aria-hidden="true">#</a> 3.2.2 Pop 消息方法</h4><p>上面的 3、4、5 都涉及到从存储中 Pop 消息，它们都调用同一个方法：<code>popMsgFromQueue</code>，它是真正查询消息的方法，下面看一下它的逻辑</p><ol><li>将需要 Pop 的队列上锁（用 <code>AtomicBoolean</code> 实现）</li><li>计算 Pop 消息的起始偏移量，会返回内存中 CheckPoint 与 ACK 消息匹配后的最新位点</li><li>从磁盘中根据起始偏移量查询一批消息</li><li>计算队列剩余的消息数量（用作返回值）</li><li>拉取的这批消息将生成一个 <code>CheckPoint</code>，存入内存和磁盘</li><li>解锁队列</li><li>返回 Pop 到的消息</li></ol><p>上面方法第 5 步会将生成的 <code>CheckPoint</code> 放入内存和磁盘，注意这个 <code>CheckPoint</code> 会保存一批获取到的消息的起始偏移量和相对偏移量（相对于起始偏移量），所以一个 <code>CheckPoint</code> 在保存和匹配时都对应一批消息。</p><h4 id="_3-2-3-保存-checkpoint-用于匹配" tabindex="-1"><a class="header-anchor" href="#_3-2-3-保存-checkpoint-用于匹配" aria-hidden="true">#</a> 3.2.3 保存 <code>CheckPoint</code> 用于匹配</h4><ol><li>构造 <code>CheckPoint</code>，添加起始偏移量和所有 Pop 出的消息的相对偏移量</li><li>尝试将 <code>CheckPoint</code> 添加到内存 Buffer，如果成功则直接返回。但是在内存中匹配 <code>CheckPoint</code> 和 <code>AckMsg</code> 的开关默认是关闭的，所以这里不会加入到内存，会继续后面的逻辑放入磁盘</li><li>将 <code>CheckPoint</code> 构造成一个消息，数据都放到消息体中，然后这个消息定时到 <code>ReviveTime</code>（唤醒重试的时间）- 1s（为了留时间与 <code>AckMsg</code> 匹配）发送。会发送到 ReviveTopic 的一个队列。</li></ol><h3 id="_3-3-broker-端-ack-消息" tabindex="-1"><a class="header-anchor" href="#_3-3-broker-端-ack-消息" aria-hidden="true">#</a> 3.3 Broker 端 ACK 消息</h3><p>Ack 消息接口每次只允许 Ack 一条消息，入口是 <code>AckMessageProcessor#processRequest()</code></p><ol><li>从请求头解析和构造 Ack 消息，并作一些校验</li><li>顺序消息 Ack 和普通消息 Ack 分别处理，这里针对普通消息</li><li>先尝试将 Ack 消息放入内存 Buffer，如果成功则直接返回。失败则有可能是内存匹配未开启。</li><li>如果放入内存失败，构造一个用于存到磁盘的消息，定时到唤醒重试时间投递（到 ReviveTopic）。</li></ol><h3 id="_3-4-broker-端-checkpoint-与-ackmsg-匹配" tabindex="-1"><a class="header-anchor" href="#_3-4-broker-端-checkpoint-与-ackmsg-匹配" aria-hidden="true">#</a> 3.4 Broker 端 <code>CheckPoint</code> 与 <code>AckMsg</code> 匹配</h3><p><code>CheckPoint</code> 和 <code>AckMsg</code> 都被设计成先尝试放入内存中匹配，然后再磁盘中匹配，因为通常情况下消息消费之后都能很快 ACK，内存匹配性能较高。如果 <code>CheckPoint</code> 在内存中停留太久没有被匹配，则会转移到磁盘中（ReviveTopic），有个线程消费这个 ReviveTopic 来匹配。到达唤醒重试时间（ReviveTime）还没有被匹配的 <code>CheckPoint</code> 里面的消息将会重试（发送到 Pop 消息重试 Topic，后面的 Pop 有概率消费到）。</p><h4 id="_3-4-1-内存匹配" tabindex="-1"><a class="header-anchor" href="#_3-4-1-内存匹配" aria-hidden="true">#</a> 3.4.1 内存匹配</h4><p>内存匹配逻辑由一个线程 <code>PopBufferMergeService</code> 完成，只有主节点运行该匹配线程。</p><p>Pop 消息时会先添加 <code>CheckPoint</code> 到 buffer，Ack 消息时尝试从内存 buffer 中的 <code>CheckPoint</code> 匹配。同时，它每 5ms 执行一次扫描，将不符合内存中存活条件的 <code>CheckPoint</code> 移除，放入磁盘存储。</p><p><code>addCk</code> 方法将 <code>CheckPoint</code> 放入内存 Buffer。<code>CheckPoint</code> 中有一个码表 <code>BitMap</code>，用来表示它里面的每个条消息是否被 Ack 和被存到磁盘。用 <code>BitMap</code> 可以加速匹配。</p><p><code>addAk</code> 方法会尝试从 buffer 中找 <code>CheckPoint</code> 来匹配。如果找到对应的 <code>CheckPoint</code>，则修改它码表的对应位，表示这条消息被 ACK。</p><p><code>scan</code> 方法每 5ms 执行一次</p><ol><li>将已经匹配或存盘的 <code>CheckPoint</code> 移出 buffer</li><li>把超时的 <code>CheckPoint</code> 存入磁盘</li><li>对于匹配完成或者存盘的 <code>CheckPoint</code>，为他们提交消息偏移量</li></ol><h4 id="_3-4-2-store-匹配和消息重试" tabindex="-1"><a class="header-anchor" href="#_3-4-2-store-匹配和消息重试" aria-hidden="true">#</a> 3.4.2 Store 匹配和消息重试</h4><p>从内存中移除保存到磁盘的 <code>CheckPoint</code> 和 <code>AckMsg</code> 都会封装成消息进行定时投递（定时到重试时间），最终投递到 <code>ReviveTopic</code>。存储中匹配也由一个线程 <code>PopReviveService</code> 完成，它消费 <code>ReviveTopic</code> 的消息进行匹配和重试。</p><p>Pop 消费由于要根据 Topic 来 Pop 消息，重试 Topic 需要针对每个 [消费组-Topic] 隔离，所以它不能用普通消息的消费组维度的重试 Topic，而是用专门的 Pop 重试 Topic <code>%RETRY%{消费组}_{TOPIC}</code>。</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/12/1671126626776.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>PopReviveService#run</code> 方法是该处理线程的入口，它每秒都会调用 <code>consumeReviveMessage</code> 消费和匹配 ReviveTopic 消息，然后调用 <code>mergeAndRevive</code> 方法检查匹配的情况并对达到唤醒时间还没有成功匹配的消息重试。</p><p>这两个方法会先初始化一个 map，用于存放 <code>CheckPoint</code>，供 <code>AckMsg</code> 根据 map key 查找 <code>CheckPoint</code>。</p><hr><p><code>consumeReviveMessage</code> 会消费 2s 内的一批 ReviveTopic 消息，CK 消息放入 map，Ack 消息则从 map 中查找 CK，在码表上标记对应的消息为 Acked。</p><p><code>mergeAndRevive</code> 方法如其名，遍历消费到的 CK 消息，对于已经到重试时间的，对没有 Ack 的消息进行重试。</p><p>重试逻辑为先从 MessageStore 查询对应的真正消息，然后将该消息发送到 Pop 重试队列。</p><h2 id="_4-源码解析" tabindex="-1"><a class="header-anchor" href="#_4-源码解析" aria-hidden="true">#</a> 4. 源码解析</h2><h3 id="_4-1-broker-端重平衡" tabindex="-1"><a class="header-anchor" href="#_4-1-broker-端重平衡" aria-hidden="true">#</a> 4.1 Broker 端重平衡</h3><h4 id="_4-1-1-queryassignmentprocessor-doloadbalance" tabindex="-1"><a class="header-anchor" href="#_4-1-1-queryassignmentprocessor-doloadbalance" aria-hidden="true">#</a> 4.1.1 <code>QueryAssignmentProcessor#doLoadBalance</code></h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Broker 端重平衡
 * Returns empty set means the client should clear all load assigned to it before, null means invalid result and the
 * client should skip the update logic
 *
 * <span class="token keyword">@param</span> <span class="token parameter">topic</span>
 * <span class="token keyword">@param</span> <span class="token parameter">consumerGroup</span>
 * <span class="token keyword">@param</span> <span class="token parameter">clientId</span>
 * <span class="token keyword">@param</span> <span class="token parameter">messageModel</span> 消费模型（广播/集群）
 * <span class="token keyword">@param</span> <span class="token parameter">strategyName</span> 重平衡策略名
 * <span class="token keyword">@return</span> the MessageQueues assigned to this client
 */</span>
<span class="token keyword">private</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> <span class="token function">doLoadBalance</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> consumerGroup<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> clientId<span class="token punctuation">,</span>
                                        <span class="token keyword">final</span> <span class="token class-name">MessageModel</span> messageModel<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> strategyName<span class="token punctuation">,</span>
                                        <span class="token class-name">SetMessageRequestModeRequestBody</span> setMessageRequestModeRequestBody<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> assignedQueueSet <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">TopicRouteInfoManager</span> topicRouteInfoManager <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getTopicRouteInfoManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">switch</span> <span class="token punctuation">(</span>messageModel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token constant">BROADCASTING</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token comment">// 广播模式，返回该 Topic 下所有队列</span>
            assignedQueueSet <span class="token operator">=</span> topicRouteInfoManager<span class="token punctuation">.</span><span class="token function">getTopicSubscribeInfo</span><span class="token punctuation">(</span>topic<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>assignedQueueSet <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;QueryLoad: no assignment for group[{}], the topic[{}] does not exist.&quot;</span><span class="token punctuation">,</span> consumerGroup<span class="token punctuation">,</span> topic<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">case</span> <span class="token constant">CLUSTERING</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token comment">// 集群模式</span>
            <span class="token comment">// 获取 Topic 下所有队列</span>
            <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> mqSet <span class="token operator">=</span> topicRouteInfoManager<span class="token punctuation">.</span><span class="token function">getTopicSubscribeInfo</span><span class="token punctuation">(</span>topic<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> mqSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>topic<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token class-name">MixAll</span><span class="token punctuation">.</span><span class="token constant">RETRY_GROUP_TOPIC_PREFIX</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;QueryLoad: no assignment for group[{}], the topic[{}] does not exist.&quot;</span><span class="token punctuation">,</span> consumerGroup<span class="token punctuation">,</span> topic<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isServerLoadBalancerEnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> mqSet<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cidAll <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token comment">// 获取发起请求的消费组信息</span>
            <span class="token class-name">ConsumerGroupInfo</span> consumerGroupInfo <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getConsumerManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getConsumerGroupInfo</span><span class="token punctuation">(</span>consumerGroup<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>consumerGroupInfo <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cidAll <span class="token operator">=</span> consumerGroupInfo<span class="token punctuation">.</span><span class="token function">getAllClientId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> cidAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;QueryLoad: no assignment for group[{}] topic[{}], get consumer id list failed&quot;</span><span class="token punctuation">,</span> consumerGroup<span class="token punctuation">,</span> topic<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> mqAll <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mqAll<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>mqSet<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 将队列和消费者客户端ID 排序</span>
            <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>mqAll<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>cidAll<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> allocateResult <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// 根据重平衡策略名称获取策略</span>
                <span class="token class-name">AllocateMessageQueueStrategy</span> allocateMessageQueueStrategy <span class="token operator">=</span> name2LoadStrategy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>strategyName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> allocateMessageQueueStrategy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;QueryLoad: unsupported strategy [{}],  {}&quot;</span><span class="token punctuation">,</span> strategyName<span class="token punctuation">,</span> <span class="token class-name">RemotingHelper</span><span class="token punctuation">.</span><span class="token function">parseChannelRemoteAddr</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>setMessageRequestModeRequestBody <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> setMessageRequestModeRequestBody<span class="token punctuation">.</span><span class="token function">getMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">MessageRequestMode</span><span class="token punctuation">.</span><span class="token constant">POP</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// POP 模式重平衡</span>
                    allocateResult <span class="token operator">=</span> <span class="token function">allocate4Pop</span><span class="token punctuation">(</span>allocateMessageQueueStrategy<span class="token punctuation">,</span> consumerGroup<span class="token punctuation">,</span> clientId<span class="token punctuation">,</span> mqAll<span class="token punctuation">,</span>
                                                  cidAll<span class="token punctuation">,</span> setMessageRequestModeRequestBody<span class="token punctuation">.</span><span class="token function">getPopShareQueueNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 普通重平衡</span>
                    allocateResult <span class="token operator">=</span> allocateMessageQueueStrategy<span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span>consumerGroup<span class="token punctuation">,</span> clientId<span class="token punctuation">,</span> mqAll<span class="token punctuation">,</span> cidAll<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;QueryLoad: no assignment for group[{}] topic[{}], allocate message queue exception. strategy name: {}, ex: {}&quot;</span><span class="token punctuation">,</span> consumerGroup<span class="token punctuation">,</span> topic<span class="token punctuation">,</span> strategyName<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            assignedQueueSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>allocateResult <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                assignedQueueSet<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>allocateResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> assignedQueueSet<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-2-queryassignmentprocessor-allocate4pop" tabindex="-1"><a class="header-anchor" href="#_4-1-2-queryassignmentprocessor-allocate4pop" aria-hidden="true">#</a> 4.1.2 <code>QueryAssignmentProcessor#allocate4Pop</code></h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * POP 模式重平衡
 *
 * <span class="token keyword">@param</span> <span class="token parameter">allocateMessageQueueStrategy</span> 重平衡策略
 * <span class="token keyword">@param</span> <span class="token parameter">consumerGroup</span> 消费组
 * <span class="token keyword">@param</span> <span class="token parameter">clientId</span> 消费组客户端 ID
 * <span class="token keyword">@param</span> <span class="token parameter">mqAll</span> 全部消息队列
 * <span class="token keyword">@param</span> <span class="token parameter">cidAll</span> 全部客户端ID
 * <span class="token keyword">@param</span> <span class="token parameter">popShareQueueNum</span> Pop 模式下可允许被共享的队列数，0 表示无限
 * <span class="token keyword">@return</span> 该消费者负载的队列列表
 */</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> <span class="token function">allocate4Pop</span><span class="token punctuation">(</span><span class="token class-name">AllocateMessageQueueStrategy</span> allocateMessageQueueStrategy<span class="token punctuation">,</span>
                                       <span class="token keyword">final</span> <span class="token class-name">String</span> consumerGroup<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> clientId<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> mqAll<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cidAll<span class="token punctuation">,</span>
                                       <span class="token keyword">int</span> popShareQueueNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> allocateResult<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>popShareQueueNum <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> popShareQueueNum <span class="token operator">&gt;=</span> cidAll<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 每个消费者能消费所有队列，返回全部队列。队列 ID 为 -1 表示 Pop 消费时消费全部队列</span>
        <span class="token comment">//each client pop all messagequeue</span>
        allocateResult <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>mqAll<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageQueue</span> mq <span class="token operator">:</span> mqAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//must create new MessageQueue in case of change cache in AssignmentManager</span>
            <span class="token class-name">MessageQueue</span> newMq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MessageQueue</span><span class="token punctuation">(</span>mq<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mq<span class="token punctuation">.</span><span class="token function">getBrokerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            allocateResult<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>newMq<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cidAll<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> mqAll<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 消费者数量小于等于队列数量，每个消费者分配 N 个队列，每个队列也会被分配给多个消费者</span>
            <span class="token comment">//consumer working in pop mode could share the MessageQueues assigned to the N (N = popWorkGroupSize) consumer following it in the cid list</span>
            allocateResult <span class="token operator">=</span> allocateMessageQueueStrategy<span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span>consumerGroup<span class="token punctuation">,</span> clientId<span class="token punctuation">,</span> mqAll<span class="token punctuation">,</span> cidAll<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> index <span class="token operator">=</span> cidAll<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>clientId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 负载 popShareQueueNum 次，将每次负载的结果加入最终结果</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> popShareQueueNum<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    index<span class="token operator">++</span><span class="token punctuation">;</span>
                    index <span class="token operator">=</span> index <span class="token operator">%</span> cidAll<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> tmp <span class="token operator">=</span> allocateMessageQueueStrategy<span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span>consumerGroup<span class="token punctuation">,</span> cidAll<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span> mqAll<span class="token punctuation">,</span> cidAll<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    allocateResult<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 消费者数量大于队列数量，保证每个消费者都有队列消费</span>
            <span class="token comment">//make sure each cid is assigned</span>
            allocateResult <span class="token operator">=</span> <span class="token function">allocate</span><span class="token punctuation">(</span>consumerGroup<span class="token punctuation">,</span> clientId<span class="token punctuation">,</span> mqAll<span class="token punctuation">,</span> cidAll<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> allocateResult<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-broker-端-pop-消息" tabindex="-1"><a class="header-anchor" href="#_4-2-broker-端-pop-消息" aria-hidden="true">#</a> 4.2 Broker 端 Pop 消息</h3><h4 id="_4-2-1-popmessageprocessor-processrequest" tabindex="-1"><a class="header-anchor" href="#_4-2-1-popmessageprocessor-processrequest" aria-hidden="true">#</a> 4.2.1 <code>PopMessageProcessor#processRequest</code></h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 处理 POP 消息请求
 *
 * <span class="token keyword">@param</span> <span class="token parameter">channel</span>
 * <span class="token keyword">@param</span> <span class="token parameter">request</span>
 * <span class="token keyword">@return</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">RemotingCommandException</span></span>
 */</span>
<span class="token keyword">private</span> <span class="token class-name">RemotingCommand</span> <span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Channel</span> channel<span class="token punctuation">,</span> <span class="token class-name">RemotingCommand</span> request<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">RemotingCommandException</span> <span class="token punctuation">{</span>
    <span class="token comment">// ... 解析请求体和一系列校验</span>

    <span class="token comment">// 生成随机数</span>
    <span class="token keyword">int</span> randomQ <span class="token operator">=</span> random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> reviveQid<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">isOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        reviveQid <span class="token operator">=</span> <span class="token class-name">KeyBuilder</span><span class="token punctuation">.</span><span class="token constant">POP_ORDER_REVIVE_QUEUE</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 轮询选一个 Revive 队列</span>
        reviveQid <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>ckMessageNumber<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getReviveQueueNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span> commercialSizePerMsg <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCommercialSizePerMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">GetMessageResult</span> getMessageResult <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GetMessageResult</span><span class="token punctuation">(</span>commercialSizePerMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 队列中剩余的消息数量</span>
    <span class="token keyword">long</span> restNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// 1/5 的概率拉取重试消息</span>
    <span class="token keyword">boolean</span> needRetry <span class="token operator">=</span> randomQ <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> popTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 拉取重试消息</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>needRetry <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>requestHeader<span class="token punctuation">.</span><span class="token function">isOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TopicConfig</span> retryTopicConfig <span class="token operator">=</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getTopicConfigManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectTopicConfig</span><span class="token punctuation">(</span><span class="token class-name">KeyBuilder</span><span class="token punctuation">.</span><span class="token function">buildPopRetryTopic</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>retryTopicConfig <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> retryTopicConfig<span class="token punctuation">.</span><span class="token function">getReadQueueNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> queueId <span class="token operator">=</span> <span class="token punctuation">(</span>randomQ <span class="token operator">+</span> i<span class="token punctuation">)</span> <span class="token operator">%</span> retryTopicConfig<span class="token punctuation">.</span><span class="token function">getReadQueueNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                restNum <span class="token operator">=</span> <span class="token function">popMsgFromQueue</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> getMessageResult<span class="token punctuation">,</span> requestHeader<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> restNum<span class="token punctuation">,</span> reviveQid<span class="token punctuation">,</span>
                                          channel<span class="token punctuation">,</span> popTime<span class="token punctuation">,</span> messageFilter<span class="token punctuation">,</span>
                                          startOffsetInfo<span class="token punctuation">,</span> msgOffsetInfo<span class="token punctuation">,</span> orderCountInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 如果拉取请求没有指定队列（-1），则拉取所有队列</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// read all queue</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> topicConfig<span class="token punctuation">.</span><span class="token function">getReadQueueNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> queueId <span class="token operator">=</span> <span class="token punctuation">(</span>randomQ <span class="token operator">+</span> i<span class="token punctuation">)</span> <span class="token operator">%</span> topicConfig<span class="token punctuation">.</span><span class="token function">getReadQueueNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            restNum <span class="token operator">=</span> <span class="token function">popMsgFromQueue</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> getMessageResult<span class="token punctuation">,</span> requestHeader<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> restNum<span class="token punctuation">,</span> reviveQid<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> popTime<span class="token punctuation">,</span> messageFilter<span class="token punctuation">,</span>
                                      startOffsetInfo<span class="token punctuation">,</span> msgOffsetInfo<span class="token punctuation">,</span> orderCountInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 拉取请求指定了队列，拉取对应的队列</span>
        <span class="token keyword">int</span> queueId <span class="token operator">=</span> requestHeader<span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        restNum <span class="token operator">=</span> <span class="token function">popMsgFromQueue</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> getMessageResult<span class="token punctuation">,</span> requestHeader<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> restNum<span class="token punctuation">,</span> reviveQid<span class="token punctuation">,</span> channel<span class="token punctuation">,</span>
                                  popTime<span class="token punctuation">,</span> messageFilter<span class="token punctuation">,</span>
                                  startOffsetInfo<span class="token punctuation">,</span> msgOffsetInfo<span class="token punctuation">,</span> orderCountInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 如果前面拉取普通消息之后，没有满，则再拉取一次重试消息</span>
    <span class="token comment">// if not full , fetch retry again</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>needRetry <span class="token operator">&amp;&amp;</span> getMessageResult<span class="token punctuation">.</span><span class="token function">getMessageMapedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> requestHeader<span class="token punctuation">.</span><span class="token function">getMaxMsgNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>requestHeader<span class="token punctuation">.</span><span class="token function">isOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TopicConfig</span> retryTopicConfig <span class="token operator">=</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getTopicConfigManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectTopicConfig</span><span class="token punctuation">(</span><span class="token class-name">KeyBuilder</span><span class="token punctuation">.</span><span class="token function">buildPopRetryTopic</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>retryTopicConfig <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> retryTopicConfig<span class="token punctuation">.</span><span class="token function">getReadQueueNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> queueId <span class="token operator">=</span> <span class="token punctuation">(</span>randomQ <span class="token operator">+</span> i<span class="token punctuation">)</span> <span class="token operator">%</span> retryTopicConfig<span class="token punctuation">.</span><span class="token function">getReadQueueNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                restNum <span class="token operator">=</span> <span class="token function">popMsgFromQueue</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> getMessageResult<span class="token punctuation">,</span> requestHeader<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> restNum<span class="token punctuation">,</span> reviveQid<span class="token punctuation">,</span>
                                          channel<span class="token punctuation">,</span> popTime<span class="token punctuation">,</span> messageFilter<span class="token punctuation">,</span>
                                          startOffsetInfo<span class="token punctuation">,</span> msgOffsetInfo<span class="token punctuation">,</span> orderCountInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 拉取消息成功</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>getMessageResult<span class="token punctuation">.</span><span class="token function">getMessageBufferList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        response<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token class-name">ResponseCode</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        getMessageResult<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">GetMessageStatus</span><span class="token punctuation">.</span><span class="token constant">FOUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>restNum <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// all queue pop can not notify specified queue pop, and vice versa</span>
            <span class="token function">notifyMessageArriving</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                  requestHeader<span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 没有拉取到消息，长轮询</span>
        <span class="token keyword">int</span> pollingResult <span class="token operator">=</span> <span class="token function">polling</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> request<span class="token punctuation">,</span> requestHeader<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">POLLING_SUC</span> <span class="token operator">==</span> pollingResult<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">POLLING_FULL</span> <span class="token operator">==</span> pollingResult<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            response<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token class-name">ResponseCode</span><span class="token punctuation">.</span><span class="token constant">POLLING_FULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            response<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token class-name">ResponseCode</span><span class="token punctuation">.</span><span class="token constant">POLLING_TIMEOUT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        getMessageResult<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">GetMessageStatus</span><span class="token punctuation">.</span><span class="token constant">NO_MESSAGE_IN_QUEUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    responseHeader<span class="token punctuation">.</span><span class="token function">setInvisibleTime</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getInvisibleTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    responseHeader<span class="token punctuation">.</span><span class="token function">setPopTime</span><span class="token punctuation">(</span>popTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    responseHeader<span class="token punctuation">.</span><span class="token function">setReviveQid</span><span class="token punctuation">(</span>reviveQid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    responseHeader<span class="token punctuation">.</span><span class="token function">setRestNum</span><span class="token punctuation">(</span>restNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
    responseHeader<span class="token punctuation">.</span><span class="token function">setStartOffsetInfo</span><span class="token punctuation">(</span>startOffsetInfo<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    responseHeader<span class="token punctuation">.</span><span class="token function">setMsgOffsetInfo</span><span class="token punctuation">(</span>msgOffsetInfo<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">isOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> orderCountInfo <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        responseHeader<span class="token punctuation">.</span><span class="token function">setOrderCountInfo</span><span class="token punctuation">(</span>orderCountInfo<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    response<span class="token punctuation">.</span><span class="token function">setRemark</span><span class="token punctuation">(</span>getMessageResult<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 传输消息</span>
    <span class="token keyword">return</span> response<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-2-popmessageprocessor-popmsgfromqueue" tabindex="-1"><a class="header-anchor" href="#_4-2-2-popmessageprocessor-popmsgfromqueue" aria-hidden="true">#</a> 4.2.2 <code>PopMessageProcessor#popMsgFromQueue</code></h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 从消息队列中 POP 消息
 *
 * <span class="token keyword">@param</span> <span class="token parameter">isRetry</span> 是否是重试 Topic
 * <span class="token keyword">@param</span> <span class="token parameter">getMessageResult</span>
 * <span class="token keyword">@param</span> <span class="token parameter">requestHeader</span>
 * <span class="token keyword">@param</span> <span class="token parameter">queueId</span> 消息队列 ID
 * <span class="token keyword">@param</span> <span class="token parameter">restNum</span> 队列剩余消息数量
 * <span class="token keyword">@param</span> <span class="token parameter">reviveQid</span> 唤醒队列 ID
 * <span class="token keyword">@param</span> <span class="token parameter">channel</span> Netty Channel，用于获取客户端 host，来提交消费进度
 * <span class="token keyword">@param</span> <span class="token parameter">popTime</span> Pop 时间
 * <span class="token keyword">@param</span> <span class="token parameter">messageFilter</span>
 * <span class="token keyword">@param</span> <span class="token parameter">startOffsetInfo</span> 获取 Pop 的起始偏移量
 * <span class="token keyword">@param</span> <span class="token parameter">msgOffsetInfo</span> 获取所有 Pop 的消息的逻辑偏移量
 * <span class="token keyword">@param</span> <span class="token parameter">orderCountInfo</span>
 * <span class="token keyword">@return</span> 队列剩余消息
 */</span>
<span class="token keyword">private</span> <span class="token keyword">long</span> <span class="token function">popMsgFromQueue</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> isRetry<span class="token punctuation">,</span> <span class="token class-name">GetMessageResult</span> getMessageResult<span class="token punctuation">,</span>
                             <span class="token class-name">PopMessageRequestHeader</span> requestHeader<span class="token punctuation">,</span> <span class="token keyword">int</span> queueId<span class="token punctuation">,</span> <span class="token keyword">long</span> restNum<span class="token punctuation">,</span> <span class="token keyword">int</span> reviveQid<span class="token punctuation">,</span>
                             <span class="token class-name">Channel</span> channel<span class="token punctuation">,</span> <span class="token keyword">long</span> popTime<span class="token punctuation">,</span>
                             <span class="token class-name">ExpressionMessageFilter</span> messageFilter<span class="token punctuation">,</span> <span class="token class-name">StringBuilder</span> startOffsetInfo<span class="token punctuation">,</span>
                             <span class="token class-name">StringBuilder</span> msgOffsetInfo<span class="token punctuation">,</span> <span class="token class-name">StringBuilder</span> orderCountInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> topic <span class="token operator">=</span> isRetry <span class="token operator">?</span> <span class="token class-name">KeyBuilder</span><span class="token punctuation">.</span><span class="token function">buildPopRetryTopic</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                           requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> requestHeader<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// {TOPIC}@{GROUP}@{QUEUE_ID}</span>
    <span class="token class-name">String</span> lockKey <span class="token operator">=</span>
        topic <span class="token operator">+</span> <span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span><span class="token constant">SPLIT</span> <span class="token operator">+</span> requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span><span class="token constant">SPLIT</span> <span class="token operator">+</span> queueId<span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> isOrder <span class="token operator">=</span> requestHeader<span class="token punctuation">.</span><span class="token function">isOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> offset <span class="token operator">=</span> <span class="token function">getPopOffset</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> requestHeader<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> lockKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Queue 上加锁，保证同一时刻只有一个消费者可以拉取同一个 Queue 的消息</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>queueLockManager<span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span>lockKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 返回该队列中待 Pop 的消息数量</span>
        restNum <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getMessageStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMaxOffsetInQueue</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> queueId<span class="token punctuation">)</span> <span class="token operator">-</span> offset <span class="token operator">+</span> restNum<span class="token punctuation">;</span>
        <span class="token keyword">return</span> restNum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 计算要 POP 的消息偏移量</span>
    offset <span class="token operator">=</span> <span class="token function">getPopOffset</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> requestHeader<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> lockKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">GetMessageResult</span> getMessageTmpResult <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// 顺序消费，阻塞</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isOrder <span class="token operator">&amp;&amp;</span> brokerController<span class="token punctuation">.</span><span class="token function">getConsumerOrderInfoManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">checkBlock</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span>
                                                                                 requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> requestHeader<span class="token punctuation">.</span><span class="token function">getInvisibleTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getMessageStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMaxOffsetInQueue</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> queueId<span class="token punctuation">)</span> <span class="token operator">-</span> offset <span class="token operator">+</span> restNum<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 已经拉取到足够的消息</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>getMessageResult<span class="token punctuation">.</span><span class="token function">getMessageMapedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> requestHeader<span class="token punctuation">.</span><span class="token function">getMaxMsgNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            restNum <span class="token operator">=</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getMessageStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMaxOffsetInQueue</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> queueId<span class="token punctuation">)</span> <span class="token operator">-</span> offset <span class="token operator">+</span> restNum<span class="token punctuation">;</span>
            <span class="token keyword">return</span> restNum<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 从磁盘消息存储中根据逻辑偏移量查询消息</span>
        getMessageTmpResult <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getMessageStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                                                                 <span class="token punctuation">,</span> topic<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> offset<span class="token punctuation">,</span>
                                                                                 requestHeader<span class="token punctuation">.</span><span class="token function">getMaxMsgNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> getMessageResult<span class="token punctuation">.</span><span class="token function">getMessageMapedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> messageFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>getMessageTmpResult <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getMessageStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMaxOffsetInQueue</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> queueId<span class="token punctuation">)</span> <span class="token operator">-</span> offset <span class="token operator">+</span> restNum<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// maybe store offset is not correct.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">GetMessageStatus</span><span class="token punctuation">.</span><span class="token constant">OFFSET_TOO_SMALL</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token operator">||</span> <span class="token class-name">GetMessageStatus</span><span class="token punctuation">.</span><span class="token constant">OFFSET_OVERFLOW_BADLY</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token operator">||</span> <span class="token class-name">GetMessageStatus</span><span class="token punctuation">.</span><span class="token constant">OFFSET_FOUND_NULL</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// commit offset, because the offset is not correct</span>
            <span class="token comment">// If offset in store is greater than cq offset, it will cause duplicate messages,</span>
            <span class="token comment">// because offset in PopBuffer is not committed.</span>
            <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Pop initial offset, because store is no correct, {}, {}-&gt;{}&quot;</span><span class="token punctuation">,</span>
                            lockKey<span class="token punctuation">,</span> offset<span class="token punctuation">,</span> getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getNextBeginOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            offset <span class="token operator">=</span> getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getNextBeginOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getConsumerOffsetManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commitOffset</span><span class="token punctuation">(</span>channel<span class="token punctuation">.</span><span class="token function">remoteAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> topic<span class="token punctuation">,</span>
                                                                          queueId<span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
            getMessageTmpResult <span class="token operator">=</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getMessageStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> topic<span class="token punctuation">,</span>
                                                                   queueId<span class="token punctuation">,</span> offset<span class="token punctuation">,</span>
                                                                   requestHeader<span class="token punctuation">.</span><span class="token function">getMaxMsgNums</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> getMessageResult<span class="token punctuation">.</span><span class="token function">getMessageMapedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> messageFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 计算队列还剩下的消息数量</span>
        restNum <span class="token operator">=</span> getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getMaxOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getNextBeginOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> restNum<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getMessageMapedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 更新统计数据</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerStatsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">incBrokerGetNums</span><span class="token punctuation">(</span>getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getMessageCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerStatsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">incGroupGetNums</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> topic<span class="token punctuation">,</span>
                                                                          getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getMessageCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerStatsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">incGroupGetSize</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> topic<span class="token punctuation">,</span>
                                                                          getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getBufferTotalSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>isOrder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 顺序消费，更新偏移量</span>
                <span class="token keyword">int</span> count <span class="token operator">=</span> brokerController<span class="token punctuation">.</span><span class="token function">getConsumerOrderInfoManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span>
                                                                                  requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                                                  queueId<span class="token punctuation">,</span> getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getMessageQueueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getConsumerOffsetManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commitOffset</span><span class="token punctuation">(</span>channel<span class="token punctuation">.</span><span class="token function">remoteAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                                              requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> topic<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">ExtraInfoUtil</span><span class="token punctuation">.</span><span class="token function">buildOrderCountInfo</span><span class="token punctuation">(</span>orderCountInfo<span class="token punctuation">,</span> isRetry<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 添加 CheckPoint 到内存，用于等待 ACK</span>
                <span class="token function">appendCheckPoint</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">,</span> topic<span class="token punctuation">,</span> reviveQid<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> offset<span class="token punctuation">,</span> getMessageTmpResult<span class="token punctuation">,</span> popTime<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBrokerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">ExtraInfoUtil</span><span class="token punctuation">.</span><span class="token function">buildStartOffsetInfo</span><span class="token punctuation">(</span>startOffsetInfo<span class="token punctuation">,</span> isRetry<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ExtraInfoUtil</span><span class="token punctuation">.</span><span class="token function">buildMsgOffsetInfo</span><span class="token punctuation">(</span>msgOffsetInfo<span class="token punctuation">,</span> isRetry<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span>
                                             getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getMessageQueueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">GetMessageStatus</span><span class="token punctuation">.</span><span class="token constant">NO_MATCHED_MESSAGE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">||</span> <span class="token class-name">GetMessageStatus</span><span class="token punctuation">.</span><span class="token constant">OFFSET_FOUND_NULL</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">||</span> <span class="token class-name">GetMessageStatus</span><span class="token punctuation">.</span><span class="token constant">MESSAGE_WAS_REMOVING</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">||</span> <span class="token class-name">GetMessageStatus</span><span class="token punctuation">.</span><span class="token constant">NO_MATCHED_LOGIC_QUEUE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                   <span class="token operator">&amp;&amp;</span> getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getNextBeginOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 没有拉取到消息，添加假的消息 CheckPoint 到队列</span>
            popBufferMergeService<span class="token punctuation">.</span><span class="token function">addCkMock</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> topic<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> offset<span class="token punctuation">,</span>
                                            requestHeader<span class="token punctuation">.</span><span class="token function">getInvisibleTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> popTime<span class="token punctuation">,</span> reviveQid<span class="token punctuation">,</span> getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getNextBeginOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBrokerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//                this.brokerController.getConsumerOffsetManager().commitOffset(channel.remoteAddress().toString(), requestHeader.getConsumerGroup(), topic,</span>
            <span class="token comment">//                        queueId, getMessageTmpResult.getNextBeginOffset());</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Exception in popMsgFromQueue&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token comment">// Pop 完后解锁</span>
        queueLockManager<span class="token punctuation">.</span><span class="token function">unLock</span><span class="token punctuation">(</span>lockKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 将拉取到的消息放入结果容器中</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>getMessageTmpResult <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SelectMappedBufferResult</span> mapedBuffer <span class="token operator">:</span> getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getMessageMapedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            getMessageResult<span class="token punctuation">.</span><span class="token function">addMessage</span><span class="token punctuation">(</span>mapedBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> restNum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-3-popmessageprocessor-appendcheckpoint" tabindex="-1"><a class="header-anchor" href="#_4-2-3-popmessageprocessor-appendcheckpoint" aria-hidden="true">#</a> 4.2.3 <code>PopMessageProcessor#appendCheckPoint</code></h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 在 POP 拉取消息后调用，添加 CheckPoint，等待 ACK
 *
 * <span class="token keyword">@param</span> <span class="token parameter">requestHeader</span>
 * <span class="token keyword">@param</span> <span class="token parameter">topic</span> POP 的 Topic
 * <span class="token keyword">@param</span> <span class="token parameter">reviveQid</span> Revive 队列 ID
 * <span class="token keyword">@param</span> <span class="token parameter">queueId</span> POP 的队列 ID
 * <span class="token keyword">@param</span> <span class="token parameter">offset</span> POP 消息的起始偏移量
 * <span class="token keyword">@param</span> <span class="token parameter">getMessageTmpResult</span> POP 一批消息的结果
 * <span class="token keyword">@param</span> <span class="token parameter">popTime</span> POP 时间
 * <span class="token keyword">@param</span> <span class="token parameter">brokerName</span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">appendCheckPoint</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">PopMessageRequestHeader</span> requestHeader<span class="token punctuation">,</span>
                              <span class="token keyword">final</span> <span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">int</span> reviveQid<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">int</span> queueId<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">long</span> offset<span class="token punctuation">,</span>
                              <span class="token keyword">final</span> <span class="token class-name">GetMessageResult</span> getMessageTmpResult<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">long</span> popTime<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> brokerName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// add check point msg to revive log</span>
    <span class="token keyword">final</span> <span class="token class-name">PopCheckPoint</span> ck <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PopCheckPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ... 构造 PopCheckPoint，赋值过程省略</span>
    
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Long</span> msgQueueOffset <span class="token operator">:</span> getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getMessageQueueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 添加所有拉取的消息的偏移量与起始偏移量的差值</span>
        ck<span class="token punctuation">.</span><span class="token function">addDiff</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>msgQueueOffset <span class="token operator">-</span> offset<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 将 Offset 放入内存</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> addBufferSuc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>popBufferMergeService<span class="token punctuation">.</span><span class="token function">addCk</span><span class="token punctuation">(</span>
        ck<span class="token punctuation">,</span> reviveQid<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getNextBeginOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>addBufferSuc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 放入内存匹配失败（内存匹配未开启），将 Offset 放入内存和磁盘</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>popBufferMergeService<span class="token punctuation">.</span><span class="token function">addCkJustOffset</span><span class="token punctuation">(</span>
        ck<span class="token punctuation">,</span> reviveQid<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> getMessageTmpResult<span class="token punctuation">.</span><span class="token function">getNextBeginOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-broker-端-ack-消息" tabindex="-1"><a class="header-anchor" href="#_4-3-broker-端-ack-消息" aria-hidden="true">#</a> 4.3 Broker 端 Ack 消息</h3><h4 id="_4-3-1-ackmessageprocessor-processrequest" tabindex="-1"><a class="header-anchor" href="#_4-3-1-ackmessageprocessor-processrequest" aria-hidden="true">#</a> 4.3.1 <code>AckMessageProcessor#processRequest</code></h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 处理 Ack 消息请求，每次 Ack 一条消息
 *
 * <span class="token keyword">@param</span> <span class="token parameter">channel</span>
 * <span class="token keyword">@param</span> <span class="token parameter">request</span>
 * <span class="token keyword">@param</span> <span class="token parameter">brokerAllowSuspend</span>
 * <span class="token keyword">@return</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">RemotingCommandException</span></span>
 */</span>
<span class="token keyword">private</span> <span class="token class-name">RemotingCommand</span> <span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Channel</span> channel<span class="token punctuation">,</span> <span class="token class-name">RemotingCommand</span> request<span class="token punctuation">,</span>
                                       <span class="token keyword">boolean</span> brokerAllowSuspend<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RemotingCommandException</span> <span class="token punctuation">{</span>
    <span class="token comment">// 解析请求头</span>
    <span class="token keyword">final</span> <span class="token class-name">AckMessageRequestHeader</span> requestHeader <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">AckMessageRequestHeader</span><span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">decodeCommandCustomHeader</span><span class="token punctuation">(</span><span class="token class-name">AckMessageRequestHeader</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">MessageExtBrokerInner</span> msgInner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MessageExtBrokerInner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">AckMsg</span> ackMsg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AckMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">RemotingCommand</span> response <span class="token operator">=</span> <span class="token class-name">RemotingCommand</span><span class="token punctuation">.</span><span class="token function">createResponseCommand</span><span class="token punctuation">(</span><span class="token class-name">ResponseCode</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">setOpaque</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getOpaque</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ... 校验</span>
    
    <span class="token comment">// 拆分消息句柄字符串</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> extraInfo <span class="token operator">=</span> <span class="token class-name">ExtraInfoUtil</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getExtraInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 用请求头中的信息构造 AckMsg</span>
    ackMsg<span class="token punctuation">.</span><span class="token function">setAckOffset</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ackMsg<span class="token punctuation">.</span><span class="token function">setStartOffset</span><span class="token punctuation">(</span><span class="token class-name">ExtraInfoUtil</span><span class="token punctuation">.</span><span class="token function">getCkQueueOffset</span><span class="token punctuation">(</span>extraInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ackMsg<span class="token punctuation">.</span><span class="token function">setConsumerGroup</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ackMsg<span class="token punctuation">.</span><span class="token function">setTopic</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ackMsg<span class="token punctuation">.</span><span class="token function">setQueueId</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ackMsg<span class="token punctuation">.</span><span class="token function">setPopTime</span><span class="token punctuation">(</span><span class="token class-name">ExtraInfoUtil</span><span class="token punctuation">.</span><span class="token function">getPopTime</span><span class="token punctuation">(</span>extraInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ackMsg<span class="token punctuation">.</span><span class="token function">setBrokerName</span><span class="token punctuation">(</span><span class="token class-name">ExtraInfoUtil</span><span class="token punctuation">.</span><span class="token function">getBrokerName</span><span class="token punctuation">(</span>extraInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> rqId <span class="token operator">=</span> <span class="token class-name">ExtraInfoUtil</span><span class="token punctuation">.</span><span class="token function">getReviveQid</span><span class="token punctuation">(</span>extraInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerStatsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">incBrokerAckNums</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerStatsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">incGroupAckNums</span><span class="token punctuation">(</span>requestHeader<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestHeader<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>rqId <span class="token operator">==</span> <span class="token class-name">KeyBuilder</span><span class="token punctuation">.</span><span class="token constant">POP_ORDER_REVIVE_QUEUE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ... 顺序消息 ACK</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 普通消息 ACK</span>
    <span class="token comment">// 先尝试放入内存匹配，成功则直接返回。失败可能是内存匹配未开启</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getPopMessageProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPopBufferMergeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAk</span><span class="token punctuation">(</span>rqId<span class="token punctuation">,</span> ackMsg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> response<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 构造 Ack 消息</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setTopic</span><span class="token punctuation">(</span>reviveTopic<span class="token punctuation">)</span><span class="token punctuation">;</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>ackMsg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">DataConverter</span><span class="token punctuation">.</span>charset<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//msgInner.setQueueId(Integer.valueOf(extraInfo[3]));</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setQueueId</span><span class="token punctuation">(</span>rqId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setTags</span><span class="token punctuation">(</span><span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span><span class="token constant">ACK_TAG</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setBornTimestamp</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setBornHost</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getStoreHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setStoreHost</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getStoreHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 定时消息，定时到唤醒重试时间投递</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setDeliverTimeMs</span><span class="token punctuation">(</span><span class="token class-name">ExtraInfoUtil</span><span class="token punctuation">.</span><span class="token function">getPopTime</span><span class="token punctuation">(</span>extraInfo<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">ExtraInfoUtil</span><span class="token punctuation">.</span><span class="token function">getInvisibleTime</span><span class="token punctuation">(</span>extraInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    msgInner<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">MessageConst</span><span class="token punctuation">.</span><span class="token constant">PROPERTY_UNIQ_CLIENT_MESSAGE_ID_KEYIDX</span><span class="token punctuation">,</span> <span class="token class-name">PopMessageProcessor</span><span class="token punctuation">.</span><span class="token function">genAckUniqueId</span><span class="token punctuation">(</span>ackMsg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setPropertiesString</span><span class="token punctuation">(</span><span class="token class-name">MessageDecoder</span><span class="token punctuation">.</span><span class="token function">messageProperties2String</span><span class="token punctuation">(</span>msgInner<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 保存 Ack 消息到磁盘</span>
    <span class="token class-name">PutMessageResult</span> putMessageResult <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getEscapeBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putMessageToSpecificQueue</span><span class="token punctuation">(</span>msgInner<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>putMessageResult<span class="token punctuation">.</span><span class="token function">getPutMessageStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">PutMessageStatus</span><span class="token punctuation">.</span><span class="token constant">PUT_OK</span>
        <span class="token operator">&amp;&amp;</span> putMessageResult<span class="token punctuation">.</span><span class="token function">getPutMessageStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">PutMessageStatus</span><span class="token punctuation">.</span><span class="token constant">FLUSH_DISK_TIMEOUT</span>
        <span class="token operator">&amp;&amp;</span> putMessageResult<span class="token punctuation">.</span><span class="token function">getPutMessageStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">PutMessageStatus</span><span class="token punctuation">.</span><span class="token constant">FLUSH_SLAVE_TIMEOUT</span>
        <span class="token operator">&amp;&amp;</span> putMessageResult<span class="token punctuation">.</span><span class="token function">getPutMessageStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">PutMessageStatus</span><span class="token punctuation">.</span><span class="token constant">SLAVE_NOT_AVAILABLE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;put ack msg error:&quot;</span> <span class="token operator">+</span> putMessageResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> response<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-broker-端-checkpoint-与-ackmsg-匹配" tabindex="-1"><a class="header-anchor" href="#_4-4-broker-端-checkpoint-与-ackmsg-匹配" aria-hidden="true">#</a> 4.4 Broker 端 <code>CheckPoint</code> 与 <code>AckMsg</code> 匹配</h3><h4 id="_4-4-1-popbuffermergeservice-addck" tabindex="-1"><a class="header-anchor" href="#_4-4-1-popbuffermergeservice-addck" aria-hidden="true">#</a> 4.4.1 <code>PopBufferMergeService#addCk</code></h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * POP 消息后，新增 CheckPoint，放入内存 Buffer
 *
 * <span class="token keyword">@param</span> <span class="token parameter">point</span>
 * <span class="token keyword">@param</span> <span class="token parameter">reviveQueueId</span>
 * <span class="token keyword">@param</span> <span class="token parameter">reviveQueueOffset</span>
 * <span class="token keyword">@param</span> <span class="token parameter">nextBeginOffset</span>
 * <span class="token keyword">@return</span> 是否添加成功
 */</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">addCk</span><span class="token punctuation">(</span><span class="token class-name">PopCheckPoint</span> point<span class="token punctuation">,</span> <span class="token keyword">int</span> reviveQueueId<span class="token punctuation">,</span> <span class="token keyword">long</span> reviveQueueOffset<span class="token punctuation">,</span> <span class="token keyword">long</span> nextBeginOffset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// key: point.getT() + point.getC() + point.getQ() + point.getSo() + point.getPt()</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnablePopBufferMerge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 内存匹配服务是否开启</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>serving<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 距离下次可重试 Pop 消费的时刻 &lt; 4.5s</span>
    <span class="token keyword">long</span> now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>point<span class="token punctuation">.</span><span class="token function">getReviveTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> now <span class="token operator">&lt;</span> brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPopCkStayBufferTimeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1500</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnablePopLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;[PopBuffer]add ck, timeout, {}, {}&quot;</span><span class="token punctuation">,</span> point<span class="token punctuation">,</span> now<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPopCkMaxBufferSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;[PopBuffer]add ck, max size, {}, {}&quot;</span><span class="token punctuation">,</span> point<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">PopCheckPointWrapper</span> pointWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PopCheckPointWrapper</span><span class="token punctuation">(</span>reviveQueueId<span class="token punctuation">,</span> reviveQueueOffset<span class="token punctuation">,</span> point<span class="token punctuation">,</span> nextBeginOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">checkQueueOk</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 将 CheckPoint 放入 Offset 队列</span>
    <span class="token function">putOffsetQueue</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 将 CheckPoint 放入内存 Buffer</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>buffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">.</span><span class="token function">getMergeKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pointWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnablePopLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[PopBuffer]add ck, {}&quot;</span><span class="token punctuation">,</span> pointWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-4-2-popbuffermergeservice-addak" tabindex="-1"><a class="header-anchor" href="#_4-4-2-popbuffermergeservice-addak" aria-hidden="true">#</a> 4.4.2 <code>PopBufferMergeService#addAk</code></h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 消息 ACK，与内存中的 CheckPoint 匹配
 *
 * <span class="token keyword">@param</span> <span class="token parameter">reviveQid</span>
 * <span class="token keyword">@param</span> <span class="token parameter">ackMsg</span>
 * <span class="token keyword">@return</span> 是否匹配成功
 */</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">addAk</span><span class="token punctuation">(</span><span class="token keyword">int</span> reviveQid<span class="token punctuation">,</span> <span class="token class-name">AckMsg</span> ackMsg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 如果未开启内存匹配，直接返回</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnablePopBufferMerge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>serving<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// 根据 ACK 的消息找到内存 Buffer 中的 CheckPoint</span>
        <span class="token class-name">PopCheckPointWrapper</span> pointWrapper <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>buffer<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ackMsg<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> ackMsg<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> ackMsg<span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> ackMsg<span class="token punctuation">.</span><span class="token function">getStartOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> ackMsg<span class="token punctuation">.</span><span class="token function">getPopTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> ackMsg<span class="token punctuation">.</span><span class="token function">getBrokerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pointWrapper <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 找不到 CheckPoint</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnablePopLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;[PopBuffer]add ack fail, rqId={}, no ck, {}&quot;</span><span class="token punctuation">,</span> reviveQid<span class="token punctuation">,</span> ackMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 内存中仅保存 Offset，实际已经保存到磁盘，内存中不处理 ACK 消息的匹配，直接返回</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pointWrapper<span class="token punctuation">.</span><span class="token function">isJustOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">PopCheckPoint</span> point <span class="token operator">=</span> pointWrapper<span class="token punctuation">.</span><span class="token function">getCk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>point<span class="token punctuation">.</span><span class="token function">getReviveTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> now <span class="token operator">&lt;</span> brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPopCkStayBufferTimeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1500</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnablePopLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;[PopBuffer]add ack fail, rqId={}, almost timeout for revive, {}, {}, {}&quot;</span><span class="token punctuation">,</span> reviveQid<span class="token punctuation">,</span> pointWrapper<span class="token punctuation">,</span> ackMsg<span class="token punctuation">,</span> now<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> point<span class="token punctuation">.</span><span class="token function">getPopTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPopCkStayBufferTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1500</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnablePopLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;[PopBuffer]add ack fail, rqId={}, stay too long, {}, {}, {}&quot;</span><span class="token punctuation">,</span> reviveQid<span class="token punctuation">,</span> pointWrapper<span class="token punctuation">,</span> ackMsg<span class="token punctuation">,</span> now<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 标记该 CheckPoint 已经被 ACK</span>
        <span class="token keyword">int</span> indexOfAck <span class="token operator">=</span> point<span class="token punctuation">.</span><span class="token function">indexOfAck</span><span class="token punctuation">(</span>ackMsg<span class="token punctuation">.</span><span class="token function">getAckOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>indexOfAck <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 设置 CheckPoint 中被 Ack 消息的 bit 码表为 1</span>
            <span class="token function">markBitCAS</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">.</span><span class="token function">getBits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> indexOfAck<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;[PopBuffer]Invalid index of ack, reviveQid={}, {}, {}&quot;</span><span class="token punctuation">,</span> reviveQid<span class="token punctuation">,</span> ackMsg<span class="token punctuation">,</span> point<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;[PopBuffer]add ack error, rqId=&quot;</span> <span class="token operator">+</span> reviveQid <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">+</span> ackMsg<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-4-3-popbuffermergeservice-scan" tabindex="-1"><a class="header-anchor" href="#_4-4-3-popbuffermergeservice-scan" aria-hidden="true">#</a> 4.4.3 <code>PopBufferMergeService#scan</code></h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 扫描内存中的 CheckPoint
 * 把已经匹配或存盘的 CheckPoint 移出 buffer
 * 把已经全部 Ack 的 CheckPoint 存盘
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> countCk <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">PopCheckPointWrapper</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 遍历所有内存中的 CheckPoint</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">PopCheckPointWrapper</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PopCheckPointWrapper</span> pointWrapper <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 如果 CheckPoint 已经在磁盘中，或者全部消息都匹配成功，从内存中 buffer 中移除</span>
        <span class="token comment">// just process offset(already stored at pull thread), or buffer ck(not stored and ack finish)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pointWrapper<span class="token punctuation">.</span><span class="token function">isJustOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> pointWrapper<span class="token punctuation">.</span><span class="token function">isCkStored</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isCkDone</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">)</span>
            <span class="token operator">||</span> <span class="token function">isCkDoneForFinish</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> pointWrapper<span class="token punctuation">.</span><span class="token function">isCkStored</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            iterator<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            counter<span class="token punctuation">.</span><span class="token function">decrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">PopCheckPoint</span> point <span class="token operator">=</span> pointWrapper<span class="token punctuation">.</span><span class="token function">getCk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 是否要从内存中移除 CheckPoint</span>
        <span class="token keyword">boolean</span> removeCk <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>serving<span class="token punctuation">;</span>
        <span class="token comment">// 距离 ReviveTime 时间小于阈值（默认3s）</span>
        <span class="token comment">// ck will be timeout</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>point<span class="token punctuation">.</span><span class="token function">getReviveTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> now <span class="token operator">&lt;</span> brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPopCkStayBufferTimeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            removeCk <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 在内存中时间大于阈值（默认10s）</span>
        <span class="token comment">// the time stayed is too long</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> point<span class="token punctuation">.</span><span class="token function">getPopTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPopCkStayBufferTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            removeCk <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> point<span class="token punctuation">.</span><span class="token function">getPopTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPopCkStayBufferTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;[PopBuffer]ck finish fail, stay too long, {}&quot;</span><span class="token punctuation">,</span> pointWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// double check</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isCkDone</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>pointWrapper<span class="token punctuation">.</span><span class="token function">isJustOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// just offset should be in store.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>pointWrapper<span class="token punctuation">.</span><span class="token function">getReviveQueueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">putCkToStore</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                countCk<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>removeCk<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 将 CheckPoint 包装成消息放入磁盘，从内存中移除</span>
            <span class="token comment">// put buffer ak to store</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>pointWrapper<span class="token punctuation">.</span><span class="token function">getReviveQueueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">putCkToStore</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                countCk<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pointWrapper<span class="token punctuation">.</span><span class="token function">isCkStored</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// 在内存中移除 CheckPoint 前，把它当中已经 Ack 的消息也作为 Ack 消息存入磁盘</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">byte</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> point<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 遍历 CheckPoint 中消息 bit 码表每一位，检查是否已经 Ack 并且没有存入磁盘</span>
                <span class="token comment">// reput buffer ak to store</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">DataConverter</span><span class="token punctuation">.</span><span class="token function">getBit</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">.</span><span class="token function">getBits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
                    <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">DataConverter</span><span class="token punctuation">.</span><span class="token function">getBit</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">.</span><span class="token function">getToStoreBits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">putAckToStore</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        count<span class="token operator">++</span><span class="token punctuation">;</span>
                        <span class="token function">markBitCAS</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">.</span><span class="token function">getToStoreBits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isCkDoneForFinish</span><span class="token punctuation">(</span>pointWrapper<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> pointWrapper<span class="token punctuation">.</span><span class="token function">isCkStored</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnablePopLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[PopBuffer]ck finish, {}&quot;</span><span class="token punctuation">,</span> pointWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                iterator<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                counter<span class="token punctuation">.</span><span class="token function">decrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 扫描已经完成的 CheckPoint，为它们提交消息消费进度</span>
    <span class="token keyword">int</span> offsetBufferSize <span class="token operator">=</span> <span class="token function">scanCommitOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    scanTimes<span class="token operator">++</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>scanTimes <span class="token operator">&gt;=</span> countOfMinute1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        counter<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>buffer<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        scanTimes <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="_4-4-4-popreviveservice-consumerevivemessage" tabindex="-1"><a class="header-anchor" href="#_4-4-4-popreviveservice-consumerevivemessage" aria-hidden="true">#</a> 4.4.4 <code>PopReviveService#consumeReviveMessage</code></h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 消费 Revive Topic 中的消息，匹配 ACK 消息和 CheckPoint
 * CK 消息放到 Map 中，ACK 消息根据 Map key 匹配 CK 消息，更新 CK 消息的码表以完成 ACK
 * 只对 CK 进行标记
 * 消费时间差 2s 内的 CK、ACK 消息，或 4s 没有消费到新消息
 *
 * <span class="token keyword">@param</span> <span class="token parameter">consumeReviveObj</span> CK 与 ACK 匹配对象，用于 Revive 需要重试 Pop 消费的消息
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">consumeReviveMessage</span><span class="token punctuation">(</span><span class="token class-name">ConsumeReviveObj</span> consumeReviveObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// CheckPoint 匹配 map，key = point.getTopic() + point.getCId() + point.getQueueId() + point.getStartOffset() + point.getPopTime()</span>
    <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">PopCheckPoint</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> consumeReviveObj<span class="token punctuation">.</span>map<span class="token punctuation">;</span>
    <span class="token keyword">long</span> startScanTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> endTime <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// 查询 ReviveTopic queue 之前的消费进度</span>
    <span class="token keyword">long</span> oldOffset <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getConsumerOffsetManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">queryOffset</span><span class="token punctuation">(</span><span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span><span class="token constant">REVIVE_GROUP</span><span class="token punctuation">,</span> reviveTopic<span class="token punctuation">,</span> queueId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    consumeReviveObj<span class="token punctuation">.</span>oldOffset <span class="token operator">=</span> oldOffset<span class="token punctuation">;</span>
    <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;reviveQueueId={}, old offset is {} &quot;</span><span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> oldOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> offset <span class="token operator">=</span> oldOffset <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token comment">// 没有查询到消息的次数</span>
    <span class="token keyword">int</span> noMsgCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> firstRt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// offset self amend</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldRunPopRevive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;slave skip scan , revive topic={}, reviveQueueId={}&quot;</span><span class="token punctuation">,</span> reviveTopic<span class="token punctuation">,</span> queueId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 查询一批 Revive Topic 中的消息（32条）</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> messageExts <span class="token operator">=</span> <span class="token function">getReviveMessage</span><span class="token punctuation">(</span>offset<span class="token punctuation">,</span> queueId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>messageExts <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> messageExts<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">long</span> old <span class="token operator">=</span> endTime<span class="token punctuation">;</span>
            <span class="token keyword">long</span> timerDelay <span class="token operator">=</span> brokerController<span class="token punctuation">.</span><span class="token function">getMessageStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTimerMessageStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getReadBehind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">long</span> commitLogDelay <span class="token operator">=</span> brokerController<span class="token punctuation">.</span><span class="token function">getMessageStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTimerMessageStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnqueueBehind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// move endTime</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>endTime <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> endTime <span class="token operator">&gt;</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span><span class="token constant">SECOND</span> <span class="token operator">&amp;&amp;</span> timerDelay <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> commitLogDelay <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                endTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;reviveQueueId={}, offset is {}, can not get new msg, old endTime {}, new endTime {}&quot;</span><span class="token punctuation">,</span>
                            queueId<span class="token punctuation">,</span> offset<span class="token punctuation">,</span> old<span class="token punctuation">,</span> endTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 最后一个 CK 的唤醒时间与第一个 CK 的唤醒时间差大于 2s，中断消费</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>endTime <span class="token operator">-</span> firstRt <span class="token operator">&gt;</span> <span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span>ackTimeInterval <span class="token operator">+</span> <span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span><span class="token constant">SECOND</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            noMsgCount<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token comment">// Fixme: why sleep is useful here?</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ignore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 连续 4s 没有消费到新的消息，中断消费</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>noMsgCount <span class="token operator">*</span> <span class="token number">100L</span> <span class="token operator">&gt;</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span><span class="token constant">SECOND</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            noMsgCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> startScanTime <span class="token operator">&gt;</span> brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getReviveScanTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;reviveQueueId={}, scan timeout  &quot;</span><span class="token punctuation">,</span> queueId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 遍历查询到的消息</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> messageExt <span class="token operator">:</span> messageExts<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span><span class="token constant">CK_TAG</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 如果是 CheckPoint</span>
                <span class="token class-name">String</span> raw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DataConverter</span><span class="token punctuation">.</span>charset<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnablePopLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;reviveQueueId={},find ck, offset:{}, raw : {}&quot;</span><span class="token punctuation">,</span> messageExt<span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> messageExt<span class="token punctuation">.</span><span class="token function">getQueueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> raw<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">PopCheckPoint</span> point <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>raw<span class="token punctuation">,</span> <span class="token class-name">PopCheckPoint</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>point<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> point<span class="token punctuation">.</span><span class="token function">getCId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// 放入 HashMap，等待 ACK 消息匹配</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> point<span class="token punctuation">.</span><span class="token function">getCId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> point<span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> point<span class="token punctuation">.</span><span class="token function">getStartOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> point<span class="token punctuation">.</span><span class="token function">getPopTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> point<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 设置 reviveOffset 为 revive 队列中消息的逻辑 offset</span>
                point<span class="token punctuation">.</span><span class="token function">setReviveOffset</span><span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getQueueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>firstRt <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    firstRt <span class="token operator">=</span> point<span class="token punctuation">.</span><span class="token function">getReviveTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span><span class="token constant">ACK_TAG</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 如果是 ACK 消息</span>
                <span class="token class-name">String</span> raw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DataConverter</span><span class="token punctuation">.</span>charset<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnablePopLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;reviveQueueId={},find ack, offset:{}, raw : {}&quot;</span><span class="token punctuation">,</span> messageExt<span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> messageExt<span class="token punctuation">.</span><span class="token function">getQueueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> raw<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">AckMsg</span> ackMsg <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>raw<span class="token punctuation">,</span> <span class="token class-name">AckMsg</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">PopCheckPoint</span> point <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ackMsg<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> ackMsg<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> ackMsg<span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> ackMsg<span class="token punctuation">.</span><span class="token function">getStartOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> ackMsg<span class="token punctuation">.</span><span class="token function">getPopTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>point <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// 如果 HashMap 中有 CheckPoint，计算 ACK 的 bit 码表</span>
                <span class="token keyword">int</span> indexOfAck <span class="token operator">=</span> point<span class="token punctuation">.</span><span class="token function">indexOfAck</span><span class="token punctuation">(</span>ackMsg<span class="token punctuation">.</span><span class="token function">getAckOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>indexOfAck <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Ack 消息 bit 码表为 1 的位 Ack 成功</span>
                    point<span class="token punctuation">.</span><span class="token function">setBitMap</span><span class="token punctuation">(</span><span class="token class-name">DataConverter</span><span class="token punctuation">.</span><span class="token function">setBit</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span><span class="token function">getBitMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> indexOfAck<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;invalid ack index, {}, {}&quot;</span><span class="token punctuation">,</span> ackMsg<span class="token punctuation">,</span> point<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">long</span> deliverTime <span class="token operator">=</span> messageExt<span class="token punctuation">.</span><span class="token function">getDeliverTimeMs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>deliverTime <span class="token operator">&gt;</span> endTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                endTime <span class="token operator">=</span> deliverTime<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        offset <span class="token operator">=</span> offset <span class="token operator">+</span> messageExts<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    consumeReviveObj<span class="token punctuation">.</span>endTime <span class="token operator">=</span> endTime<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-4-5-popreviveservice-mergeandrevive" tabindex="-1"><a class="header-anchor" href="#_4-4-5-popreviveservice-mergeandrevive" aria-hidden="true">#</a> 4.4.5 <code>PopReviveService#mergeAndRevive</code></h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 匹配消费到的一批 CK 和 ACK 消息，对于没有成功 ACK 的消息，重发到重试 Topic
 */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">mergeAndRevive</span><span class="token punctuation">(</span><span class="token class-name">ConsumeReviveObj</span> consumeReviveObj<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取排序后的 CheckPoint 列表</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PopCheckPoint</span><span class="token punctuation">&gt;</span></span> sortList <span class="token operator">=</span> consumeReviveObj<span class="token punctuation">.</span><span class="token function">genSortList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// ...</span>
    <span class="token keyword">long</span> newOffset <span class="token operator">=</span> consumeReviveObj<span class="token punctuation">.</span>oldOffset<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">PopCheckPoint</span> popCheckPoint <span class="token operator">:</span> sortList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
        <span class="token comment">// 如果没有到 Revive 时间，跳过</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>consumeReviveObj<span class="token punctuation">.</span>endTime <span class="token operator">-</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getReviveTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token punctuation">(</span><span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span>ackTimeInterval <span class="token operator">+</span> <span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span><span class="token constant">SECOND</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 从 CK 中解析原 Topic 并检查该 Topic 是否存在，如果不存在则跳过</span>
        <span class="token comment">// check normal topic, skip ck , if normal topic is not exist</span>
        <span class="token class-name">String</span> normalTopic <span class="token operator">=</span> <span class="token class-name">KeyBuilder</span><span class="token punctuation">.</span><span class="token function">parseNormalTopic</span><span class="token punctuation">(</span>popCheckPoint<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getCId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>brokerController<span class="token punctuation">.</span><span class="token function">getTopicConfigManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectTopicConfig</span><span class="token punctuation">(</span>normalTopic<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;reviveQueueId={},can not get normal topic {} , then continue &quot;</span><span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            newOffset <span class="token operator">=</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getReviveOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> brokerController<span class="token punctuation">.</span><span class="token function">getSubscriptionGroupManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findSubscriptionGroupConfig</span><span class="token punctuation">(</span>popCheckPoint<span class="token punctuation">.</span><span class="token function">getCId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;reviveQueueId={},can not get cid {} , then continue &quot;</span><span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getCId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            newOffset <span class="token operator">=</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getReviveOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 重发 CK 中没有 Ack 的所有消息</span>
        <span class="token function">reviveMsgFromCk</span><span class="token punctuation">(</span>popCheckPoint<span class="token punctuation">)</span><span class="token punctuation">;</span>

        newOffset <span class="token operator">=</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getReviveOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 匹配和重试完成后，更新 ReviveTopic 消费进度</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newOffset <span class="token operator">&gt;</span> consumeReviveObj<span class="token punctuation">.</span>oldOffset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldRunPopRevive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;slave skip commit, revive topic={}, reviveQueueId={}&quot;</span><span class="token punctuation">,</span> reviveTopic<span class="token punctuation">,</span> queueId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>brokerController<span class="token punctuation">.</span><span class="token function">getConsumerOffsetManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commitOffset</span><span class="token punctuation">(</span><span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span><span class="token constant">LOCAL_HOST</span><span class="token punctuation">,</span> <span class="token class-name">PopAckConstants</span><span class="token punctuation">.</span><span class="token constant">REVIVE_GROUP</span><span class="token punctuation">,</span> reviveTopic<span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> newOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    consumeReviveObj<span class="token punctuation">.</span>newOffset <span class="token operator">=</span> newOffset<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-4-6-popreviveservice-重试消息" tabindex="-1"><a class="header-anchor" href="#_4-4-6-popreviveservice-重试消息" aria-hidden="true">#</a> 4.4.6 <code>PopReviveService</code>: 重试消息</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 重发 CK 中没有 Ack 的所有消息
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">reviveMsgFromCk</span><span class="token punctuation">(</span><span class="token class-name">PopCheckPoint</span> popCheckPoint<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    <span class="token comment">// 遍历 CK 中的所有消息</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">DataConverter</span><span class="token punctuation">.</span><span class="token function">getBit</span><span class="token punctuation">(</span>popCheckPoint<span class="token punctuation">.</span><span class="token function">getBitMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// retry msg</span>
        <span class="token keyword">long</span> msgOffset <span class="token operator">=</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">ackOffsetByIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 查询 CK 消息对应的真正消息</span>
        <span class="token class-name">MessageExt</span> messageExt <span class="token operator">=</span> <span class="token function">getBizMessage</span><span class="token punctuation">(</span>popCheckPoint<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msgOffset<span class="token punctuation">,</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getBrokerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>messageExt <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;reviveQueueId={},can not get biz msg topic is {}, offset is {} , then continue &quot;</span><span class="token punctuation">,</span>
                            queueId<span class="token punctuation">,</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msgOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//skip ck from last epoch</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>popCheckPoint<span class="token punctuation">.</span><span class="token function">getPopTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> messageExt<span class="token punctuation">.</span><span class="token function">getStoreTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;reviveQueueId={},skip ck from last epoch {}&quot;</span><span class="token punctuation">,</span> queueId<span class="token punctuation">,</span> popCheckPoint<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 唤醒没有被 ACK 的消息，发到重试队列</span>
        <span class="token function">reviveRetry</span><span class="token punctuation">(</span>popCheckPoint<span class="token punctuation">,</span> messageExt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 根据 CheckPoint 唤醒没有被 ACK 的消息，发到重试队列
 *
 * <span class="token keyword">@param</span> <span class="token parameter">popCheckPoint</span> CK
 * <span class="token keyword">@param</span> <span class="token parameter">messageExt</span> 要被重试的消息
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">reviveRetry</span><span class="token punctuation">(</span><span class="token class-name">PopCheckPoint</span> popCheckPoint<span class="token punctuation">,</span> <span class="token class-name">MessageExt</span> messageExt<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldRunPopRevive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;slave skip retry , revive topic={}, reviveQueueId={}&quot;</span><span class="token punctuation">,</span> reviveTopic<span class="token punctuation">,</span> queueId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 构造新的消息</span>
    <span class="token class-name">MessageExtBrokerInner</span> msgInner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MessageExtBrokerInner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 唤醒的消息发到重试 Topic</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>popCheckPoint<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token class-name">MixAll</span><span class="token punctuation">.</span><span class="token constant">RETRY_GROUP_TOPIC_PREFIX</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        msgInner<span class="token punctuation">.</span><span class="token function">setTopic</span><span class="token punctuation">(</span><span class="token class-name">KeyBuilder</span><span class="token punctuation">.</span><span class="token function">buildPopRetryTopic</span><span class="token punctuation">(</span>popCheckPoint<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getCId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        msgInner<span class="token punctuation">.</span><span class="token function">setTopic</span><span class="token punctuation">(</span>popCheckPoint<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setQueueId</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        msgInner<span class="token punctuation">.</span><span class="token function">setTags</span><span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getTags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">MessageAccessor</span><span class="token punctuation">.</span><span class="token function">setProperties</span><span class="token punctuation">(</span>msgInner<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setBornTimestamp</span><span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getBornTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setBornHost</span><span class="token punctuation">(</span>brokerController<span class="token punctuation">.</span><span class="token function">getStoreHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setStoreHost</span><span class="token punctuation">(</span>brokerController<span class="token punctuation">.</span><span class="token function">getStoreHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 重试次数 += 1</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setReconsumeTimes</span><span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getReconsumeTimes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    msgInner<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getReconsumeTimes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> msgInner<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">MessageConst</span><span class="token punctuation">.</span><span class="token constant">PROPERTY_FIRST_POP_TIME</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        msgInner<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">MessageConst</span><span class="token punctuation">.</span><span class="token constant">PROPERTY_FIRST_POP_TIME</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>popCheckPoint<span class="token punctuation">.</span><span class="token function">getPopTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    msgInner<span class="token punctuation">.</span><span class="token function">setPropertiesString</span><span class="token punctuation">(</span><span class="token class-name">MessageDecoder</span><span class="token punctuation">.</span><span class="token function">messageProperties2String</span><span class="token punctuation">(</span>msgInner<span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 添加 Pop 重试 Topic</span>
    <span class="token function">addRetryTopicIfNoExit</span><span class="token punctuation">(</span>msgInner<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getCId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 保存重试消息到存储</span>
    <span class="token class-name">PutMessageResult</span> putMessageResult <span class="token operator">=</span> brokerController<span class="token punctuation">.</span><span class="token function">getEscapeBridge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putMessageToSpecificQueue</span><span class="token punctuation">(</span>msgInner<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>brokerController<span class="token punctuation">.</span><span class="token function">getBrokerConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnablePopLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token constant">POP_LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;reviveQueueId={},retry msg , ck={}, msg queueId {}, offset {}, reviveDelay={}, result is {} &quot;</span><span class="token punctuation">,</span>
                        queueId<span class="token punctuation">,</span> popCheckPoint<span class="token punctuation">,</span> messageExt<span class="token punctuation">.</span><span class="token function">getQueueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> messageExt<span class="token punctuation">.</span><span class="token function">getQueueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getReviveTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">,</span> putMessageResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>putMessageResult<span class="token punctuation">.</span><span class="token function">getAppendMessageResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> putMessageResult<span class="token punctuation">.</span><span class="token function">getAppendMessageResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">AppendMessageStatus</span><span class="token punctuation">.</span><span class="token constant">PUT_OK</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;reviveQueueId=&quot;</span> <span class="token operator">+</span> queueId <span class="token operator">+</span> <span class="token string">&quot;,revive error ,msg is :&quot;</span> <span class="token operator">+</span> msgInner<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ... 更新统计数据</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>brokerController<span class="token punctuation">.</span><span class="token function">getPopMessageProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        brokerController<span class="token punctuation">.</span><span class="token function">getPopMessageProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">notifyMessageArriving</span><span class="token punctuation">(</span>
            <span class="token class-name">KeyBuilder</span><span class="token punctuation">.</span><span class="token function">parseNormalTopic</span><span class="token punctuation">(</span>popCheckPoint<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> popCheckPoint<span class="token punctuation">.</span><span class="token function">getCId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            popCheckPoint<span class="token punctuation">.</span><span class="token function">getCId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,104),m={href:"https://github.com/apache/rocketmq/wiki/%5BRIP-19%5D-Server-side-rebalance,--lightweight-consumer-client-support",target:"_blank",rel:"noopener noreferrer"},v={href:"https://developer.aliyun.com/article/801815",target:"_blank",rel:"noopener noreferrer"},f=n("hr",null,null,-1),b=n("p",null,"欢迎关注公众号【消息中间件】（middleware-mq），更新消息中间件的源码解析和最新动态！",-1),g=n("figure",null,[n("img",{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202205170102971.jpg",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1);function y(h,w){const a=o("ExternalLinkIcon");return c(),u("div",null,[n("p",null,[s("原文地址："),n("a",l,[s("http://hscarb.github.io/rocketmq/20221212-rocketmq-consumer-7-pop-consume.html"),t(a)])]),k,n("p",null,[s("引入 Pop 消费模式之后，可以解决 Push 消费导致的可能的消息堆积问题和横向扩展能力问题。此外，RocketMQ 5.0 中引入了的轻量化客户端就用到了 Pop 消费能力，将 Pop 消费接口用 gRPC 封装，实现了多语言轻量化客户端，而不必在客户端实现重平衡逻辑。详见该项目 "),n("a",r,[s("rocketmq-clients"),t(a)]),s("。")]),d,n("ul",null,[n("li",null,[n("a",m,[s("[RIP 19] Server side rebalance, lightweight consumer client support"),t(a)])]),n("li",null,[n("a",v,[s("RocketMQ 5.0 POP 消费模式探秘"),t(a)])])]),f,b,g])}const M=e(i,[["render",y],["__file","20221212-rocketmq-consumer-7-pop-consume.html.vue"]]);export{M as default};
