import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as e,c as o,a as n,b as s,d as c,e as u}from"./app-eaa093f0.js";const l={},i={href:"http://hscarb.github.io/rocketmq/20220929-rocketmq-consumer-6-consume-orderly.html",target:"_blank",rel:"noopener noreferrer"},k=u(`<h1 id="rocketmq-消费者-6-顺序消费-流程详解-源码解析" tabindex="-1"><a class="header-anchor" href="#rocketmq-消费者-6-顺序消费-流程详解-源码解析" aria-hidden="true">#</a> RocketMQ 消费者（6）顺序消费 流程详解 &amp; 源码解析</h1><h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1. 背景</h2><p>本文是 RocketMQ 消费者系列的第六篇，上一篇主要介绍并发消费，而本片主要介绍 RocketMQ 顺序消费的设计和流程。</p><p>我把 RocketMQ 消费分成如下几个步骤</p><ol><li>重平衡</li><li>消费者拉取消息</li><li>Broker 接收拉取请求后从存储中查询消息并返回</li><li>消费者消费消息</li></ol><p>顺序消息逻辑主要在步骤 4 当中承载，然而为了能够实现顺序的消费，在步骤 1 和 2 中就需要有相应的操作以锁定消费队列，确保顺序消费。</p><hr><p>RocketMQ 支持 2 种消费方式，即并发消费和顺序消费。</p><p>并发消费是比较常用的一种消费方式。并发有两层含义：</p><ol><li>队列间并发消费：一个 Topic 可以有 N 个队列，每个队列都可以被一个消费者消费，最多可以有 N 个消费者同时进行消费</li><li>队列中的多个消息并发消费：消费者执行消费逻辑时，使用一个消费线程池进行消费，该线程池默认有 20 个线程同时进行消费，所以也有可能并发消费一个队列中的多个消息</li></ol><p>由于 RocketMQ 的 Topic 和队列的设计，让同一 Topic 下的并发消费无法避免，因为只要有多个队列让多个消费者同时消费，就必定存在并发消费。所以 RocketMQ 仅支持单个队列中的消息的顺序消费。</p><p>如果要做到 Topic 维度严格的顺序，那么需要将 Topic 的队列数设为 1。</p><h2 id="_2-概要设计" tabindex="-1"><a class="header-anchor" href="#_2-概要设计" aria-hidden="true">#</a> 2. 概要设计</h2><p>顺序消费的设计的要点主要有两个：</p><ol><li><p>保证消费速度，即消费线程池同时消费多个队列的消息。</p></li><li><p>保证顺序性，即一个队列同一时间只能被一个消费者的一个线程消费。</p></li></ol><p>第一点可以在并发消费的基础上修改消费线程池的逻辑，第二点需要用到多个锁来保证。</p><h3 id="_2-1-消费线程池逻辑" tabindex="-1"><a class="header-anchor" href="#_2-1-消费线程池逻辑" aria-hidden="true">#</a> 2.1 消费线程池逻辑</h3><h4 id="_2-1-1-消费线程池顺序消费" tabindex="-1"><a class="header-anchor" href="#_2-1-1-消费线程池顺序消费" aria-hidden="true">#</a> 2.1.1 消费线程池顺序消费</h4><p>并发消费的消费线程池，每个线程的消费任务是：消费一批（默认一条）消息。消费任务由拉取任务提交，存在同时运行的多个任务都是消费同一个队列的可能。</p><p>顺序消费的消费任务也由拉取任务提交，逻辑改成了：持续消费一个队列的消息，直到该队列的消息消费完或者超过最大消费时间（1分钟）。这样可以保证每个队列最多被一个消费线程处理，每个消费线程也最大程度上被使用。1 分钟的超时时间是为了防止某个队列消息过多或消费过慢，让其他队列也有被消费到的机会。</p><h4 id="_2-1-2-保证一个队列同时仅被一个消费线程消费" tabindex="-1"><a class="header-anchor" href="#_2-1-2-保证一个队列同时仅被一个消费线程消费" aria-hidden="true">#</a> 2.1.2 保证一个队列同时仅被一个消费线程消费</h4><p>在上述逻辑的基础上，可能存在同时有多个同一队列的消费任务被提交到消费线程池的情况，需要保证一个队列最多仅被一个线程消费。</p><p>RocketMQ 为每个消息队列都初始化一把锁（<strong>消息队列锁</strong>），消费任务开始时获取锁，消费任务结束时释放锁，保证就算有多个线程同时消费一个队列，但同时最多只有一个线程真正在执行消费（其他线程都在等待锁释放）。</p><blockquote><p>这个实现可能导致消费线程池中多个线程同时等待一把锁，似乎是一个可以优化的点。比如通过修改消息拉取线程， 保证该队列消费完之前不拉取新的消息（拉取消息前判断该队列的消息是否被消费完，如果未被消费完则跳过拉取操作，将该拉取请求放入拉取队列末尾）</p></blockquote><h3 id="_2-2-重平衡时顺序消费" tabindex="-1"><a class="header-anchor" href="#_2-2-重平衡时顺序消费" aria-hidden="true">#</a> 2.2 重平衡时顺序消费</h3><p>消费任务中添加的消息队列锁保证了同一消费者中的顺序消费，但保证消费线程池顺序消费就可以实现顺序消费了吗？NO。顺序消费还有一个敌人——重平衡。</p><p>重平衡可能会将一个队列的消费负载从一个消费者切换到另一个消费者。老消费者的消费任务可能还没有结束，新消费者开始消费，这样也存在两个消费者同时消费一个队列的情况。</p><hr><h4 id="_2-2-1-broker-管理的分布式锁" tabindex="-1"><a class="header-anchor" href="#_2-2-1-broker-管理的分布式锁" aria-hidden="true">#</a> 2.2.1 Broker 管理的分布式锁</h4><p>为了跨消费者进行消费队列负载的协调，引入分布式锁是最好的选择，RocketMQ 让 Broker 来管理和保存该锁，我们姑且把这个锁叫做 <strong>Broker锁</strong>。</p><p>消费者在重平衡后，对于新分配到的队列，会尝试向 Broker 请求 <strong>Broker锁</strong> ；丢弃的队列则向 Broker 释放锁。如果请求到锁才开始拉取，请求不到则等到下次重平衡再次请求。</p><p><strong>Broker锁</strong> 在 Broker 端被设了过期时间，1 分钟不更新则过期。顺序消费服务的定时任务会每 20s 向 Broker 发送请求，请求和更新自己负载的消费队列的 <strong>Broker锁</strong>。</p><p>在消息拉取和顺序消费服务每消费一批消息前，都会判断是否持有 <strong>Broker锁</strong>，来保证没有多个消费者在重平衡后同时消费一个队列。</p><p>还有一个<strong>消费锁</strong>，用来保证在有消息正在被顺序消费时，不能释放 <strong>Broker锁</strong>。</p><h2 id="_3-详细设计" tabindex="-1"><a class="header-anchor" href="#_3-详细设计" aria-hidden="true">#</a> 3. 详细设计</h2><h3 id="_3-1-broker锁" tabindex="-1"><a class="header-anchor" href="#_3-1-broker锁" aria-hidden="true">#</a> 3.1 Broker锁</h3><h4 id="_3-1-1-设计" tabindex="-1"><a class="header-anchor" href="#_3-1-1-设计" aria-hidden="true">#</a> 3.1.1 设计</h4><p><strong>Broker锁</strong> 是在 Broker 上保存和管理的分布式锁，它的存在是为了解决重平衡后可能的不同消费者并行消费问题。由 Broker 端的 <code>RebalanceLockManager</code> 管理。</p><p>每个消息队列都可能会有一个锁，每个消费组的消费应该隔离，所以每个消费组都有一组锁。锁的容器是两层 Map：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ConcurrentMap</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token comment">/* group */</span><span class="token punctuation">,</span> <span class="token class-name">ConcurrentHashMap</span><span class="token operator">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">,</span> <span class="token class-name">LockEntry</span><span class="token comment">/* client ID &amp; update timestamp */</span><span class="token operator">&gt;&gt;</span> mqLockTable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>为了避免一些异常情况，如消费者异常退出，没有主动解锁，导致队列一直上锁，这里为 <strong>Broker锁</strong> 设置了超时时间（默认 1 分钟）。</p><p>由消费者向 Broker 发请求进行加解锁、查询是否加锁等操作。</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/09/1664384440558.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-1-2-加解锁时机" tabindex="-1"><a class="header-anchor" href="#_3-1-2-加解锁时机" aria-hidden="true">#</a> 3.1.2 加解锁时机</h4><p>消费者重平衡后，调用 <code>updateProcessQueueTableInRebalance</code>，如上图粉色部分所示。</p><p>对于要丢弃的队列，尝试释放 <strong>Broker锁</strong>；对于对分配到的队列尝试请求 <strong>Broker锁</strong>。</p><h4 id="_3-1-3-加解锁流程" tabindex="-1"><a class="header-anchor" href="#_3-1-3-加解锁流程" aria-hidden="true">#</a> 3.1.3 加解锁流程</h4><p>加锁的过程是向 Broker 发请求，锁管理器将锁创建后放入锁容器 <code>mqLockTable</code> 并更新加锁时间；解锁则是将 <code>LockEntry</code> 从锁容器中移除。</p><p>上图展示了加锁流程：</p><ol><li>重平衡后更新处理队列，尝试加锁（或者更新现有锁），向 Broker 发请求</li><li><code>MQClientAPIImpl</code> 中准备锁定请求，调用 <code>NettyRemotingClient</code> 向 Broker 发送请求</li><li>Broker 端 <code>AdminBrokerProcessor</code> 处理加锁请求</li><li><code>RebalanceLockManager</code> 最终处理加锁逻辑，先获取锁容器的改动锁。然后为没有加锁的队列新建 <code>LockEntry</code>，为已有的 <code>LockEntry</code> 更新加锁时间和客户端 ID。最后释放锁容器的锁。</li></ol><h4 id="_3-1-4-边界条件-消费消息时重平衡" tabindex="-1"><a class="header-anchor" href="#_3-1-4-边界条件-消费消息时重平衡" aria-hidden="true">#</a> 3.1.4 边界条件：消费消息时重平衡</h4><p>存在一种边界条件，消费消息耗时较长的情况下，可能存在重平衡后要释放某个队列的 <strong>Broker锁</strong>，但是这个队列仍有消息正在被消费。</p><p>这种情况下不能贸然释放 <strong>Broker锁</strong>，因为如果释放，其他消费者会获取 Broker锁并开始消费，可能会重复且并发地消费那批没有消费完的消息，这里就存在并发问题。</p><p>RocketMQ 的做法是如果队列有消息正被消费，则不会释放它的 <strong>Broker锁</strong>，等到下一次重平衡（默认 20s 周期）再判断是否可以释放。</p><p>具体的做法是引入一个新的锁 <strong>消费锁</strong>，一批消息消费时加锁，消费完后解锁。</p><p>重平衡后尝试释放 <strong>Broker锁</strong> 前，先试着获取 <strong>消费锁</strong>，如果 1s 内获取不到，则跳过。</p><h3 id="_3-2-消费线程池顺序消费逻辑" tabindex="-1"><a class="header-anchor" href="#_3-2-消费线程池顺序消费逻辑" aria-hidden="true">#</a> 3.2 消费线程池顺序消费逻辑</h3><h4 id="_3-2-1-消费线程池顺序消费设计" tabindex="-1"><a class="header-anchor" href="#_3-2-1-消费线程池顺序消费设计" aria-hidden="true">#</a> 3.2.1 消费线程池顺序消费设计</h4><p>每个消费者都有一个消费线程池（默认 20 个线程）来处理消息拉取任务拉取成功后提交的消费任务。</p><p>消息拉取任务将拉取到的消息都放到消息队列对应的处理队列中，然后将处理队列整个放入消费任务，提交给消费线程池。</p><p>每个消费任务都持续消费一个队列，直到消费时间到期（1 分钟）或者处理队列中消息消费完。</p><p>为了保证消费线程池中没有多个线程消费同一个队列，为每个消费队列初始化<strong>消费队列锁（MQ Lock）</strong>，并在消费任务执行时加锁</p><h4 id="_3-2-2-消费线程池顺序消费任务流程" tabindex="-1"><a class="header-anchor" href="#_3-2-2-消费线程池顺序消费任务流程" aria-hidden="true">#</a> 3.2.2 消费线程池顺序消费任务流程</h4><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/09/1664384440756.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol><li>检查处理队列是否丢弃（是否仍由该消费者负载该队列）</li><li>获取消费队列锁（保证消费线程池中消费这个队列的最多只有一个线程）</li><li>保证处理队列的 Broker锁 已经获取且未过期</li><li>从处理队列中取一批消息（默认 1 条）</li><li>对于重试消息，从消息属性中获取它真正的 Topic 并恢复</li><li>执行消费前钩子函数</li><li>加 <strong>消费锁</strong>，执行消费逻辑，释放 <strong>消费锁</strong></li><li>根据消费结果设置返回状态</li><li>执行消费后钩子函数</li><li>处理这批消息的消费结果 <ol><li>检查消费结果</li><li>如果消费失败，广播模式：打印错误日志；集群模式：将消息发回 Broker，等待重新消费</li><li>将消息从处理队列移除</li><li>提交消费进度</li></ol></li></ol><h3 id="_3-3-顺序消费流程" tabindex="-1"><a class="header-anchor" href="#_3-3-顺序消费流程" aria-hidden="true">#</a> 3.3 顺序消费流程</h3><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/09/1664384440779.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol><li>消费流程以重平衡为起点。重平衡后向 Broker 发送请求，释放和申请 <strong>Broker锁</strong></li><li>为该消费者负载的队列新建消息拉取请求，进行消息拉取</li><li><code>pullMessage</code>：拉取前再次判断队列 Broker锁 的状态。消息拉取线程从拉取任务队列中获取任务并执行拉取</li><li>拉取成功后的 <code>PullCallback</code> 将拉取到的消息放入处理队列，然后给顺序消费服务提交顺序消费任务</li><li>顺序消费服务的消费线程池执行消费任务，执行逻辑上面讲过</li></ol><h2 id="_4-源码解析" tabindex="-1"><a class="header-anchor" href="#_4-源码解析" aria-hidden="true">#</a> 4. 源码解析</h2><h3 id="_4-1-broker锁" tabindex="-1"><a class="header-anchor" href="#_4-1-broker锁" aria-hidden="true">#</a> 4.1 Broker锁</h3><h4 id="_4-1-1-broker锁-管理器" tabindex="-1"><a class="header-anchor" href="#_4-1-1-broker锁-管理器" aria-hidden="true">#</a> 4.1.1 Broker锁 管理器</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RebalanceLockManager</span> <span class="token punctuation">{</span>
    <span class="token comment">// 锁容器读写锁</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 消息队列锁定状态表</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token comment">/* group */</span><span class="token punctuation">,</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">,</span> <span class="token class-name">LockEntry</span><span class="token punctuation">&gt;</span></span><span class="token operator">&gt;</span> mqLockTable <span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ConcurrentHashMap</span><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">,</span> <span class="token class-name">LockEntry</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 批量锁定消息队列
     *
     * <span class="token keyword">@param</span> <span class="token parameter">group</span> 消费组
     * <span class="token keyword">@param</span> <span class="token parameter">mqs</span> 要锁定的消息队列
     * <span class="token keyword">@param</span> <span class="token parameter">clientId</span> 客户端 ID
     * <span class="token keyword">@return</span> 锁定成功的消息队列
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> <span class="token function">tryLockBatch</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> group<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> mqs<span class="token punctuation">,</span>
        <span class="token keyword">final</span> <span class="token class-name">String</span> clientId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 要锁定的队列中已经锁定的队列</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> lockedMqs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>mqs<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 之前没有锁定，需要锁定的队列</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> notLockedMqs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>mqs<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageQueue</span> mq <span class="token operator">:</span> mqs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isLocked</span><span class="token punctuation">(</span>group<span class="token punctuation">,</span> mq<span class="token punctuation">,</span> clientId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                lockedMqs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                notLockedMqs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 锁定需要锁定的队列</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>notLockedMqs<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">,</span> <span class="token class-name">LockEntry</span><span class="token punctuation">&gt;</span></span> groupValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mqLockTable<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> groupValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        groupValue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>mqLockTable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>group<span class="token punctuation">,</span> groupValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageQueue</span> mq <span class="token operator">:</span> notLockedMqs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// 为队列新建锁定标识，加入锁定状态表</span>
                        <span class="token class-name">LockEntry</span> lockEntry <span class="token operator">=</span> groupValue<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> lockEntry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            lockEntry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LockEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            lockEntry<span class="token punctuation">.</span><span class="token function">setClientId</span><span class="token punctuation">(</span>clientId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            groupValue<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>mq<span class="token punctuation">,</span> lockEntry<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>

                        <span class="token keyword">if</span> <span class="token punctuation">(</span>lockEntry<span class="token punctuation">.</span><span class="token function">isLocked</span><span class="token punctuation">(</span>clientId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            lockEntry<span class="token punctuation">.</span><span class="token function">setLastUpdateTimestamp</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            lockedMqs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">continue</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>

                        <span class="token class-name">String</span> oldClientId <span class="token operator">=</span> lockEntry<span class="token punctuation">.</span><span class="token function">getClientId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                        <span class="token keyword">if</span> <span class="token punctuation">(</span>lockEntry<span class="token punctuation">.</span><span class="token function">isExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            lockEntry<span class="token punctuation">.</span><span class="token function">setClientId</span><span class="token punctuation">(</span>clientId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            lockEntry<span class="token punctuation">.</span><span class="token function">setLastUpdateTimestamp</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            lockedMqs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">continue</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;putMessage exception&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> lockedMqs<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-2-消费者解锁-加锁" tabindex="-1"><a class="header-anchor" href="#_4-1-2-消费者解锁-加锁" aria-hidden="true">#</a> 4.1.2 消费者解锁/加锁</h4><h5 id="_4-1-2-1-重平衡后更新处理队列" tabindex="-1"><a class="header-anchor" href="#_4-1-2-1-重平衡后更新处理队列" aria-hidden="true">#</a> 4.1.2.1 重平衡后更新处理队列</h5><p>重平衡时，队列分配完成后对队列进行解锁和加锁</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// RebalanceImpl.java</span>
<span class="token doc-comment comment">/**
 * 重平衡后更新 ProcessQueue 表
 * 丢弃不再消费的队列，为新增的队列新建 ProcessQueue 和 PullRequest
 *
 * <span class="token keyword">@param</span> <span class="token parameter">topic</span> 主题
 * <span class="token keyword">@param</span> <span class="token parameter">mqSet</span> 重平衡后该消费者新分配到的的消息队列
 * <span class="token keyword">@param</span> <span class="token parameter">isOrder</span> 是否顺序消费
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">updateProcessQueueTableInRebalance</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> mqSet<span class="token punctuation">,</span>
                                                   <span class="token keyword">final</span> <span class="token keyword">boolean</span> isOrder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> changed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token comment">// 遍历本地缓存的消费者分到的消息队列，判断要丢弃的队列并丢弃</span>
    <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">,</span> <span class="token class-name">ProcessQueue</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> it <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processQueueTable<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">,</span> <span class="token class-name">ProcessQueue</span><span class="token punctuation">&gt;</span></span> next <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MessageQueue</span> mq <span class="token operator">=</span> next<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ProcessQueue</span> pq <span class="token operator">=</span> next<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mq<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>topic<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果新分配到的消息队列集合中不含有老的消息队列，丢弃老的处理队列</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mqSet<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 该 ProcessQueue 中不会有消息被消费</span>
                pq<span class="token punctuation">.</span><span class="token function">setDropped</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 移除消费队列，并释放 Broker锁，移除前持久化。</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeUnnecessaryMessageQueue</span><span class="token punctuation">(</span>mq<span class="token punctuation">,</span> pq<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    it<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    changed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>pq<span class="token punctuation">.</span><span class="token function">isPullExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token doc-comment comment">/**
                 * 如果Reblance之后的mq集合包含该MessageQueue,但是ProcessQueue已经太久没有拉取数据（上次拉取消息的时间距离现在超过设置时间）
                */</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">consumeType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token constant">CONSUME_ACTIVELY</span><span class="token operator">:</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token constant">CONSUME_PASSIVELY</span><span class="token operator">:</span>
                        <span class="token doc-comment comment">/**
                         * PushConsumer为被动消费
                         * 如果是PUSH，则丢弃ProcessQueue
                         * 同时删除MessageQueue
                         */</span>
                        pq<span class="token punctuation">.</span><span class="token function">setDropped</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeUnnecessaryMessageQueue</span><span class="token punctuation">(</span>mq<span class="token punctuation">,</span> pq<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            it<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            changed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">default</span><span class="token operator">:</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 遍历新分配的 MessageQueue，对于新分配的，创建 PullRequest 启动拉取</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PullRequest</span><span class="token punctuation">&gt;</span></span> pullRequestList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PullRequest</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 为每个 MessageQueue 新建一个 PullRequest</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageQueue</span> mq <span class="token operator">:</span> mqSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 本地缓存的 ProcessQueue 中不包含，表示新增队列</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>processQueueTable<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果是顺序消费，尝试给处理队列加锁：尝试向 Broker 发送锁定队列请求。如果加锁失败则跳过，在下一次重平衡时尝试加锁</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isOrder <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;doRebalance, {}, add a new mq failed, {}, because lock failed&quot;</span><span class="token punctuation">,</span> consumerGroup<span class="token punctuation">,</span> mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 顺序消费，锁定处理队列失败，跳过拉取</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// 从内存中移除该 MessageQueue 的消费进度（老的进度不需要）</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeDirtyOffset</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ProcessQueue</span> pq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProcessQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 计算当前 MessageQueue 应该从哪里开始拉取消息</span>
            <span class="token keyword">long</span> nextOffset <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1L</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// 计算并从偏移量存储中读取下次拉取的偏移量</span>
                nextOffset <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">computePullFromWhereWithException</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;doRebalance, {}, compute offset failed, {}&quot;</span><span class="token punctuation">,</span> consumerGroup<span class="token punctuation">,</span> mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>nextOffset <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 添加 MessageQueue 和 ProcessQueue 的映射关系</span>
                <span class="token class-name">ProcessQueue</span> pre <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processQueueTable<span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span>mq<span class="token punctuation">,</span> pq<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>pre <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;doRebalance, {}, mq already exists, {}&quot;</span><span class="token punctuation">,</span> consumerGroup<span class="token punctuation">,</span> mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 添加成功，创建新的 PullRequest</span>
                    <span class="token comment">// 唯一的创建 PullRequest 的地方</span>
                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;doRebalance, {}, add a new mq, {}&quot;</span><span class="token punctuation">,</span> consumerGroup<span class="token punctuation">,</span> mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">PullRequest</span> pullRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PullRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    pullRequest<span class="token punctuation">.</span><span class="token function">setConsumerGroup</span><span class="token punctuation">(</span>consumerGroup<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    pullRequest<span class="token punctuation">.</span><span class="token function">setNextOffset</span><span class="token punctuation">(</span>nextOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    pullRequest<span class="token punctuation">.</span><span class="token function">setMessageQueue</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    pullRequest<span class="token punctuation">.</span><span class="token function">setProcessQueue</span><span class="token punctuation">(</span>pq<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    pullRequestList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    changed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;doRebalance, {}, add new mq failed, {}&quot;</span><span class="token punctuation">,</span> consumerGroup<span class="token punctuation">,</span> mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 将新建的 PullRequest 加入消息拉取线程 PullMessageService，开始拉取</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispatchPullRequest</span><span class="token punctuation">(</span>pullRequestList<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> changed<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-1-2-2-消息队列解锁" tabindex="-1"><a class="header-anchor" href="#_4-1-2-2-消息队列解锁" aria-hidden="true">#</a> 4.1.2.2 消息队列解锁</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// RebalancePushImpl.java</span>
<span class="token doc-comment comment">/**
 * 将重平衡后丢弃的消费队列移除
 * 移除前持久化消费的消费进度
 *
 * <span class="token keyword">@param</span> <span class="token parameter">mq</span> 消息队列
 * <span class="token keyword">@param</span> <span class="token parameter">pq</span> 处理队列
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">removeUnnecessaryMessageQueue</span><span class="token punctuation">(</span><span class="token class-name">MessageQueue</span> mq<span class="token punctuation">,</span> <span class="token class-name">ProcessQueue</span> pq<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 持久化消费进度，然后移除</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumerImpl<span class="token punctuation">.</span><span class="token function">getOffsetStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">persist</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumerImpl<span class="token punctuation">.</span><span class="token function">getOffsetStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeOffset</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumerImpl<span class="token punctuation">.</span><span class="token function">isConsumeOrderly</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">&amp;&amp;</span> <span class="token class-name">MessageModel</span><span class="token punctuation">.</span><span class="token constant">CLUSTERING</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumerImpl<span class="token punctuation">.</span><span class="token function">messageModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果是顺序消费，尝试获取队列的消费锁，最多等待 1s</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>pq<span class="token punctuation">.</span><span class="token function">getConsumeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 获取成功，表示该队列没有消息正被消费，可以向 Broker 发请求解锁该队列</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unlockDelay</span><span class="token punctuation">(</span>mq<span class="token punctuation">,</span> pq<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    pq<span class="token punctuation">.</span><span class="token function">getConsumeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 获取消费锁失败，表示该队列有消息正被消费，且消费时长大于 1s，那么本次无法将该队列解锁</span>
                <span class="token comment">// 该队列新分配到负载的 Broker 由于拿不到该队列的锁，也无法开始消费，需要等待下一次重平衡时再尝试解锁</span>
                log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;[WRONG]mq is consuming, so can not unlock it, {}. maybe hanged for a while, {}&quot;</span><span class="token punctuation">,</span>
                         mq<span class="token punctuation">,</span>
                         pq<span class="token punctuation">.</span><span class="token function">getTryUnlockTimes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 增加解锁尝试次数</span>
                pq<span class="token punctuation">.</span><span class="token function">incTryUnlockTimes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;removeUnnecessaryMessageQueue Exception&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-1-2-3-消息队列加锁" tabindex="-1"><a class="header-anchor" href="#_4-1-2-3-消息队列加锁" aria-hidden="true">#</a> 4.1.2.3 消息队列加锁</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// RebalanceImpl.java</span>
<span class="token doc-comment comment">/**
 * 锁定消息队列，向 Broker 发请求
 * 顺序消费时使用
 *
 * <span class="token keyword">@param</span> <span class="token parameter">mq</span> 要锁定的消息队列
 * <span class="token keyword">@return</span> 是否锁定成功
 */</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">MessageQueue</span> mq<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 查询 Broker 地址</span>
    <span class="token class-name">FindBrokerResult</span> findBrokerResult <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mQClientFactory<span class="token punctuation">.</span><span class="token function">findBrokerAddressInSubscribe</span><span class="token punctuation">(</span>mq<span class="token punctuation">.</span><span class="token function">getBrokerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MixAll</span><span class="token punctuation">.</span><span class="token constant">MASTER_ID</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>findBrokerResult <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 构造锁定消息队列请求</span>
        <span class="token class-name">LockBatchRequestBody</span> requestBody <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LockBatchRequestBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        requestBody<span class="token punctuation">.</span><span class="token function">setConsumerGroup</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>consumerGroup<span class="token punctuation">)</span><span class="token punctuation">;</span>
        requestBody<span class="token punctuation">.</span><span class="token function">setClientId</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mQClientFactory<span class="token punctuation">.</span><span class="token function">getClientId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        requestBody<span class="token punctuation">.</span><span class="token function">getMqSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 调用 API 向 Broker 发送锁定队列请求，返回锁定成功的队列集合</span>
            <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">&gt;</span></span> lockedMq <span class="token operator">=</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>mQClientFactory<span class="token punctuation">.</span><span class="token function">getMQClientAPIImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lockBatchMQ</span><span class="token punctuation">(</span>findBrokerResult<span class="token punctuation">.</span><span class="token function">getBrokerAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestBody<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageQueue</span> mmqq <span class="token operator">:</span> lockedMq<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 将锁定成功队列的处理队列加锁</span>
                <span class="token class-name">ProcessQueue</span> processQueue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processQueueTable<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mmqq<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>processQueue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    processQueue<span class="token punctuation">.</span><span class="token function">setLocked</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    processQueue<span class="token punctuation">.</span><span class="token function">setLastLockTimestamp</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">boolean</span> lockOK <span class="token operator">=</span> lockedMq<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;the message queue lock {}, {} {}&quot;</span><span class="token punctuation">,</span>
                     lockOK <span class="token operator">?</span> <span class="token string">&quot;OK&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;Failed&quot;</span><span class="token punctuation">,</span>
                     <span class="token keyword">this</span><span class="token punctuation">.</span>consumerGroup<span class="token punctuation">,</span>
                     mq<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> lockOK<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;lockBatchMQ exception, &quot;</span> <span class="token operator">+</span> mq<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-消息拉取" tabindex="-1"><a class="header-anchor" href="#_4-2-消息拉取" aria-hidden="true">#</a> 4.2 消息拉取</h3><h4 id="_4-2-1-消息拉取" tabindex="-1"><a class="header-anchor" href="#_4-2-1-消息拉取" aria-hidden="true">#</a> 4.2.1 消息拉取</h4><p>消息拉取操作，对于顺序消费情况，提交拉取请求前会先判断处理队列的锁定状态。</p><ul><li>锁定：如果是第一次锁定（第一次拉取），计算并设置本次拉取任务消息队列的拉取偏移量</li><li>未锁定：等待 3s 后再次执行拉取请求</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 拉取消息入口
 * 
 * <span class="token keyword">@param</span> <span class="token parameter">pullRequest</span> 拉取请求，包含需要拉取的消费队列信息
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">pullMessage</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">PullRequest</span> pullRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取待拉取的消费队列</span>
    <span class="token keyword">final</span> <span class="token class-name">ProcessQueue</span> processQueue <span class="token operator">=</span> pullRequest<span class="token punctuation">.</span><span class="token function">getProcessQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// ...</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>consumeOrderly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// ...</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 处理顺序消费，如果处理队列已经被锁定</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>processQueue<span class="token punctuation">.</span><span class="token function">isLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果之前没有被锁定过（是第一次拉取）</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pullRequest<span class="token punctuation">.</span><span class="token function">isPreviouslyLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">long</span> offset <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1L</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 计算拉取偏移量</span>
                    offset <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rebalanceImpl<span class="token punctuation">.</span><span class="token function">computePullFromWhereWithException</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">.</span><span class="token function">getMessageQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 计算异常，等待 3s 后再次判断</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executePullRequestLater</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">,</span> pullTimeDelayMillsWhenException<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to compute pull offset, pullResult: {}&quot;</span><span class="token punctuation">,</span> pullRequest<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">boolean</span> brokerBusy <span class="token operator">=</span> offset <span class="token operator">&lt;</span> pullRequest<span class="token punctuation">.</span><span class="token function">getNextOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;the first time to pull message, so fix offset from broker. pullRequest: {} NewOffset: {} brokerBusy: {}&quot;</span><span class="token punctuation">,</span>
                         pullRequest<span class="token punctuation">,</span> offset<span class="token punctuation">,</span> brokerBusy<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>brokerBusy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[NOTIFYME]the first time to pull message, but pull request offset larger than broker consume offset. pullRequest: {} NewOffset: {}&quot;</span><span class="token punctuation">,</span>
                             pullRequest<span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// 设置之前已经锁定过</span>
                pullRequest<span class="token punctuation">.</span><span class="token function">setPreviouslyLocked</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 设置要拉取的偏移量，在方法后面的逻辑中立即执行拉取</span>
                pullRequest<span class="token punctuation">.</span><span class="token function">setNextOffset</span><span class="token punctuation">(</span>offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果处理队列没有被锁定，等待 3s 后将 PullRequest 放入拉取请求队列，再次判断锁定情况尝试拉取</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executePullRequestLater</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">,</span> pullTimeDelayMillsWhenException<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;pull message later because not locked in broker, {}&quot;</span><span class="token punctuation">,</span> pullRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-2-消息拉取成功" tabindex="-1"><a class="header-anchor" href="#_4-2-2-消息拉取成功" aria-hidden="true">#</a> 4.2.2 消息拉取成功</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span><span class="token class-name">PullResult</span> pullResult<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pullResult <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 将消息字节数组解码成消息列表并填充msgFoundList；对消息进行TAG模式过滤</span>
        pullResult <span class="token operator">=</span> <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>pullAPIWrapper<span class="token punctuation">.</span><span class="token function">processPullResult</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">.</span><span class="token function">getMessageQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pullResult<span class="token punctuation">,</span>
                                                                                     subscriptionData<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">switch</span> <span class="token punctuation">(</span>pullResult<span class="token punctuation">.</span><span class="token function">getPullStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 找到对应消息</span>
            <span class="token keyword">case</span> <span class="token constant">FOUND</span><span class="token operator">:</span>
                <span class="token comment">// 上次请求偏移量</span>
                <span class="token keyword">long</span> prevRequestOffset <span class="token operator">=</span> pullRequest<span class="token punctuation">.</span><span class="token function">getNextOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 更新下一次拉取的偏移量</span>
                pullRequest<span class="token punctuation">.</span><span class="token function">setNextOffset</span><span class="token punctuation">(</span>pullResult<span class="token punctuation">.</span><span class="token function">getNextBeginOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 计算和记录拉取用时</span>
                <span class="token keyword">long</span> pullRT <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> beginTimestamp<span class="token punctuation">;</span>
                <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getConsumerStatsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">incPullRT</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                                                   pullRequest<span class="token punctuation">.</span><span class="token function">getMessageQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pullRT<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 如果msgFoundList为空，马上进行下次拉取</span>
                <span class="token comment">// msgFoundList为空的情况：因为根据TAG过滤时在服务端只验证了TAG的哈希码，客户端要再次对消息进行了过滤（见上），可能会出现为空的情况</span>
                <span class="token keyword">long</span> firstMsgOffset <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>pullResult<span class="token punctuation">.</span><span class="token function">getMsgFoundList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> pullResult<span class="token punctuation">.</span><span class="token function">getMsgFoundList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executePullRequestImmediately</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 获取返回结果中第一条消息的消费队列offset</span>
                    firstMsgOffset <span class="token operator">=</span> pullResult<span class="token punctuation">.</span><span class="token function">getMsgFoundList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getQueueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getConsumerStatsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">incPullTPS</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                                                        pullRequest<span class="token punctuation">.</span><span class="token function">getMessageQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pullResult<span class="token punctuation">.</span><span class="token function">getMsgFoundList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">// 将拉取到的消息存入ProcessQueue</span>
                    <span class="token keyword">boolean</span> dispatchToConsume <span class="token operator">=</span> processQueue<span class="token punctuation">.</span><span class="token function">putMessage</span><span class="token punctuation">(</span>pullResult<span class="token punctuation">.</span><span class="token function">getMsgFoundList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 将拉取到的消息提交到ConsumeMessageService中供消费者消费（异步）</span>
                    <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>consumeMessageService<span class="token punctuation">.</span><span class="token function">submitConsumeRequest</span><span class="token punctuation">(</span>
                        pullResult<span class="token punctuation">.</span><span class="token function">getMsgFoundList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        processQueue<span class="token punctuation">,</span>
                        pullRequest<span class="token punctuation">.</span><span class="token function">getMessageQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        dispatchToConsume<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">// 等待pullInterval毫秒后重新拉取，或立即重新拉取</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getPullInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executePullRequestLater</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">,</span>
                                                                               <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getPullInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token class-name">DefaultMQPushConsumerImpl</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executePullRequestImmediately</span><span class="token punctuation">(</span>pullRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// ...</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-顺序消费任务" tabindex="-1"><a class="header-anchor" href="#_4-3-顺序消费任务" aria-hidden="true">#</a> 4.3 顺序消费任务</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// ConsumeMessageOrderlyService.java</span>
<span class="token comment">// class ConsumeRequest</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">.</span><span class="token function">isDropped</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;run, the message queue not be able to consume, because it&#39;s dropped. {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>messageQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 从锁容器中获取消息队列消费锁</span>
    <span class="token keyword">final</span> <span class="token class-name">Object</span> objLock <span class="token operator">=</span> messageQueueLock<span class="token punctuation">.</span><span class="token function">fetchLockObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>messageQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 消费时申请独占消息队列消费锁对象</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>objLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 如果是广播模式；或者集群模式下处理队列被锁定且锁未超时，直接消费</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">MessageModel</span><span class="token punctuation">.</span><span class="token constant">BROADCASTING</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumerImpl<span class="token punctuation">.</span><span class="token function">messageModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">.</span><span class="token function">isLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">.</span><span class="token function">isLockExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">long</span> beginTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 是否继续本次消费请求的消费任务</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">boolean</span> continueConsume <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> continueConsume<span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">.</span><span class="token function">isDropped</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;the message queue not be able to consume, because it&#39;s dropped. {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>messageQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">MessageModel</span><span class="token punctuation">.</span><span class="token constant">CLUSTERING</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumerImpl<span class="token punctuation">.</span><span class="token function">messageModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">.</span><span class="token function">isLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;the message queue not locked, so consume later, {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>messageQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">tryLockLaterAndReconsume</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>messageQueue<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">MessageModel</span><span class="token punctuation">.</span><span class="token constant">CLUSTERING</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumerImpl<span class="token punctuation">.</span><span class="token function">messageModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">.</span><span class="token function">isLockExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;the message queue lock expired, so consume later, {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>messageQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">tryLockLaterAndReconsume</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>messageQueue<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// 计算本次消费请求任务执行时长，如果超过 60s，结束本次消费任务，（顺序消费任务以时长计算）</span>
                <span class="token keyword">long</span> interval <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> beginTime<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>interval <span class="token operator">&gt;</span> <span class="token constant">MAX_TIME_CONSUME_CONTINUOUSLY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 如果本次消费任务执行时长超过 60s，等到 10ms 后继续执行，以便让其他队列有机会消费</span>
                    <span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">submitConsumeRequestLater</span><span class="token punctuation">(</span>processQueue<span class="token punctuation">,</span> messageQueue<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// 每次从处理队列获取的一批消息数量，默认为 1</span>
                <span class="token keyword">final</span> <span class="token keyword">int</span> consumeBatchSize <span class="token operator">=</span>
                    <span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getConsumeMessageBatchMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// 从处理队列中取一批（默认 1 条）消息</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">&gt;</span></span> msgs <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">.</span><span class="token function">takeMessages</span><span class="token punctuation">(</span>consumeBatchSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 为重试消息恢复真正的 Topic</span>
                defaultMQPushConsumerImpl<span class="token punctuation">.</span><span class="token function">resetRetryAndNamespace</span><span class="token punctuation">(</span>msgs<span class="token punctuation">,</span> defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>msgs<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 如果获取的这批消息不为空</span>
                    <span class="token keyword">final</span> <span class="token class-name">ConsumeOrderlyContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConsumeOrderlyContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>messageQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token class-name">ConsumeOrderlyStatus</span> status <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

                    <span class="token comment">// 消费前钩子函数</span>
                    <span class="token class-name">ConsumeMessageContext</span> consumeMessageContext <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumerImpl<span class="token punctuation">.</span><span class="token function">hasHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        consumeMessageContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConsumeMessageContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        consumeMessageContext
                            <span class="token punctuation">.</span><span class="token function">setConsumerGroup</span><span class="token punctuation">(</span><span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        consumeMessageContext<span class="token punctuation">.</span><span class="token function">setNamespace</span><span class="token punctuation">(</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getNamespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        consumeMessageContext<span class="token punctuation">.</span><span class="token function">setMq</span><span class="token punctuation">(</span>messageQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        consumeMessageContext<span class="token punctuation">.</span><span class="token function">setMsgList</span><span class="token punctuation">(</span>msgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        consumeMessageContext<span class="token punctuation">.</span><span class="token function">setSuccess</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">// init the consume context type</span>
                        consumeMessageContext<span class="token punctuation">.</span><span class="token function">setProps</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumerImpl<span class="token punctuation">.</span><span class="token function">executeHookBefore</span><span class="token punctuation">(</span>consumeMessageContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">long</span> beginTimestamp <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">ConsumeReturnType</span> returnType <span class="token operator">=</span> <span class="token class-name">ConsumeReturnType</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
                    <span class="token keyword">boolean</span> hasException <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token comment">// 消费消息锁</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">.</span><span class="token function">getConsumeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">.</span><span class="token function">isDropped</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;consumeMessage, the message queue not be able to consume, because it&#39;s dropped. {}&quot;</span><span class="token punctuation">,</span>
                                     <span class="token keyword">this</span><span class="token punctuation">.</span>messageQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>

                        <span class="token comment">// 消息消费监听器执行真正的消费业务逻辑</span>
                        status <span class="token operator">=</span> messageListener<span class="token punctuation">.</span><span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableList</span><span class="token punctuation">(</span>msgs<span class="token punctuation">)</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;consumeMessage exception: %s Group: %s Msgs: %s MQ: %s&quot;</span><span class="token punctuation">,</span>
                                               <span class="token class-name">RemotingHelper</span><span class="token punctuation">.</span><span class="token function">exceptionSimpleDesc</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                               <span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>consumerGroup<span class="token punctuation">,</span>
                                               msgs<span class="token punctuation">,</span>
                                               messageQueue<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        hasException <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                        <span class="token comment">// 消费消息锁解锁</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">.</span><span class="token function">getConsumeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> status
                        <span class="token operator">||</span> <span class="token class-name">ConsumeOrderlyStatus</span><span class="token punctuation">.</span><span class="token constant">ROLLBACK</span> <span class="token operator">==</span> status
                        <span class="token operator">||</span> <span class="token class-name">ConsumeOrderlyStatus</span><span class="token punctuation">.</span><span class="token constant">SUSPEND_CURRENT_QUEUE_A_MOMENT</span> <span class="token operator">==</span> status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;consumeMessage Orderly return not OK, Group: {} Msgs: {} MQ: {}&quot;</span><span class="token punctuation">,</span>
                                 <span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>consumerGroup<span class="token punctuation">,</span>
                                 msgs<span class="token punctuation">,</span>
                                 messageQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">// 判断消费状态</span>
                    <span class="token keyword">long</span> consumeRT <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> beginTimestamp<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>hasException<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            returnType <span class="token operator">=</span> <span class="token class-name">ConsumeReturnType</span><span class="token punctuation">.</span><span class="token constant">EXCEPTION</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            returnType <span class="token operator">=</span> <span class="token class-name">ConsumeReturnType</span><span class="token punctuation">.</span><span class="token constant">RETURNNULL</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>consumeRT <span class="token operator">&gt;=</span> defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getConsumeTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        returnType <span class="token operator">=</span> <span class="token class-name">ConsumeReturnType</span><span class="token punctuation">.</span><span class="token constant">TIME_OUT</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ConsumeOrderlyStatus</span><span class="token punctuation">.</span><span class="token constant">SUSPEND_CURRENT_QUEUE_A_MOMENT</span> <span class="token operator">==</span> status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        returnType <span class="token operator">=</span> <span class="token class-name">ConsumeReturnType</span><span class="token punctuation">.</span><span class="token constant">FAILED</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ConsumeOrderlyStatus</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span> <span class="token operator">==</span> status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        returnType <span class="token operator">=</span> <span class="token class-name">ConsumeReturnType</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumerImpl<span class="token punctuation">.</span><span class="token function">hasHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        consumeMessageContext<span class="token punctuation">.</span><span class="token function">getProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">MixAll</span><span class="token punctuation">.</span><span class="token constant">CONSUME_CONTEXT_TYPE</span><span class="token punctuation">,</span> returnType<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        status <span class="token operator">=</span> <span class="token class-name">ConsumeOrderlyStatus</span><span class="token punctuation">.</span><span class="token constant">SUSPEND_CURRENT_QUEUE_A_MOMENT</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">// 消息消费后钩子函数</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumerImpl<span class="token punctuation">.</span><span class="token function">hasHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        consumeMessageContext<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        consumeMessageContext
                            <span class="token punctuation">.</span><span class="token function">setSuccess</span><span class="token punctuation">(</span><span class="token class-name">ConsumeOrderlyStatus</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span> <span class="token operator">==</span> status <span class="token operator">||</span> <span class="token class-name">ConsumeOrderlyStatus</span><span class="token punctuation">.</span><span class="token constant">COMMIT</span> <span class="token operator">==</span> status<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumerImpl<span class="token punctuation">.</span><span class="token function">executeHookAfter</span><span class="token punctuation">(</span>consumeMessageContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">// 更新统计数据（消息消费时间）</span>
                    <span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getConsumerStatsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">incConsumeRT</span><span class="token punctuation">(</span><span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>consumerGroup<span class="token punctuation">,</span> messageQueue<span class="token punctuation">.</span><span class="token function">getTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> consumeRT<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">// 消费结果处理</span>
                    continueConsume <span class="token operator">=</span> <span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">processConsumeResult</span><span class="token punctuation">(</span>msgs<span class="token punctuation">,</span> status<span class="token punctuation">,</span> context<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 获取的这批消息为空，说明处理队列为空，结束本次消费请求的消费</span>
                    continueConsume <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">.</span><span class="token function">isDropped</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;the message queue not be able to consume, because it&#39;s dropped. {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>messageQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">tryLockLaterAndReconsume</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>messageQueue<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processQueue<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>欢迎关注公众号【消息中间件】（middleware-mq），更新消息中间件的源码解析和最新动态！</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202205170102971.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,92);function r(d,m){const a=p("ExternalLinkIcon");return e(),o("div",null,[n("p",null,[s("原文地址："),n("a",i,[s("http://hscarb.github.io/rocketmq/20220929-rocketmq-consumer-6-consume-orderly.html"),c(a)])]),k])}const f=t(l,[["render",r],["__file","20220929-rocketmq-consumer-6-consume-orderly.html.vue"]]);export{f as default};
