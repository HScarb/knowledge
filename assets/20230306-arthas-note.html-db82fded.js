import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,a as e,b as a,d as s,e as t}from"./app-eaa093f0.js";const c={},d={href:"http://hscarb.github.io/other/20230306-arthas-note.html",target:"_blank",rel:"noopener noreferrer"},h=e("h1",{id:"arthas-笔记",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#arthas-笔记","aria-hidden":"true"},"#"),a(" Arthas 笔记")],-1),p=e("h2",{id:"arthas-idea-plugin-文档",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#arthas-idea-plugin-文档","aria-hidden":"true"},"#"),a(" Arthas idea plugin 文档")],-1),u={href:"https://www.yuque.com/wangji-yunque/rk4eks/ruradh",target:"_blank",rel:"noopener noreferrer"},b=e("h2",{id:"执行静态方法和-spring-对象方法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#执行静态方法和-spring-对象方法","aria-hidden":"true"},"#"),a(" 执行静态方法和 Spring 对象方法")],-1),m={href:"https://hicode.club/articles/2022/03/30/1648606091635.html",target:"_blank",rel:"noopener noreferrer"},g=t(`<h3 id="spring" tabindex="-1"><a class="header-anchor" href="#spring" aria-hidden="true">#</a> Spring</h3><p>设置输出内容为json</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>options json-format <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>找到 <code>org.springframework.boot.loader.LaunchedURLClassLoader</code> 的 hash</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>classloader <span class="token parameter variable">-l</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>找到 spring 对象并执行方法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 执行无参数</span>
vmtool <span class="token parameter variable">-c</span> f2c488 <span class="token parameter variable">--action</span> getInstances <span class="token punctuation">\\</span>
<span class="token parameter variable">--className</span> org.springframework.context.ApplicationContext <span class="token punctuation">\\</span>
<span class="token parameter variable">--express</span> <span class="token string">&#39;instances[0].getBean(&quot;globalCtxManager&quot;).obtGlobalStatistics()&#39;</span>

<span class="token comment"># 执行带参数的方法，其中参数是普通变量</span>
vmtool <span class="token parameter variable">-c</span> f2c488 <span class="token parameter variable">--action</span> getInstances <span class="token punctuation">\\</span>
<span class="token parameter variable">--className</span> org.springframework.context.ApplicationContext <span class="token punctuation">\\</span>
<span class="token parameter variable">--express</span> <span class="token string">&#39;instances[0].getBean(&quot;globalCtxManager&quot;).obtUserAliveStatus(1156083311884992513L)&#39;</span>

<span class="token comment"># 执行带参数的方法，其中参数是对象。如果需要构建对象，可以参考：</span>
<span class="token comment"># https://juejin.cn/post/6844904013859651597#heading-16</span>
vmtool <span class="token parameter variable">-c</span> f2c488 <span class="token parameter variable">--action</span> getInstances <span class="token punctuation">\\</span>
<span class="token parameter variable">--className</span> org.springframework.context.ApplicationContext <span class="token punctuation">\\</span>
<span class="token parameter variable">--express</span> <span class="token string">&#39;instances[0].getBean(&quot;liveCoreService&quot;).searchLiveInfo((#demo=new com.uewell.ubirth.bus.live.bo.live.LiveInfoParam(), #demo.setId(&#39;</span>12345L<span class="token string">&#39;),#demo))&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="直接执行静态方法" tabindex="-1"><a class="header-anchor" href="#直接执行静态方法" aria-hidden="true">#</a> 直接执行静态方法</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ognl  <span class="token parameter variable">-c</span> 54acff7d <span class="token string">&#39;@io.netty.buffer.PooledByteBufAllocator@DEFAULT&#39;</span>
ognl  <span class="token parameter variable">-c</span> f2c488 <span class="token string">&#39;@io.netty.util.internal.PlatformDependent@DIRECT_BUFFER_PREFERRED&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用arthas显式执行代码-避免重启应用-10倍提升本地研发效率" tabindex="-1"><a class="header-anchor" href="#使用arthas显式执行代码-避免重启应用-10倍提升本地研发效率" aria-hidden="true">#</a> 使用Arthas显式执行代码，避免重启应用，10倍提升本地研发效率</h2>`,10),_={href:"https://github.com/alibaba/arthas/issues/1823",target:"_blank",rel:"noopener noreferrer"},v=t('<h3 id="前提" tabindex="-1"><a class="header-anchor" href="#前提" aria-hidden="true">#</a> 前提</h3><p>本方法最适用于 Spring Boot 项目。</p><h3 id="谁拖垮了效率" tabindex="-1"><a class="header-anchor" href="#谁拖垮了效率" aria-hidden="true">#</a> 谁拖垮了效率？</h3><p>本地开发时有两个操作最耗时：</p><ol><li>每次代码变更都要重启一次项目，重启的时间相对较长。</li><li>代码深层次的一个方法，也需要有类似 HTTP 的触发入口一层一层调用过来，这是非常麻烦的事。</li></ol><p>所以我在寻找一种可以不停机的开发方法，所有变更都能随时生效，代码随写随测。</p><h3 id="探索" tabindex="-1"><a class="header-anchor" href="#探索" aria-hidden="true">#</a> 探索</h3><p>代码热变更方面，我使用了久负盛名的 IDEA 插件 JRebel。该插件可以做到绝大部分的新增/修改代码，安装使用方式可以在网上搜索。</p><p>但有了 JRebel 之后，我发现仍然很难调用看到的方法，如果通过 HTTP 接口调用过来很麻烦，过程很长，并且前后的一些操作的结果也是我不想要的。再比如写着写着突然对某个资源的响应内容不确定。<br> 我希望能随时调用看到的每一个方法。后来看了一些 arthas 的 user case 和文档，大脑中最后几块拼图也终于拼上了。</p><h3 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作" aria-hidden="true">#</a> 准备工作</h3><p>随意调用方法，其实是指 Spring 上下文中的方法。否则直接写 main 方法或 Tester 代码就可以随写随测。以 Spring 的上下文进行调用才是我们想要的。以下是准备工作：</p>',11),f=e("code",null,"IDEA Arthas",-1),k={href:"https://arthas.aliyun.com/doc/idea-plugin.html",target:"_blank",rel:"noopener noreferrer"},x=e("code",null,"Arthas Spring Boot Starter",-1),A={href:"https://arthas.aliyun.com/doc/spring-boot-starter.html",target:"_blank",rel:"noopener noreferrer"},E=e("code",null,"spring.arthas.enabled = false",-1),B={href:"https://github.com/WangJi92/arthas-plugin-demo/blob/master/src/main/java/com/wangji92/arthas/plugin/demo/common/ApplicationContextProvider.java%EF%BC%8C%E5%B9%B6%E9%85%8D%E7%BD%AE%E5%A5%BD%E6%8F%92%E4%BB%B6%E8%8E%B7%E5%8F%96",target:"_blank",rel:"noopener noreferrer"},j={href:"https://user-images.githubusercontent.com/9815635/121844093-01e9b480-cd16-11eb-91b7-bb9dee318d8c.png",target:"_blank",rel:"noopener noreferrer"},w=e("img",{src:"https://user-images.githubusercontent.com/9815635/121844093-01e9b480-cd16-11eb-91b7-bb9dee318d8c.png",alt:"截屏2021-06-14 下午1 39 34",tabindex:"0",loading:"lazy"},null,-1),y=e("figcaption",null,"截屏2021-06-14 下午1 39 34",-1),C=e("h3",{id:"开始起飞",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#开始起飞","aria-hidden":"true"},"#"),a(" 开始起飞")],-1),S={href:"http://localhost:8563/",target:"_blank",rel:"noopener noreferrer"},I=e("code",null,"Static Spring Context Invoke Method Field",-1),q=e("br",null,null,-1),L={href:"https://user-images.githubusercontent.com/9815635/121844447-981dda80-cd16-11eb-8974-4a6af9f11af4.png",target:"_blank",rel:"noopener noreferrer"},D=e("img",{src:"https://user-images.githubusercontent.com/9815635/121844447-981dda80-cd16-11eb-8974-4a6af9f11af4.png",alt:"截屏2021-06-14 下午1 44 03",loading:"lazy"},null,-1),R=e("br",null,null,-1),F={href:"https://user-images.githubusercontent.com/9815635/121844719-f5b22700-cd16-11eb-8aac-bcb342c22f27.png",target:"_blank",rel:"noopener noreferrer"},N=e("img",{src:"https://user-images.githubusercontent.com/9815635/121844719-f5b22700-cd16-11eb-8aac-bcb342c22f27.png",alt:"截屏2021-06-14 下午1 46 21",loading:"lazy"},null,-1),P=e("br",null,null,-1),T={href:"https://user-images.githubusercontent.com/9815635/121844723-f77bea80-cd16-11eb-80f0-0c8539a95f23.png",target:"_blank",rel:"noopener noreferrer"},J=e("img",{src:"https://user-images.githubusercontent.com/9815635/121844723-f77bea80-cd16-11eb-80f0-0c8539a95f23.png",alt:"截屏2021-06-14 下午1 46 30",loading:"lazy"},null,-1),z=e("p",null,"整个开发过程中 Arthas 控制台不用关，随时想测某个方法时，复制命令 -> 控制台执行 -> 观察 即可。",-1),U=e("p",null,"此方法对以下一些场景有奇效：",-1),V=e("ol",null,[e("li",null,"XXL-Job 任务执行。本地不希望任务在跑，就可以在启动时关闭任务注册功能。测试时也可以不依赖 xxl-job admin 随时调试任务。"),e("li",null,"Dubbo 服务。不用模拟客户端或者泛化调用之类的，直接用 arthas 整。Arthas 命令不方便设置复杂的入参，这种情况可以在方法中自行覆盖参数，用 JRebel 热更新一下就行。")],-1),M=e("h2",{id:"ognl-使用姿势",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ognl-使用姿势","aria-hidden":"true"},"#"),a(" ognl 使用姿势")],-1),H={href:"https://cloud.tencent.com/developer/article/1846725",target:"_blank",rel:"noopener noreferrer"},W={href:"https://juejin.cn/post/6844904013859651597",target:"_blank",rel:"noopener noreferrer"},X=e("hr",null,null,-1),G=e("p",null,"欢迎关注公众号【消息中间件】（middleware-mq），更新消息中间件的源码解析和最新动态！",-1),K=e("figure",null,[e("img",{src:"https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202205170102971.jpg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1);function O(Q,Y){const n=o("ExternalLinkIcon");return i(),l("div",null,[e("p",null,[a("原文地址："),e("a",d,[a("http://hscarb.github.io/other/20230306-arthas-note.html"),s(n)])]),h,p,e("p",null,[e("a",u,[a("https://www.yuque.com/wangji-yunque/rk4eks/ruradh"),s(n)])]),b,e("p",null,[e("a",m,[a("https://hicode.club/articles/2022/03/30/1648606091635.html"),s(n)])]),g,e("p",null,[e("a",_,[a("https://github.com/alibaba/arthas/issues/1823"),s(n)])]),v,e("ol",null,[e("li",null,[a("安装 "),f,a(" 插件："),e("a",k,[a("https://arthas.aliyun.com/doc/idea-plugin.html"),s(n)])]),e("li",null,[a("项目中增加依赖 "),x,a("："),e("a",A,[a("https://arthas.aliyun.com/doc/spring-boot-starter.html"),s(n)]),a(" ，担心安全问题的话可以只在本地开启，其他环境配置 "),E]),e("li",null,[a("代码中提供获取 Spring ApplicationContext 的变量的方法，参考 "),e("a",B,[a("https://github.com/WangJi92/arthas-plugin-demo/blob/master/src/main/java/com/wangji92/arthas/plugin/demo/common/ApplicationContextProvider.java，并配置好插件获取"),s(n)]),a(" Spring Context 的路径:")])]),e("figure",null,[e("a",j,[w,s(n)]),y]),C,e("p",null,[a("使用 JRebel 的方式启动项目，启动后浏览器打开 Arthas 控制台 "),e("a",S,[a("http://localhost:8563"),s(n)]),a(" ，在要调用的方法上选择复制"),I,q,e("a",L,[D,s(n)])]),e("p",null,[a("随后到 Arthas 控制台粘贴即可："),R,e("a",F,[N,s(n)]),P,e("a",T,[J,s(n)])]),z,U,V,M,e("p",null,[e("a",H,[a("https://cloud.tencent.com/developer/article/1846725"),s(n)])]),e("p",null,[e("a",W,[a("https://juejin.cn/post/6844904013859651597"),s(n)])]),X,G,K])}const ee=r(c,[["render",O],["__file","20230306-arthas-note.html.vue"]]);export{ee as default};
