import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as c,c as p,a as s,b as a,d as e,e as r}from"./app-eaa093f0.js";const l={},i={href:"http://hscarb.github.io/rocketmq/20220724-rocketmq-docker-compose.html",target:"_blank",rel:"noopener noreferrer"},d=s("h1",{id:"使用-docker-和-docker-compose-快速部署-rocketmq-集群-双主-dledger",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#使用-docker-和-docker-compose-快速部署-rocketmq-集群-双主-dledger","aria-hidden":"true"},"#"),a(" 使用 Docker 和 docker-compose 快速部署 RocketMQ 集群 双主 / DLedger")],-1),u=s("h2",{id:"背景",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#背景","aria-hidden":"true"},"#"),a(" 背景")],-1),m=s("p",null,"RocketMQ 的部署和配置较为复杂，有众多配置项和部署方式可以选择。用户往往难以快速部署 RocketMQ，进行开发和验证。",-1),k={href:"https://github.com/apache/rocketmq-docker",target:"_blank",rel:"noopener noreferrer"},b=r(`<h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备" aria-hidden="true">#</a> 环境准备</h2><p>需要安装完成 Docker，并且可以连接 Docker Hub。然后用 git 拉取 rocketmq-docker 仓库，并进入该仓库。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/apache/rocketmq-docker.git
<span class="token builtin class-name">cd</span> rocketmq-docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="镜像准备" tabindex="-1"><a class="header-anchor" href="#镜像准备" aria-hidden="true">#</a> 镜像准备</h2><p>可以预先准备好 RocketMQ 的镜像。本地构建或者从 Docker Hub 拉取官方打包的镜像都可以</p><h3 id="本地构建-rocketmq-docker-镜像" tabindex="-1"><a class="header-anchor" href="#本地构建-rocketmq-docker-镜像" aria-hidden="true">#</a> 本地构建 RocketMQ docker 镜像</h3><p>这一步不是必须要的，也可以从 Docker Hub 中拉取官方镜像。</p><p>本地构建的最大意义在于，如果自己修改了 RocketMQ 的源码，则可以用这种方式构建自己的镜像。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> image-build
<span class="token function">sh</span> build-image.sh RMQ-VERSION BASE-IMAGE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行脚本之后，会拉取相应版本的 RocketMQ 安装包到本地，然后构建镜像包。</p>`,10),v=s("code",null,"RMQ-VERSION",-1),h={href:"https://archive.apache.org/dist/rocketmq/",target:"_blank",rel:"noopener noreferrer"},g=r(`<p><code>BASE-IMAGE</code> 可以在 <code>centos</code> 和 <code>alpine</code> 中选择。比如当前最新版本为 4.9.4，那么可以用如下命令打镜像</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> build-image.sh <span class="token number">4.9</span>.4 alpine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>打包完成后可以用如下命令查看</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> images
REPOSITORY                          TAG            IMAGE ID       CREATED         SIZE
apacherocketmq/rocketmq             <span class="token number">4.9</span>.4-alpine   58e1e7a5e556   <span class="token number">16</span> hours ago    188MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="拉取远程" tabindex="-1"><a class="header-anchor" href="#拉取远程" aria-hidden="true">#</a> 拉取远程</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> search rocketmq
NAME                                 DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
foxiswho/rocketmq                    rocketmq                                        <span class="token number">77</span>                   
rocketmqinc/rocketmq                 Image repository <span class="token keyword">for</span> Apache RocketMQ            <span class="token number">54</span>                   
styletang/rocketmq-console-ng        rocketmq-console-ng                             <span class="token number">38</span>                   
apache/rocketmq                                                                      <span class="token number">25</span>                   
apacherocketmq/rocketmq              Docker Image <span class="token keyword">for</span> Apache RocketMQ                <span class="token number">22</span>                   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们选择 <code>apache/rocketmq</code>，其他的版本已经跟不上时代了，年久失修。</p><p>看一下它支持的版本号列表：</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202207241613503.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>选择最新的 4.9.4 版本拉取</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> pull apache/rocketmq:4.9.4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="docker-启动-rocketmq" tabindex="-1"><a class="header-anchor" href="#docker-启动-rocketmq" aria-hidden="true">#</a> Docker 启动 RocketMQ</h2><p>首先需要用版本号来创建一个 stage 文件夹，运行如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sh</span> stage.sh <span class="token number">4.9</span>.4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>会在根目录下创建一个 <code>stage</code> 文件夹，进入到 <code>stage/4.9.4/templates</code> 目录下（有的 Linux 系统生成的路径是 <code>stage/4.9.4/</code>）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> stages/4.9.4/templates/
$ <span class="token function">ls</span> <span class="token parameter variable">-l</span>
drwxrwxr-x <span class="token number">6</span> ubuntu ubuntu <span class="token number">4096</span> Jul <span class="token number">24</span> <span class="token number">15</span>:25 ./
drwxrwxr-x <span class="token number">3</span> ubuntu ubuntu <span class="token number">4096</span> Jul <span class="token number">24</span> <span class="token number">15</span>:23 <span class="token punctuation">..</span>/
drwxrwxr-x <span class="token number">6</span> ubuntu ubuntu <span class="token number">4096</span> Jul <span class="token number">24</span> <span class="token number">15</span>:23 data/
drwxrwxr-x <span class="token number">4</span> ubuntu ubuntu <span class="token number">4096</span> Jul <span class="token number">24</span> <span class="token number">15</span>:26 docker-compose/
drwxrwxr-x <span class="token number">2</span> ubuntu ubuntu <span class="token number">4096</span> Jul <span class="token number">24</span> <span class="token number">15</span>:23 kubernetes/
-rwxrwxr-x <span class="token number">1</span> ubuntu ubuntu  <span class="token number">902</span> Jul <span class="token number">24</span> <span class="token number">15</span>:23 play-consumer.sh*
-rwxrwxr-x <span class="token number">1</span> ubuntu ubuntu <span class="token number">1497</span> Jul <span class="token number">24</span> <span class="token number">15</span>:23 play-docker-compose.sh*
-rwxrwxr-x <span class="token number">1</span> ubuntu ubuntu <span class="token number">3201</span> Jul <span class="token number">24</span> <span class="token number">15</span>:23 play-docker-dledger.sh*
-rwxrwxr-x <span class="token number">1</span> ubuntu ubuntu <span class="token number">2354</span> Jul <span class="token number">24</span> <span class="token number">15</span>:23 play-docker.sh*
-rwxrwxr-x <span class="token number">1</span> ubuntu ubuntu <span class="token number">2271</span> Jul <span class="token number">24</span> <span class="token number">15</span>:23 play-docker-tls.sh*
-rwxrwxr-x <span class="token number">1</span> ubuntu ubuntu  <span class="token number">947</span> Jul <span class="token number">24</span> <span class="token number">15</span>:23 play-kubernetes.sh*
-rwxrwxr-x <span class="token number">1</span> ubuntu ubuntu  <span class="token number">901</span> Jul <span class="token number">24</span> <span class="token number">15</span>:23 play-producer.sh*
drwxrwxr-x <span class="token number">2</span> ubuntu ubuntu <span class="token number">4096</span> Jul <span class="token number">24</span> <span class="token number">15</span>:23 ssl/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体的原理是用原来 <code>templates</code> 下的模板，替换内容中的版本号，生成 4.9.4 版本的启动脚本。</p><p>其中的多个 <code>.sh</code> 文件是用来以不同部署方式启动 RocketMQ</p><h3 id="用-docker-compose-以集群模式启动-rocketmq" tabindex="-1"><a class="header-anchor" href="#用-docker-compose-以集群模式启动-rocketmq" aria-hidden="true">#</a> 用 docker-compose 以集群模式启动 RocketMQ</h3><p>如果是采用远程拉取的镜像，首选需要修改一下 <code>docker-compose.yml</code> 文件保证使用的镜像名称正确。</p><p>最新的 <code>rocketmq-docker</code> 项目已经将 docker-compose.yml 中的镜像地址改为了官方镜像地址 <code>apache/rocketmq</code>，如果你拉取的版本没有改，需要进行修改。</p><p>此外，RocketMQ 有 <code>brokerIP</code> 配置，该配置默认会自动获取主机 IP，但是在容器中获取的是容器的 IP，客户端去连接会发现连不上。所以需要提前手动修改 Broker 配置的 IP。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">pwd</span>
/home/ubuntu/workspace/rocketmq/rocketmq-docker/stages/4.9.4/templates
$ <span class="token function">vim</span> docker-compose/data/broker/conf/broker.conf
$ <span class="token function">vim</span> docker-compose/data1/broker/conf/broker.conf

<span class="token comment"># broker.conf</span>
brokerClusterName <span class="token operator">=</span> DefaultCluster
brokerName <span class="token operator">=</span> broker-a
brokerId <span class="token operator">=</span> <span class="token number">0</span>
deleteWhen <span class="token operator">=</span> 04
fileReservedTime <span class="token operator">=</span> <span class="token number">48</span>
brokerRole <span class="token operator">=</span> ASYNC_MASTER
flushDiskType <span class="token operator">=</span> ASYNC_FLUSH

<span class="token comment"># 改为宿主机的 IP</span>
<span class="token assign-left variable">brokerIP1</span><span class="token operator">=</span><span class="token punctuation">{</span>宿主机IP<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>改成宿主机 IP 之后，发现如果是用 2 个主节点，他们的监听 IP 都将会是 <code>{宿主机IP}:10911</code>，需要将 broker-b 映射的监听 port 修改一下。<br> 修改 <code>docker-compose.yml</code></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>  <span class="token comment">#Service for another broker -- broker1</span>
  <span class="token key atrule">broker1</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> apache/rocketmq<span class="token punctuation">:</span>4.9.4
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> rmqbroker<span class="token punctuation">-</span>b
    <span class="token key atrule">links</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> namesrv
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token comment"># 修改映射到宿主机的 port</span>
            <span class="token comment">#- 10929:10909</span>
            <span class="token comment">#- 10931:10911</span>
            <span class="token comment">#- 10932:10912</span>
      <span class="token punctuation">-</span> 10929<span class="token punctuation">:</span><span class="token number">10929</span>
      <span class="token punctuation">-</span> 10931<span class="token punctuation">:</span><span class="token number">10931</span>
      <span class="token punctuation">-</span> 10932<span class="token punctuation">:</span><span class="token number">10932</span>
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> NAMESRV_ADDR=namesrv<span class="token punctuation">:</span><span class="token number">9876</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> ./data1/broker/logs<span class="token punctuation">:</span>/home/rocketmq/logs
      <span class="token punctuation">-</span> ./data1/broker/store<span class="token punctuation">:</span>/home/rocketmq/store
      <span class="token punctuation">-</span> ./data1/broker/conf/broker.conf<span class="token punctuation">:</span>/opt/rocketmq<span class="token punctuation">-</span>4.9.4/conf/broker.conf
    <span class="token key atrule">command</span><span class="token punctuation">:</span> sh mqbroker <span class="token punctuation">-</span>c /opt/rocketmq<span class="token punctuation">-</span>4.9.4/conf/broker.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>docker-compose.yml</code> 文件映射端口改了之外，还要修改 Broker2 的监听端口</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">pwd</span>
/home/ubuntu/workspace/rocketmq/rocketmq-docker/stages/4.9.4/templates
$ <span class="token function">vim</span> docker-compose/data1/broker/conf/broker.conf

<span class="token comment"># broker.conf</span>
brokerClusterName <span class="token operator">=</span> DefaultCluster
brokerName <span class="token operator">=</span> broker-b
brokerId <span class="token operator">=</span> <span class="token number">0</span>
deleteWhen <span class="token operator">=</span> 04
fileReservedTime <span class="token operator">=</span> <span class="token number">48</span>
brokerRole <span class="token operator">=</span> ASYNC_MASTER
flushDiskType <span class="token operator">=</span> ASYNC_FLUSH

<span class="token comment"># 改为宿主机的 IP</span>
<span class="token assign-left variable">brokerIP1</span><span class="token operator">=</span><span class="token punctuation">{</span>宿主机IP<span class="token punctuation">}</span>
<span class="token comment"># 修改监听端口</span>
<span class="token assign-left variable">listenPort</span><span class="token operator">=</span><span class="token number">10931</span>
<span class="token assign-left variable">fastListenPort</span><span class="token operator">=</span><span class="token number">10929</span>
<span class="token assign-left variable">haListenPort</span><span class="token operator">=</span><span class="token number">10932</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后可以启动 RocketMQ 容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">pwd</span>
/home/ubuntu/workspace/rocketmq/rocketmq-docker/stages/4.9.4/templates
$ <span class="token function">vim</span> docker-compose/docker-compose.yml
<span class="token comment"># （如果拉取远程镜像）把其中默认的 image 从 apacherocketmq/rocketmq:4.9.4 改成最新的官方镜像地址 apache/rocketmq:4.9.4</span>
$ ./play-docker-compose.sh 
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Running <span class="token number">4</span>/4
 ⠿ Network docker-compose_default  Created                                                                                       
 ⠿ Container rmqnamesrv            Started                                                                                       
 ⠿ Container rmqbroker-b           Started                                                                                       
 ⠿ Container rmqbroker             Started                                         
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行之后会启动两个 broker 和一个 nameserver</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> <span class="token function">ps</span>
CONTAINER ID   IMAGE                                     COMMAND                  CREATED              STATUS              PORTS                                                                                                                                                   NAMES
722c5c14d3d0   apache/rocketmq:4.9.4                     <span class="token string">&quot;sh mqbroker -c /opt…&quot;</span>   About a minute ago   Up About a minute   <span class="token number">0.0</span>.0.0:10909-<span class="token operator">&gt;</span><span class="token number">10909</span>/tcp, :::10909-<span class="token operator">&gt;</span><span class="token number">10909</span>/tcp, <span class="token number">9876</span>/tcp, <span class="token number">0.0</span>.0.0:10911-10912-<span class="token operator">&gt;</span><span class="token number">10911</span>-10912/tcp, :::10911-10912-<span class="token operator">&gt;</span><span class="token number">10911</span>-10912/tcp                          rmqbroker
a7d0e64c5335   apache/rocketmq:4.9.4                     <span class="token string">&quot;sh mqbroker -c /opt…&quot;</span>   About a minute ago   Up About a minute   <span class="token number">9876</span>/tcp, <span class="token number">0.0</span>.0.0:10929-<span class="token operator">&gt;</span><span class="token number">10909</span>/tcp, :::10929-<span class="token operator">&gt;</span><span class="token number">10909</span>/tcp, <span class="token number">0.0</span>.0.0:10931-<span class="token operator">&gt;</span><span class="token number">10911</span>/tcp, :::10931-<span class="token operator">&gt;</span><span class="token number">10911</span>/tcp, <span class="token number">0.0</span>.0.0:10932-<span class="token operator">&gt;</span><span class="token number">10912</span>/tcp, :::10932-<span class="token operator">&gt;</span><span class="token number">10912</span>/tcp   rmqbroker-b
a210d64eddb5   apache/rocketmq:4.9.4                     <span class="token string">&quot;sh mqnamesrv&quot;</span>           About a minute ago   Up About a minute   <span class="token number">10909</span>/tcp, <span class="token number">0.0</span>.0.0:9876-<span class="token operator">&gt;</span><span class="token number">9876</span>/tcp, :::9876-<span class="token operator">&gt;</span><span class="token number">9876</span>/tcp, <span class="token number">10911</span>-10912/tcp                                                                                   rmqnamesrv
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用-docker-启动-rocketmq-dashboard" tabindex="-1"><a class="header-anchor" href="#使用-docker-启动-rocketmq-dashboard" aria-hidden="true">#</a> 使用 docker 启动 RocketMQ-dashboard</h2><p>RocketMQ-dashboard 项目是 rocketmq 的控制台，可以可视化的查看 rocketmq 集群状态。也可以用 docker 启动。直接使用官方打包好的镜像，不本地构建了。</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202207241636060.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="用-docker-单独启动-rocketmq-dashboard" tabindex="-1"><a class="header-anchor" href="#用-docker-单独启动-rocketmq-dashboard" aria-hidden="true">#</a> 用 docker 单独启动 rocketmq-dashboard</h3><p>需要先修改 <code>start-dashboard.sh</code> 文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">pwd</span>
/home/ubuntu/workspace/rocketmq/rocketmq-docker
$ <span class="token function">vim</span> product/start-dashboard.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将镜像名称改成 <code>apacherocketmq/rocketmq-dashboard</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 修改后</span>
<span class="token assign-left variable">ROCKETMQ_DASHBOARD_VERSION</span><span class="token operator">=</span><span class="token variable">$1</span>

<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-it</span> <span class="token parameter variable">--name</span> rocketmq-dashboard <span class="token parameter variable">-p</span> <span class="token number">6765</span>:8080 apacherocketmq/rocketmq-dashboard:<span class="token variable">\${ROCKETMQ_DASHBOARD_VERSION}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后运行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sh</span> start-dashboard.sh <span class="token number">1.0</span>.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>会启动 rocketmq-dashboard 的 container</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> <span class="token function">ps</span>
CONTAINER ID   IMAGE                                     COMMAND                  CREATED          STATUS          PORTS                                                                                                                                                   NAMES
433021cbeb23   apacherocketmq/rocketmq-dashboard:1.0.0   <span class="token string">&quot;sh -c &#39;java <span class="token variable">$JAVA_O</span>…&quot;</span>   <span class="token number">45</span> minutes ago   Up <span class="token number">45</span> minutes   <span class="token number">0.0</span>.0.0:6765-<span class="token operator">&gt;</span><span class="token number">8080</span>/tcp, :::6765-<span class="token operator">&gt;</span><span class="token number">8080</span>/tcp                                                                                                               rocketmq-dashboard
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样启动之后，登录访问 <code>host:6765</code> 地址，设置集群的 nameserver 地址，但是与集群的网络不通。</p><h3 id="与集群一起用-docker-compose-启动-docker-dashboard" tabindex="-1"><a class="header-anchor" href="#与集群一起用-docker-compose-启动-docker-dashboard" aria-hidden="true">#</a> 与集群一起用 docker-compose 启动 docker-dashboard</h3><p>还是要修改 <code>docker-compose.yml</code> 文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> stages/4.9.4/templates
$ <span class="token function">vim</span> docker-compose/docker-compose.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在文件尾部添加如下配置，启动一个 rocketmq-dashboard 服务，并置于和集群同一个网络下</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>  <span class="token comment"># Service for dashboard </span>
  <span class="token key atrule">dashboard</span><span class="token punctuation">:</span> 
    <span class="token key atrule">image</span><span class="token punctuation">:</span> apacherocketmq/rocketmq<span class="token punctuation">-</span>dashboard<span class="token punctuation">:</span>1.0.0 
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> rmq<span class="token punctuation">-</span>dashboard 
    <span class="token key atrule">ports</span><span class="token punctuation">:</span> 
      <span class="token punctuation">-</span> 48080<span class="token punctuation">:</span><span class="token number">8080</span> 
    <span class="token key atrule">environment</span><span class="token punctuation">:</span> 
      <span class="token punctuation">-</span> NAMESRV_ADDR=namesrv<span class="token punctuation">:</span><span class="token number">9876</span> 
    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span> 
      <span class="token punctuation">-</span> namesrv 
    <span class="token key atrule">links</span><span class="token punctuation">:</span> 
      <span class="token punctuation">-</span> namesrv 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后访问 <code>host:48080</code> 地址，可以通过 dashboard 查看集群状态</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202207250040182.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="docker-启动-dledger-模式的-rocketmq" tabindex="-1"><a class="header-anchor" href="#docker-启动-dledger-模式的-rocketmq" aria-hidden="true">#</a> Docker 启动 DLedger 模式的 RocketMQ</h2><p>用 DLedger 模式前保证有足够的可用内存（8G 以上）</p><p>也是有两种方法，用本地构建的镜像和 Docker Hub 中官方上传的镜像。如果用本地打包的镜像，直接运行如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> stages/4.9.4/templates
$ ./play-docker-dledger.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果要用 Docker Hub 中的镜像，则需要修改 <code>play-docker-dledger.sh</code> 中的镜像地址</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">vim</span> play-docker-dledger.sh
:%s/apacherocketmq/apache/g
$ ./play-docker-dledger.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是我运行时三个 Broker 都未启动成功，查看 Broker 日志，发现 <code>broker.conf</code> 文件未找到</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ubuntu@VM-4-14-ubuntu:~/workspace/rocketmq/rocketmq-docker/stages/4.9.4/templates$ <span class="token function">docker</span> <span class="token function">ps</span>
CONTAINER ID   IMAGE                   COMMAND                  CREATED         STATUS         PORTS                                                                                                                                NAMES
1ae8a853012b   apache/rocketmq:4.9.4   <span class="token string">&quot;sh mqbroker -c ../c…&quot;</span>   <span class="token number">2</span> seconds ago   Up <span class="token number">1</span> second    <span class="token number">9876</span>/tcp, <span class="token number">10909</span>/tcp, <span class="token number">0.0</span>.0.0:30929-<span class="token operator">&gt;</span><span class="token number">30929</span>/tcp, :::30929-<span class="token operator">&gt;</span><span class="token number">30929</span>/tcp, <span class="token number">10911</span>-10912/tcp, <span class="token number">0.0</span>.0.0:30931-<span class="token operator">&gt;</span><span class="token number">30931</span>/tcp, :::30931-<span class="token operator">&gt;</span><span class="token number">30931</span>/tcp   rmqbroker2
71da5cd67513   apache/rocketmq:4.9.4   <span class="token string">&quot;sh mqnamesrv&quot;</span>           <span class="token number">4</span> seconds ago   Up <span class="token number">3</span> seconds   <span class="token number">10909</span>/tcp, <span class="token number">0.0</span>.0.0:9876-<span class="token operator">&gt;</span><span class="token number">9876</span>/tcp, :::9876-<span class="token operator">&gt;</span><span class="token number">9876</span>/tcp, <span class="token number">10911</span>-10912/tcp                                                                rmqnamesrv
0e80d1d53112   redis:6.2               <span class="token string">&quot;docker-entrypoint.s…&quot;</span>   <span class="token number">3</span> months ago    Up <span class="token number">3</span> months    <span class="token number">0.0</span>.0.0:46379-<span class="token operator">&gt;</span><span class="token number">6379</span>/tcp, :::46379-<span class="token operator">&gt;</span><span class="token number">6379</span>/tcp                                                                                          redis-redis-1
ubuntu@VM-4-14-ubuntu:~/workspace/rocketmq/rocketmq-docker/stages/4.9.4/templates$ <span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span>
CONTAINER ID   IMAGE                                     COMMAND                  CREATED          STATUS                       PORTS                                                                   NAMES
1ae8a853012b   apache/rocketmq:4.9.4                     <span class="token string">&quot;sh mqbroker -c ../c…&quot;</span>   <span class="token number">8</span> seconds ago    Exited <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token number">6</span> seconds ago                                                                           rmqbroker2
b959cf8b6542   apache/rocketmq:4.9.4                     <span class="token string">&quot;sh mqbroker -c ../c…&quot;</span>   <span class="token number">9</span> seconds ago    Exited <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token number">6</span> seconds ago                                                                           rmqbroker1
919ce578e6db   apache/rocketmq:4.9.4                     <span class="token string">&quot;sh mqbroker -c ../c…&quot;</span>   <span class="token number">10</span> seconds ago   Exited <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token number">7</span> seconds ago                                                                           rmqbroker
71da5cd67513   apache/rocketmq:4.9.4                     <span class="token string">&quot;sh mqnamesrv&quot;</span>           <span class="token number">10</span> seconds ago   Up <span class="token number">9</span> seconds                 <span class="token number">10909</span>/tcp, <span class="token number">0.0</span>.0.0:9876-<span class="token operator">&gt;</span><span class="token number">9876</span>/tcp, :::9876-<span class="token operator">&gt;</span><span class="token number">9876</span>/tcp, <span class="token number">10911</span>-10912/tcp   rmqnamesrv

ubuntu@VM-4-14-ubuntu:~/workspace/rocketmq/rocketmq-docker/stages/4.9.4/templates$ <span class="token function">docker</span> logs <span class="token parameter variable">-t</span> rmqbroker <span class="token parameter variable">--tail</span><span class="token operator">=</span><span class="token number">100</span>
<span class="token number">2022</span>-07-27T15:58:11.218761998Z java.io.FileNotFoundException: <span class="token punctuation">..</span>/conf/dledger/broker.conf <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
<span class="token number">2022</span>-07-27T15:58:11.218878131Z  at java.io.FileInputStream.open0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>
<span class="token number">2022</span>-07-27T15:58:11.218887204Z  at java.io.FileInputStream.open<span class="token punctuation">(</span>FileInputStream.java:195<span class="token punctuation">)</span>
<span class="token number">2022</span>-07-27T15:58:11.218891884Z  at java.io.FileInputStream.<span class="token operator">&lt;</span>init<span class="token operator">&gt;</span><span class="token punctuation">(</span>FileInputStream.java:138<span class="token punctuation">)</span>
<span class="token number">2022</span>-07-27T15:58:11.218953791Z  at java.io.FileInputStream.<span class="token operator">&lt;</span>init<span class="token operator">&gt;</span><span class="token punctuation">(</span>FileInputStream.java:93<span class="token punctuation">)</span>
<span class="token number">2022</span>-07-27T15:58:11.218960481Z  at org.apache.rocketmq.broker.BrokerStartup.createBrokerController<span class="token punctuation">(</span>BrokerStartup.java:119<span class="token punctuation">)</span>
<span class="token number">2022</span>-07-27T15:58:11.218965349Z  at org.apache.rocketmq.broker.BrokerStartup.main<span class="token punctuation">(</span>BrokerStartup.java:57<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>于是想办法修改 <code>play-docker-dledger.sh</code> 中的 Broker 配置文件路径，改成 <code>/opt/rocketmq-4.9.4/conf/dledger/broker.conf</code>，然后启动成功</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202207280025262.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="修改内存配置" tabindex="-1"><a class="header-anchor" href="#修改内存配置" aria-hidden="true">#</a> 修改内存配置</h4><p>DLedger 模式默认配置下，每个节点会占用 2G 内存。如果是内存较小的机器则可以通过定义环境变量修改内存占用。</p><p>RocketMQ 使用 <code>runbroker.sh</code> 启动，其中启动参数设置脚本如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># runbroker.sh</span>
<span class="token assign-left variable">JAVA_OPT</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${JAVA_OPT}</span> -server -Xms8g -Xmx8g&quot;</span>
choose_gc_options
<span class="token assign-left variable">JAVA_OPT</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${JAVA_OPT}</span> -XX:-OmitStackTraceInFastThrow&quot;</span>
<span class="token assign-left variable">JAVA_OPT</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${JAVA_OPT}</span> -XX:+AlwaysPreTouch&quot;</span>
<span class="token assign-left variable">JAVA_OPT</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${JAVA_OPT}</span> -XX:MaxDirectMemorySize=15g&quot;</span>
<span class="token assign-left variable">JAVA_OPT</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${JAVA_OPT}</span> -XX:-UseLargePages -XX:-UseBiasedLocking&quot;</span>
<span class="token comment">#JAVA_OPT=&quot;\${JAVA_OPT} -Xdebug -Xrunjdwp:transport=dt_socket,address=9555,server=y,suspend=n&quot;</span>
<span class="token assign-left variable">JAVA_OPT</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${JAVA_OPT}</span> <span class="token variable">\${JAVA_OPT_EXT}</span>&quot;</span>
<span class="token assign-left variable">JAVA_OPT</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${JAVA_OPT}</span> -cp <span class="token variable">\${CLASSPATH}</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个脚本预留了定义额外的 Java 启动参数的环境变量，即 <code>JAVA_OPT_EXT</code>，于是将 <code>play-docker-dledger.sh</code> 文件做如下修改，添加 <code>-e &quot;JAVA_OPT_EXT=-server -Xms128m -Xmx128m -Xmn128m&quot;</code>（注意，这么小的内存无法生产消费消息，仅仅为了启动 Broker。需要同时改动 broker 配置中的 commitlog、consumequeue、indexfile 大小）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--net</span> dledger-br <span class="token parameter variable">--ip</span> <span class="token number">172.18</span>.0.12 <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">30911</span>:30911 <span class="token parameter variable">-p</span> <span class="token number">30909</span>:30909 <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/data/broker0/logs:/home/rocketmq/logs <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/data/broker0/store:/home/rocketmq/store <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/data/broker0/conf/dledger:/opt/rocketmq-4.9.4/conf/dledger <span class="token parameter variable">--name</span> rmqbroker <span class="token parameter variable">--link</span> rmqnamesrv:namesrv <span class="token parameter variable">-e</span> <span class="token string">&quot;NAMESRV_ADDR=namesrv:9876&quot;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;JAVA_OPT_EXT=-server -Xms128m -Xmx128m -Xmn128m&quot;</span> apache/rocketmq:4.9.4 <span class="token function">sh</span> mqbroker <span class="token parameter variable">-c</span> /opt/rocketmq-4.9.4/conf/dledger/broker.conf
<span class="token function">docker</span> run <span class="token parameter variable">--net</span> dledger-br <span class="token parameter variable">--ip</span> <span class="token number">172.18</span>.0.13 <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">30921</span>:30921 <span class="token parameter variable">-p</span> <span class="token number">30919</span>:30919 <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/data/broker1/logs:/home/rocketmq/logs <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/data/broker1/store:/home/rocketmq/store <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/data/broker1/conf/dledger:/opt/rocketmq-4.9.4/conf/dledger <span class="token parameter variable">--name</span> rmqbroker1 <span class="token parameter variable">--link</span> rmqnamesrv:namesrv <span class="token parameter variable">-e</span> <span class="token string">&quot;NAMESRV_ADDR=namesrv:9876&quot;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;JAVA_OPT_EXT=-server -Xms128m -Xmx128m -Xmn128m&quot;</span> apache/rocketmq:4.9.4 <span class="token function">sh</span> mqbroker <span class="token parameter variable">-c</span> /opt/rocketmq-4.9.4/conf/dledger/broker.conf
<span class="token function">docker</span> run <span class="token parameter variable">--net</span> dledger-br <span class="token parameter variable">--ip</span> <span class="token number">172.18</span>.0.14 <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">30931</span>:30931 <span class="token parameter variable">-p</span> <span class="token number">30929</span>:30929 <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/data/broker2/logs:/home/rocketmq/logs <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/data/broker2/store:/home/rocketmq/store <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/data/broker2/conf/dledger:/opt/rocketmq-4.9.4/conf/dledger <span class="token parameter variable">--name</span> rmqbroker2 <span class="token parameter variable">--link</span> rmqnamesrv:namesrv <span class="token parameter variable">-e</span> <span class="token string">&quot;NAMESRV_ADDR=namesrv:9876&quot;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;JAVA_OPT_EXT=-server -Xms128m -Xmx128m -Xmn128m&quot;</span> apache/rocketmq:4.9.4 <span class="token function">sh</span> mqbroker <span class="token parameter variable">-c</span> /opt/rocketmq-4.9.4/conf/dledger/broker.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="dledger-与-dashboard-同时启动" tabindex="-1"><a class="header-anchor" href="#dledger-与-dashboard-同时启动" aria-hidden="true">#</a> DLedger 与 Dashboard 同时启动</h4><p>需要修改 <code>play-docker-dleger.sh</code>，在 broker 运行的脚本下面添加 dashboard 的 docker 运行脚本，并与 broker、nameserver 用同一个网络</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Start brokers</span>
<span class="token comment"># ...</span>
<span class="token comment"># Start dashboard</span>
<span class="token function">docker</span> run <span class="token parameter variable">--net</span> dledger-br <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">48080</span>:8080 <span class="token parameter variable">--link</span> rmqnamesrv:namesrv <span class="token parameter variable">-e</span> <span class="token string">&quot;NAMESRV_ADDR=namesrv:9876&quot;</span> <span class="token parameter variable">--name</span> rmq-dledger-dashboard apacherocketmq/rocketmq-dashboard:1.0.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后运行 <code>./play-docker-dledger.sh</code>，可以访问 <code>48080</code> 端口进入 Dashboard</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202208020138914.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202208020138935.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="以其他部署形式启动-rocketmq" tabindex="-1"><a class="header-anchor" href="#以其他部署形式启动-rocketmq" aria-hidden="true">#</a> 以其他部署形式启动 RocketMQ</h2><h3 id="docker-启动单节点-rocketmq" tabindex="-1"><a class="header-anchor" href="#docker-启动单节点-rocketmq" aria-hidden="true">#</a> Docker 启动单节点 RocketMQ</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> stages/4.9.4/templates
$ <span class="token function">sh</span> play-docker.sh alpine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="docker-启动带-tls-的-rocketmq" tabindex="-1"><a class="header-anchor" href="#docker-启动带-tls-的-rocketmq" aria-hidden="true">#</a> Docker 启动带 TLS 的 RocketMQ</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> stages/4.9.4/templates
$ <span class="token function">sh</span> play-docker-tls.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>欢迎关注公众号【消息中间件】（middleware-mq），更新消息中间件的源码解析和最新动态！</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202205170102971.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,81);function q(f,A){const n=t("ExternalLinkIcon");return c(),p("div",null,[s("p",null,[a("原文地址："),s("a",i,[a("http://hscarb.github.io/rocketmq/20220724-rocketmq-docker-compose.html"),e(n)])]),d,u,m,s("p",null,[s("a",k,[a("rocketmq-docker"),e(n)]),a(" 这个项目提供了 RocketMQ 的 docker 镜像打包实现，并且提供了常用的 docker-compose 模板，可以很快地用 Docker 启动 RocketMQ，并支持多种部署模式。")]),b,s("p",null,[a("其中 "),v,a(" 是需要构建的 RocketMQ 版本，在 "),s("a",h,[a("这个地方"),e(n)]),a(" 查看可选版本列表。")]),g])}const T=o(l,[["render",q],["__file","20220724-rocketmq-docker-compose.html.vue"]]);export{T as default};
