import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c as o,a as n,b as s,d as c,e as l}from"./app-eaa093f0.js";const i={},u={href:"http://hscarb.github.io/rocketmq/20220827-rocketmq-consumer-2-struct-and-init.html",target:"_blank",rel:"noopener noreferrer"},r=l(`<h1 id="rocketmq-消费者-2-客户端设计和启动流程详解-源码解析" tabindex="-1"><a class="header-anchor" href="#rocketmq-消费者-2-客户端设计和启动流程详解-源码解析" aria-hidden="true">#</a> RocketMQ 消费者（2）客户端设计和启动流程详解 &amp; 源码解析</h1><h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1. 背景</h2><p>本文是 RocketMQ 消费者系列的第二篇，介绍消费者相关类与调用关系，同时包含消费者启动流程。<br> 看完本文能够对消息消费涉及到的相关类和消费流程有大体的了解。</p><h2 id="_2-概要设计" tabindex="-1"><a class="header-anchor" href="#_2-概要设计" aria-hidden="true">#</a> 2. 概要设计</h2><h3 id="_2-1-消费者客户端设计" tabindex="-1"><a class="header-anchor" href="#_2-1-消费者客户端设计" aria-hidden="true">#</a> 2.1 消费者客户端设计</h3><p>先看一下 RocketMQ 客户端代码中消费者相关的类图。</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/09/1662312698290.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>其中 <code>DefaultMQPullConsumer</code> 和 <code>DefaultMQPushConsumer</code> 就是我们实际消费中需要新建的消费者对象。它们分别实现了消费者接口，扩展了客户端配置类。</p><p>新建 <code>DefaultXXXXConsumer</code> 对象时会在内部一个创建 <code>DefaultMQXXXXConsumerImpl</code> 对象。这里使用了代理模式，<code>DefaultXXXXConsumer</code> 对象只是一个壳，内部的大部分方法都通过调用代理 <code>DefaultMQXXXXConsumerImpl</code> 来执行。</p><p><code>DefaultMQXXXXConsumerImpl</code> 实现类中包含了客户端实例 <code>MQClientInstnace</code> ，每个客户端进程一般只有一个这玩意。它的用处很多，比如保存路由和客户端信息，向 Broker 发送请求等。</p><h3 id="_2-2-消费者客户端启动" tabindex="-1"><a class="header-anchor" href="#_2-2-消费者客户端启动" aria-hidden="true">#</a> 2.2 消费者客户端启动</h3><p>消费者的启动主要涉及上面讲到的 <code>DefaultMQXXXXConsumer</code>、<code>DefaultMQXXXXConsumerImpl</code> 和 <code>MQClientInstnace</code> 这三个类。</p><h4 id="_2-2-1-新建消费者" tabindex="-1"><a class="header-anchor" href="#_2-2-1-新建消费者" aria-hidden="true">#</a> 2.2.1 新建消费者</h4><ul><li><p>新建消费者时构造 <code>DefaultMQXXXXConsumer</code> 对象，指定队列负载算法，内部构造一个 <code>DefaultMQXXXXConsumerImpl</code> 对象。</p></li><li><p><code>DefaultMQXXXXConsumerImpl</code> 设为刚创建状态，并新建重平衡服务 <code>RebalanceService</code></p></li><li><p>在首次启动前，<code>DefaultMQXXXXConsumerImpl</code> 对象中的 <code>MQClientInstance</code> 对象还没有被创建出来。</p></li></ul><h4 id="_2-2-2-消费者启动" tabindex="-1"><a class="header-anchor" href="#_2-2-2-消费者启动" aria-hidden="true">#</a> 2.2.2 消费者启动</h4><ul><li><p>启动命令也是在 <code>DefaultMQXXXXConsumer</code> 调用并代理到 <code>DefaultMQXXXXConsumerImpl</code>。</p></li><li><p>此时 <code>DefaultMQXXXXConsumerImpl</code> 会初始化一些服务和参数，然后创建一个 <code>MQClientInstance</code> 对象。</p></li><li><p><code>MQClientInstance</code> 对象启动客户端的各种服务（Broker 通信、定时任务、消息拉取、重平衡……）</p></li></ul><h2 id="_3-详细设计" tabindex="-1"><a class="header-anchor" href="#_3-详细设计" aria-hidden="true">#</a> 3. 详细设计</h2><h3 id="_3-1-消费者客户端类设计" tabindex="-1"><a class="header-anchor" href="#_3-1-消费者客户端类设计" aria-hidden="true">#</a> 3.1 消费者客户端类设计</h3><h4 id="_3-1-1-整体类图" tabindex="-1"><a class="header-anchor" href="#_3-1-1-整体类图" aria-hidden="true">#</a> 3.1.1 整体类图</h4><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/09/1662312698325.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h4 id="_3-1-2-消费者接口" tabindex="-1"><a class="header-anchor" href="#_3-1-2-消费者接口" aria-hidden="true">#</a> 3.1.2 消费者接口</h4><p>由于需要支持拉和推两种消费模式，所以按通常的想法，消费者类的设计中将会有一个<strong>消费者接口</strong>，然后<strong>推消费者</strong>和<strong>拉消费者接口</strong>分别扩展<strong>消费者接口</strong>。消费者接口提供一些共用方法，拉和推消费者实现拉消费和推消费方法。RocketMQ 就是这样做的。其中 MQConsumer 即消费者接口，扩展 MQAdmin 在这显得有些多余。</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202208170017865.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>MQAdmin 接口提供了客户端的一些基本的管理接口，生产者、消费者和命令工具都扩展了它。</li><li>MQConsumer 接口很简单，主要提供了通过 Topic 获取读队列的方法 <code>Set&lt;MessageQueue&gt; fetchSubscribeMessageQueues(final String topic)</code>。</li></ul><hr><h4 id="_3-1-3-拉-推模式消费者接口" tabindex="-1"><a class="header-anchor" href="#_3-1-3-拉-推模式消费者接口" aria-hidden="true">#</a> 3.1.3 拉 &amp; 推模式消费者接口</h4><p>接下来是拉消费者和推消费者接口。</p><p>如果我们自己来设计拉 &amp; 推模式消费者接口，需要定义哪些方法？可以想象一下消费时要做的操作，就可以定义出相应的方法。</p><ul><li>拉模式消费者的消费步骤为：拉取消息，执行消费逻辑，上报消费进度，如果有需要的话对于消费失败的消息还需要发回 Broker 重新消费。</li><li>推模式消费者消费步骤更简单，只需要订阅一个 Topic，然后指定消费回调函数，即可在收到消息时自动消费。</li></ul><p>RocketMQ 的拉 &amp; 推模式消费者接口就定义了这些方法，先来看一下类图：</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202208170023801.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>MQPullConsumer</strong></p><ul><li><code>void registerMessageQueueListener(final String topic, final MessageQueueListener listener)</code> 方法注册消息队列变更时的回调方法。</li><li><code>PullResult pull</code> 从 RocketMQ 服务器拉取一批消息。 <ul><li>MessageQueue：拉取的队列</li><li>MessageSelector：消息过滤器</li><li>offset：拉取的消息在消费队列中的偏移量</li><li>maxNums：最大拉取消息条数</li><li>timeout：拉取超时时间</li></ul></li><li><code>void pull</code> 为异步拉取方法，拉取成功后调用 <code>PullCallback</code></li><li><code>updateConsumeOffset</code> 更新消息消费偏移量</li><li><code>fetchConsumeOffset</code> 获取消息消费偏移量</li><li><code>sendMessageBack</code> 对于消费失败的消息，发回 Broker 重新消费</li></ul><p><strong>MQPushConsumer</strong></p><ul><li><code>subscribe</code>：订阅主题，订阅之后可以收到来自该主题的消息。 <ul><li>topic：订阅的主题，可以多次调用该方法来订阅多个主题</li><li>subExpression：消息过滤表达式</li><li>messageSelector：消息选择器，提供了 SQL92 和 Tag 模式的过滤选择功能</li></ul></li><li><code>unsubscribe</code>：取消订阅</li><li><code>registerMessageListener</code>：用来注册消费监听器，包含两种消费模式：并发消费和顺序消费</li></ul><h4 id="_3-1-4-消费者实现" tabindex="-1"><a class="header-anchor" href="#_3-1-4-消费者实现" aria-hidden="true">#</a> 3.1.4 消费者实现</h4><p><code>DefaultMQXXXXConsumer</code> 是拉消费者接口 <code>MQXXXXConsumer</code> 的默认实现。这里用到了代理模式，将具体的方法实现都实现在 <code>DefaultMQXXXXConsumerImpl</code> 中，<code>DefaultMQXXXXConsumer</code> 保存了一个 <code>DefaultMQXXXXConsumerImpl</code> 的代理。</p><p><code>DefaultMQXXXXConsumerImpl</code> 实现了 <code>MQConsumerInner</code> 接口，提供了消费者实现的一些公用方法。</p><p><code>DefaultMQXXXXConsumerImpl</code> 中有一个客户端实例的引用 <code>MQClientInstance mqClientFactory</code>，用来与 Broker 通信、保存元数据。</p><p>MQClientInstnace：客户端实例，每个客户端进程一般只有一个这玩意。它的用处很多，很多操作最终都是调用它来做的。</p><ul><li>保存路由信息</li><li>保存生产者消费者组信息</li><li>向 Broker 发送请求</li><li>启动重平衡</li></ul><h4 id="_3-1-5-推模式消费者实现" tabindex="-1"><a class="header-anchor" href="#_3-1-5-推模式消费者实现" aria-hidden="true">#</a> 3.1.5 推模式消费者实现</h4><p>拉模式消费者需要手动拉取消息进行消费，平平无奇。推模式消费者自动监听推送过来的消息并进行消费，着重讲解。</p><p>推模式消费者实际内部也是通过拉取消息的方式进行消息拉取，只不过封装了订阅和监听器这样的对外接口，让用户在使用时感觉像 Broker 主动推送消息到消费者。</p><p>在拉消费者背后，有一个线程默默主动拉取消息，才能将拉转换为推，它就是 <code>PullMessageService</code>。此外，推消费者还支持并发消费和顺序消费，RocketMQ 定义了 <code>ConsumeMessageService</code> 接口来执行消息消费，<code>ConsumeMessageConcurrentlyService</code> 和 <code>ConsumeMessageOrderlyService</code> 分别是并发消费和顺序消费的实现。它们内部都定义了一个消费线程池 <code>consumeExecutor</code> 来执行最终的消息消费逻辑。而用户真正编写的只有最终的消费逻辑，即实现 <code>MessageListener</code> 接口的 <code>consumeMessage</code> 方法。</p><p>推模式消费者实现相关的类图如下所示：</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/09/1662312698381.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在图中，展示了消息消费整个流程的调用关系。在系列后面的文章中会详细讲解。</p><ol><li>客户端实例中的重平衡服务进行重平衡，生成一个 <code>PullRequest</code> 并调用拉消费者实现类的 <code>executePullRequestImmediately</code> 方法</li><li><code>DefaultMQPushConsumerImpl</code> 调用 <code>PullMessageService</code> 线程的 <code>executePullRequestImmediately</code> 方法，</li><li>该方法将 <code>PullRequest</code> 放入待执行的拉取请求队列</li><li><code>PullMessageService</code> 线程阻塞等待请求队列中的拉取请求</li><li>收到拉去请求 <code>PullRequest</code> 后就执行拉取消息拉取方法 <code>pullMessage</code> 从 Broker 拉取消息，拉取后执行消费消息逻辑</li><li>消费消息逻辑会调用 <code>ConsumeMessageService</code> 的 <code>submitConsumeRequest</code> 方法</li><li>该方法将消费消息的请求提交到消费线程池 <code>consumeExecutor</code></li><li>消费线程池执行真正的消息消费逻辑，调用 <code>MessageListener</code> 接口的 <code>consumeMessage</code> 方法</li><li>拉取一批消息成功后，将拉取请求 <code>PullRequest</code> 的拉取偏移量更新后再次调用 <code>executePullRequestImmediately</code> 方法，放入拉取队列，重新拉取</li></ol><h3 id="_3-2-消费者启动" tabindex="-1"><a class="header-anchor" href="#_3-2-消费者启动" aria-hidden="true">#</a> 3.2 消费者启动</h3><p>由于拉模式和推模式消费者的启动流程大致相同，所以只介绍推模式消费者的启动流程。</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/knowledge/2022/09/1662312698774.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>DefaultMQPushConsumer</code> 的启动方法内部实际是调用其代理类 <code>DefaultMQPushConsumerImpl</code> 的启动方法，他本身的启动方法并没有什么逻辑。</p><p><code>DefaultMQPushConsumerImpl</code> 的启动方法执行的动作如下：</p><ol><li>检查是否是刚创建状态，如果是才继续走启动流程</li><li>检查消费者配置信息是否合法</li><li>将用户的 Topic 订阅信息和重试 Topic 的订阅信息添加到 <code>rebalanceImpl</code> 中的 Map 中</li><li>创建和初始化一些对象 <ol><li>创建或获取已经创建的客户端实例 <code>MQClientInstance</code></li><li>初始化消费者的重平衡实现 <code>RebalanceImpl</code></li><li>创建拉取消息接口调用包装类 <code>PullApiWrapper</code></li><li>注册消息过滤钩子函数列表（如果有的话）</li></ol></li><li>初始化消费进度 <ul><li>广播模式，消费进度保存在消费者本地 <code>LocalFileOffsetStore</code></li><li>集群模式，消费进度保存在 Broker <code>RemoteBrokerOffsetStore</code></li></ul></li><li>初始化消息消费服务，消费服务内部维护一个线程池，负责消息消费</li><li>将消费者注册到客户端实例对象</li><li>启动客户端实例对象</li><li>从 Name server 更新 Topic 路由信息（如果路由信息有变化）</li><li>将客户端的信息（ID、生产者、消费者信息）上报给 Broker</li><li>唤醒重平衡线程 <code>RebalanceService</code> 立即执行重平衡</li><li>重平衡后调用拉取消息方法，生成拉取请求 <code>PullRequest</code> 并放入 <code>PullMessageService</code>，开始消费流程</li></ol><p>客户端实例 <code>MQClientInstance</code> 的启动流程如下：</p><ol><li>更新 Namesrv 地址</li><li>启动通信模块 <code>MQClientAPIImpl</code></li><li>启动定时任务（从 Namesrv 拉取路由、向 Broker 发送心跳等）</li><li>启动拉取消息服务 <code>PullMessageService</code></li><li>启动重平衡线程 <code>RebalanceService</code></li><li>启动默认生产者（用于将消费失败的消息重新生产到 Broker）</li></ol><h2 id="_4-源码解析" tabindex="-1"><a class="header-anchor" href="#_4-源码解析" aria-hidden="true">#</a> 4. 源码解析</h2><h3 id="_4-1-defaultmqproducerimpl-启动" tabindex="-1"><a class="header-anchor" href="#_4-1-defaultmqproducerimpl-启动" aria-hidden="true">#</a> 4.1 <code>DefaultMQProducerImpl</code> 启动</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// DefaultMQProducerImpl</span>
<span class="token doc-comment comment">/**
 * Push 消费者启动
 *
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">MQClientException</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>serviceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 检查消费者状态。只有第一次启动才执行，如果二次调用 start 方法会报错</span>
        <span class="token keyword">case</span> <span class="token constant">CREATE_JUST</span><span class="token operator">:</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;the consumer [{}] start beginning. messageModel={}, isUnitMode={}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                     <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getMessageModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">isUnitMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>serviceState <span class="token operator">=</span> <span class="token class-name">ServiceState</span><span class="token punctuation">.</span><span class="token constant">START_FAILED</span><span class="token punctuation">;</span>

            <span class="token comment">// 检查消费者配置是否合法</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 将用户的 Topic 订阅信息和重试 Topic 的订阅信息添加到 RebalanceImpl 的容器中</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">copySubscription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getMessageModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">MessageModel</span><span class="token punctuation">.</span><span class="token constant">CLUSTERING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">changeInstanceNameToPID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// 创建客户端实例</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>mQClientFactory <span class="token operator">=</span> <span class="token class-name">MQClientManager</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOrCreateMQClientInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rpcHook<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 初始化 RebalanceImpl</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>rebalanceImpl<span class="token punctuation">.</span><span class="token function">setConsumerGroup</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>rebalanceImpl<span class="token punctuation">.</span><span class="token function">setMessageModel</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getMessageModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>rebalanceImpl<span class="token punctuation">.</span><span class="token function">setAllocateMessageQueueStrategy</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getAllocateMessageQueueStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>rebalanceImpl<span class="token punctuation">.</span><span class="token function">setmQClientFactory</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mQClientFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 创建拉取消息接口调用包装类</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>pullAPIWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PullAPIWrapper</span><span class="token punctuation">(</span>
                mQClientFactory<span class="token punctuation">,</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">isUnitMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 注册消息过滤钩子函数列表</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>pullAPIWrapper<span class="token punctuation">.</span><span class="token function">registerFilterMessageHook</span><span class="token punctuation">(</span>filterMessageHookList<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 初始化消费进度</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getOffsetStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>offsetStore <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getOffsetStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getMessageModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token constant">BROADCASTING</span><span class="token operator">:</span>
                        <span class="token comment">// 广播模式，消费进度保存在消费者本地</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>offsetStore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LocalFileOffsetStore</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mQClientFactory<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token constant">CLUSTERING</span><span class="token operator">:</span>
                        <span class="token comment">// 集群模式，消费进度保存在 Broker</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>offsetStore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RemoteBrokerOffsetStore</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mQClientFactory<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">default</span><span class="token operator">:</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">setOffsetStore</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>offsetStore<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>offsetStore<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 初始化消息消费服务</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMessageListenerInner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">MessageListenerOrderly</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>consumeOrderly <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>consumeMessageService <span class="token operator">=</span>
                    <span class="token keyword">new</span> <span class="token class-name">ConsumeMessageOrderlyService</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">MessageListenerOrderly</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMessageListenerInner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMessageListenerInner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>consumeOrderly <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>consumeMessageService <span class="token operator">=</span>
                    <span class="token keyword">new</span> <span class="token class-name">ConsumeMessageConcurrentlyService</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMessageListenerInner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">this</span><span class="token punctuation">.</span>consumeMessageService<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 注册消费者到客户端实例</span>
            <span class="token keyword">boolean</span> registerOK <span class="token operator">=</span> mQClientFactory<span class="token punctuation">.</span><span class="token function">registerConsumer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>registerOK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>serviceState <span class="token operator">=</span> <span class="token class-name">ServiceState</span><span class="token punctuation">.</span><span class="token constant">CREATE_JUST</span><span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>consumeMessageService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getAwaitTerminationMillisWhenShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">MQClientException</span><span class="token punctuation">(</span><span class="token string">&quot;The consumer group[&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                            <span class="token operator">+</span> <span class="token string">&quot;] has been created before, specify another name please.&quot;</span> <span class="token operator">+</span> <span class="token class-name">FAQUrl</span><span class="token punctuation">.</span><span class="token function">suggestTodo</span><span class="token punctuation">(</span><span class="token class-name">FAQUrl</span><span class="token punctuation">.</span><span class="token constant">GROUP_NAME_DUPLICATE_URL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                            <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// 启动客户端实例</span>
            mQClientFactory<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;the consumer [{}] start OK.&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQPushConsumer<span class="token punctuation">.</span><span class="token function">getConsumerGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>serviceState <span class="token operator">=</span> <span class="token class-name">ServiceState</span><span class="token punctuation">.</span><span class="token constant">RUNNING</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token constant">RUNNING</span><span class="token operator">:</span>
        <span class="token keyword">case</span> <span class="token constant">START_FAILED</span><span class="token operator">:</span>
        <span class="token keyword">case</span> <span class="token constant">SHUTDOWN_ALREADY</span><span class="token operator">:</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">MQClientException</span><span class="token punctuation">(</span><span class="token string">&quot;The PushConsumer service state not OK, maybe started once, &quot;</span>
                                        <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>serviceState
                                        <span class="token operator">+</span> <span class="token class-name">FAQUrl</span><span class="token punctuation">.</span><span class="token function">suggestTodo</span><span class="token punctuation">(</span><span class="token class-name">FAQUrl</span><span class="token punctuation">.</span><span class="token constant">CLIENT_SERVICE_NOT_OK</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                        <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 从 Namesrv 更新路由信息</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateTopicSubscribeInfoWhenSubscriptionChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>mQClientFactory<span class="token punctuation">.</span><span class="token function">checkClientInBroker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 将客户端信息上报给 Broker</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>mQClientFactory<span class="token punctuation">.</span><span class="token function">sendHeartbeatToAllBrokerWithLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 唤醒重平衡线程，立即执行重平衡</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>mQClientFactory<span class="token punctuation">.</span><span class="token function">rebalanceImmediately</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-mqclientinstance-启动" tabindex="-1"><a class="header-anchor" href="#_4-2-mqclientinstance-启动" aria-hidden="true">#</a> 4.2 <code>MQClientInstance</code> 启动</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// MQClientInstance.java</span>
<span class="token doc-comment comment">/**
 * 启动客户端代理
 *
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">MQClientException</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span> <span class="token punctuation">{</span>

    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>serviceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token constant">CREATE_JUST</span><span class="token operator">:</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>serviceState <span class="token operator">=</span> <span class="token class-name">ServiceState</span><span class="token punctuation">.</span><span class="token constant">START_FAILED</span><span class="token punctuation">;</span>
                <span class="token comment">// If not specified,looking address from name server</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clientConfig<span class="token punctuation">.</span><span class="token function">getNamesrvAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>mQClientAPIImpl<span class="token punctuation">.</span><span class="token function">fetchNameServerAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// 启动通信模块</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>mQClientAPIImpl<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 启动定时任务（从 Namesrv 拉取路由、向 Broker 发送心跳等）</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startScheduledTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 启动拉取消息服务</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>pullMessageService<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 启动重平衡线程</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>rebalanceService<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 启动默认生产者（用于将消费失败的消息重新生产到 Broker）</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>defaultMQProducer<span class="token punctuation">.</span><span class="token function">getDefaultMQProducerImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;the client factory [{}] start OK&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clientId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>serviceState <span class="token operator">=</span> <span class="token class-name">ServiceState</span><span class="token punctuation">.</span><span class="token constant">RUNNING</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">START_FAILED</span><span class="token operator">:</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">MQClientException</span><span class="token punctuation">(</span><span class="token string">&quot;The Factory object[&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClientId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] has been created before, and failed.&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>欢迎关注公众号【消息中间件】（middleware-mq），更新消息中间件的源码解析和最新动态！</p><figure><img src="https://scarb-images.oss-cn-hangzhou.aliyuncs.com/img/202205170102971.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,66);function k(d,m){const a=t("ExternalLinkIcon");return p(),o("div",null,[n("p",null,[s("原文地址："),n("a",u,[s("http://hscarb.github.io/rocketmq/20220827-rocketmq-consumer-2-struct-and-init.html"),c(a)])]),r])}const b=e(i,[["render",k],["__file","20220827-rocketmq-consumer-2-struct-and-init.html.vue"]]);export{b as default};
